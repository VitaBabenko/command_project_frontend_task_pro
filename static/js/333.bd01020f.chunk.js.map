{"version":3,"file":"static/js/333.bd01020f.chunk.js","mappings":"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","sources":["components/ProjectOffice/ProjectOfficeStyle.jsx","components/ProjectOffice/ProjectOfficeColumns/ProjectOfficeColumns.jsx","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.jsx","components/ProjectOffice/ProjectCardAddButton/ProjectCardAddButton.jsx","components/ProjectOffice/ProjectOfficeItem.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeader.jsx","components/Modal/ModalColumn/ModalColumn.styled.jsx","components/Modal/ModalColumn/ModalColumn.jsx","components/ProjectOffice/AddColumnsButton/AddColumnsButton.jsx","components/ProjectOffice/ProjectOffice.jsx","pages/ScreensPage.jsx","redux/dashboards/selectors.js"],"sourcesContent":["import { styled } from '@mui/system';\nimport { Typography, Button, Card, CardActions, Divider } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const Wrapper = styled('div')({\n    margin: '20px', \n    display: 'flex', \n    justifyContent: 'space-between'\n});\n\nexport const FilterWrapper = styled('div')({\n    marginRight: '10px', \n    display: 'flex', \n    flexDirection: 'row', \n    alignItems: 'center' \n});\n\nexport const ActionsButton = styled('div')({\n    background: 'beige', \n    width: \"334px\", \n    height: '56px', \n    borderRadius: '8px', \n    padding: '20px',\n    display: 'flex', \n    justifyContent: 'space-between', \n});\n\nexport const ActionsIconsButton = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-end', \n    alignItems: 'center', \n    gap: '8px'\n});\n\nexport const CardWrapper = styled('div')({\n    display: 'flex', \n    justifyContent: 'space-between', \n    flexWrap: 'wrap'\n});\n\nexport const CardFooterStyled = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-start', \n    paddingRight: '20px', \n    paddingLeft: '20px', \n    gap: '15px'\n});\n\nexport const CardIconsWrapper = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-end',\n    paddingRight: '20px', \n    gap: '8px'\n});\n\nexport const CardStyled = styled(Card)({\n    maxWidth: '334px', \n    minHeight: '154px', \n    borderRadius: '8px', \n    margin: '20px'\n});\n\nexport const CardTitle = styled(Typography)({\n    fontWeight: '600', \n    fontSize: '14px', \n    lineHeight: '21px'\n});\n\nexport const CardFooterTitle = styled(Typography)({\n    fontWeight: '400', \n    fontSize: '10px', \n    lineHeight: '12px', \n    color: '#16161680'\n});\n\nexport const CardText= styled(Typography)({\n    fontWeight: '400', \n    fontSize: '12px', \n    lineHeight: '16px' \n});\n\nexport const CardActionsStyled= styled(CardActions)({\n    paddingRight: '20px', \n    paddingLeft: '20px'\n});\n\nexport const DividerStyled= styled(Divider)({\n    background: '#1616160', \n    width: '300px', \n    height: '1px'\n});\n\nexport const StackWrapper = styled(Stack)({\n    width: '330px', \n    height: '56px', \n    background: '#F6F6F7', \n    borderRadius: '8px' \n});\n\nexport const CardButtonStyled = styled(Stack)({\n    width: '330px', \n    height: '56px', \n    background: '#BEDBB0', \n    borderRadius: '8px' \n});\n\nexport const ButtonStyled = styled(Button)({\n    paddingLeft: '80px', \n    color: '#161616', \n    fontSize: '14px', \n    textTransform: 'none'\n});\n\nexport const AddIconStyled = styled(AddIcon)({\n    background: '#161616', \n    width: '28px', \n    height: '28px', \n    color: '#ffff', \n    borderRadius: '8px' \n});\n\nexport const Title = styled(Typography)({\n    fontWeight: 500, \n    fontSize: '18px', \n    lineHeight: '27px', \n    marginBottom: '5px' \n});\n\nexport const Text = styled(Typography)({\n    fontWeight: 500, \n    fontSize: '14px', \n    lineHeight: '21px'\n});\n\n","import { ActionsIconsButton } from '../ProjectOfficeStyle';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\n\n\nconst ProjectOfficeColumns = () => {\n  return (\n    <>\n        <ActionsIconsButton>\n            <EditIcon fontSize='small'  /> \n            <DeleteOutlineIcon fontSize='small' />\n        </ActionsIconsButton>\n    </> \n  );\n};\n\nexport default ProjectOfficeColumns;\n\n","import { CardWrapper, CardStyled, CardTitle, CardText, CardActionsStyled, DividerStyled, CardFooterStyled, CardFooterTitle, CardIconsWrapper } from '../ProjectOfficeStyle';\nimport CardContent from '@mui/material/CardContent';\nimport { CardActionArea } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\n\nconst ProjectOfficeCardItem = () => {\n  return (\n    <>\n        <CardWrapper>\n            {Array.from(Array(9)).map((_, index) => (\n                <CardStyled key={index}>\n                    <CardActionArea>\n                        <CardContent>\n                            <CardTitle variant=\"h5\" component=\"div\">\n                                The Watch Spot Design\n                            </CardTitle>\n                            <CardText color=\"text.secondary\">\n                                Create a visually stunning and eye-catching watch dial design that embodies our brand's...\n                            </CardText>\n                        </CardContent>\n                    </CardActionArea>\n                    <CardActionsStyled>\n                        <DividerStyled />\n                    </CardActionsStyled>\n                    <CardFooterStyled>\n                        <CardFooterTitle>\n                            Priority\n                        </CardFooterTitle>\n                        <CardFooterTitle>\n                            Deadline\n                        </CardFooterTitle>\n                    </CardFooterStyled>\n                    <CardIconsWrapper>\n                        <NotificationsNoneIcon fontSize='small' />\n                        <ArrowCircleRightIcon fontSize='small' />\n                        <EditIcon fontSize='small' />\n                        <DeleteOutlineIcon fontSize='small' />\n                    </CardIconsWrapper>\n                </CardStyled>\n            ))}\n        </CardWrapper>\n    </> \n  );\n};\n\nexport default ProjectOfficeCardItem;\n\n","import { Wrapper, ButtonStyled, AddIconStyled, CardButtonStyled } from '../ProjectOfficeStyle';\n\nconst ProjectCardAddButton = () => {\n  return (\n    <>\n    <Wrapper>\n        {Array.from(Array(3)).map((_, index) => (\n            <CardButtonStyled direction=\"row\" spacing={2} key={index}>\n            <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another card\n            </ButtonStyled>\n            </CardButtonStyled>\n        ))}\n    </Wrapper>\n\n\n    </> \n  );\n};\n\nexport default ProjectCardAddButton;\n\n","import { Wrapper, ActionsButton } from './ProjectOfficeStyle';\nimport ProjectOfficeColumns from './ProjectOfficeColumns/ProjectOfficeColumns';\nimport ProjectOfficeCardItem from './ProjectOfficeCardItem/ProjectOfficeCardItem';\nimport ProjectCardAddButton from './ProjectCardAddButton/ProjectCardAddButton';\n\n\nconst ProjectOfficeItem = ({ column: { title } }) => {\n  console.log(title)\n  return (\n    <>\n        <Wrapper>\n            <ActionsButton>\n                  { title }\n                <ProjectOfficeColumns />\n            </ActionsButton>\n            <ActionsButton>\n          { title}\n                <ProjectOfficeColumns />\n            </ActionsButton>\n            <ActionsButton>\n          { title}\n                <ProjectOfficeColumns />\n            </ActionsButton>\n        </Wrapper>\n        <ProjectOfficeCardItem />\n        <ProjectCardAddButton />\n\n    </> \n  );\n};\n\nexport default ProjectOfficeItem;\n","import FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport { FilterWrapper, Title, Wrapper, Text } from '../ProjectOfficeStyle';\n\n\nconst ProjectOfficeHeader = () => {\n  return (\n    <>\n        <Wrapper>\n            <Title>Project</Title>\n            <FilterWrapper>\n                <FilterAltIcon />\n                <Text>Filters</Text>\n            </FilterWrapper>\n        </Wrapper>\n    </> \n  );\n};\n\nexport default ProjectOfficeHeader;\n\n","import { TextField, Dialog } from \"@mui/material\";\nimport { styled } from '@mui/system';\n\n\nexport const StyleInput = styled(TextField)({\n  backgroundColor: \"#1F1F1F\",\n  maxWidth: \"302px\",\n   marginBottom: '24px',\n\n        \"& label.Mui-focused\": {\n          color: \"#fff\",\n        },\n\n  \"& .MuiInputBase-input\": {\n          padding: \"14px 16px\",\n          color: \"#fff\",\n          fontFamily: \"Poppins, sans-serif\",\n        },\n        \"& .MuiFormLabel-root\": {\n          color: \"#fff\",\n          fontFamily: \"Poppins, sans-serif\",\n        },\n\n  \"& .MuiInputBase-root\": {\n          opacity: '0.4',\n    borderRadius: \"8px\",\n    '&:hover': {\n      opacity: '1.0',\n    },\n\n    '&:focus': {\n      opacity: '1.0',\n    }\n        },\n\n        \"& .MuiOutlinedInput-root\": {\n          \"& fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n          \"&:hover fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n          \"&.Mui-focused fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n        },\n\n});\n\nexport const CustomDialog = styled(Dialog)({\n  \n  '& .MuiPaper-root': {\n    backgroundColor: 'black',\n    maxWidth: '350px',\n    padding: '24px',\n  margin: '0px',\n  },\n\n  '& .MuiDialogContent-root': {\n    padding: '0px',\n  }\n});","import { DialogTitle, Box, DialogContent } from \"@mui/material\";\nimport { CustomButton } from \"../../Button/CustomButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CustomDialog, StyleInput } from \"./ModalColumn.styled\";\nimport { useState } from \"react\";\n\nexport const ModalColumn = ({ isOpen, onClose, type = \"create\", initialState = '', onRemove }) => {\n  const [title, setTitle] = useState(initialState);\n\n  const reset = () => {\n    setTitle('');\n  }\n\n  const handleClose = () => { \n    reset();\n    onClose();\n  }\n\n  const handleChange = ({ target }) => { \n    setTitle(target.value);\n  }\n\n  return (\n    <CustomDialog\n      open={isOpen}\n      fullWidth={true}\n      onClose={handleClose}\n      position=\"relative\"\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        marginBottom=\"24px\"\n      >\n        <DialogTitle\n          sx={{\n            color: \"white\",\n            padding: \"0\",\n            fontFamily: \"Poppins, sans-serif\",\n            fontSize: \"18px\",\n            lineHeight: \"1.5\",\n          }}\n        >\n          {type === 'create' ? 'Add Column' : 'Edit Column'}\n        </DialogTitle>\n        <CloseIcon\n          onClick={handleClose}\n          sx={{\n            color: \"white\",\n            position: \"absolute\",\n            top: \"14px\",\n            right: \"14px\",\n            height: \"18px\",\n            width: \"18px\",\n            cursor: \"pointer\",\n          }}\n        />\n      </Box>\n      <DialogContent>\n        <StyleInput\n          autoFocus\n          id=\"title\"\n          placeholder=\"Title\"\n          name=\"title\"\n          type=\"text\"\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: false }}\n          value={title}\n          onChange={handleChange}\n        />\n        <CustomButton onClick={() => { onRemove(title);  handleClose()}}>\n                  Add\n        </CustomButton>\n      </DialogContent>\n    </CustomDialog>\n  );\n};","import { CustomButton } from 'components/Button/CustomButton';\nimport { useState } from 'react';\n\nimport { StackWrapper } from '../ProjectOfficeStyle';\n\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\n// import { useParams } from 'react-router-dom';\n\nconst AddColumnButton = ({ handleAddColumn }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  // const columns = [\n  //   { columnName: 'one', id: 1 },\n  //   { columnName: 'two', id: 2 },\n  // ];\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  // const handleCreateColumn = (columnName) => {\n  //   //   const newArr = [...columns, { id: 4, columnName: columnName }];\n  //     console.log(columns)\n  // }\n\n  return (\n    <>\n      <StackWrapper direction=\"row\" spacing={2}>\n        <CustomButton isWhiteBackground={true} onClick={handleToggleModal}>\n          Add\n        </CustomButton>\n        <ModalColumn\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          onRemove={handleAddColumn}\n        />\n        {/* <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another column\n            </ButtonStyled> */}\n      </StackWrapper>\n    </>\n  );\n};\n\nexport default AddColumnButton;\n","// import { useState } from 'react';\n\nimport ProjectOfficeItem from './ProjectOfficeItem';\nimport { useEffect } from 'react';\n// import { getColumns } from 'services/fetchColumn';\nimport ProjectOfficeHeader from './ProjectOfficeHeader/ProjectOfficeHeader';\nimport AddColumnButton from './AddColumnsButton/AddColumnsButton';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addColumn, getColumnsForBoard } from 'redux/dashboards/operation';\nimport { selectColumnsForBoard } from 'redux/dashboards/selectors';\n\nconst ProjectOffice = () => {\n  const { boardName } = useParams();\n  const columns = useSelector(state => selectColumnsForBoard(state, boardName));\n\n  const dispatch = useDispatch();\n\n  const handleAddColumn = columnName => {\n    dispatch(addColumn({ title: columnName, boardId: boardName }));\n  };\n\n  useEffect(() => {\n    dispatch(getColumnsForBoard(boardName));\n  }, [dispatch, boardName]);\n\n  console.log(columns);\n\n  return (\n    <>\n      <ProjectOfficeHeader />\n      <AddColumnButton handleAddColumn={handleAddColumn} />\n      {columns.length > 0 &&\n        columns.map(column => {\n          return <ProjectOfficeItem column={column} key={column._id} />;\n        })}\n      {/* <ProjectOfficeItem column={columns} /> */}\n    </>\n  );\n};\n\nexport default ProjectOffice;\n","import ProjectOffice from \"../components/ProjectOffice/ProjectOffice\";\n\nconst ScreensPage = () => {\n  return (\n    <>\n      <ProjectOffice />\n    </>\n  );\n};\n\nexport default ScreensPage;\n","export const selectDashboards = state => state.dashboard.dashboards;\nexport const selectColumnsForBoard = (state, boardId) => {\n  const board = state.dashboard.dashboards.find(board => board._id === boardId);\n  return board ? board.columns : [];\n};"],"names":["Wrapper","styled","margin","display","justifyContent","FilterWrapper","marginRight","flexDirection","alignItems","ActionsButton","background","width","height","borderRadius","padding","ActionsIconsButton","gap","CardWrapper","flexWrap","CardFooterStyled","paddingRight","paddingLeft","CardIconsWrapper","CardStyled","Card","maxWidth","minHeight","CardTitle","Typography","fontWeight","fontSize","lineHeight","CardFooterTitle","color","CardText","CardActionsStyled","CardActions","DividerStyled","Divider","StackWrapper","Stack","CardButtonStyled","ButtonStyled","Button","textTransform","AddIconStyled","AddIcon","Title","marginBottom","Text","_jsx","_Fragment","children","_jsxs","EditIcon","DeleteOutlineIcon","Array","from","map","_","index","CardActionArea","CardContent","variant","component","NotificationsNoneIcon","ArrowCircleRightIcon","direction","spacing","startIcon","_ref","title","column","console","log","ProjectOfficeColumns","ProjectOfficeCardItem","ProjectCardAddButton","FilterAltIcon","StyleInput","TextField","backgroundColor","fontFamily","opacity","borderColor","CustomDialog","Dialog","ModalColumn","isOpen","onClose","_ref$type","type","_ref$initialState","initialState","onRemove","_useState","useState","_useState2","_slicedToArray","setTitle","handleClose","open","fullWidth","position","Box","DialogTitle","sx","CloseIcon","onClick","top","right","cursor","DialogContent","autoFocus","id","placeholder","name","InputLabelProps","shrink","value","onChange","_ref2","target","CustomButton","handleAddColumn","setIsOpen","handleToggleModal","prevstate","isWhiteBackground","boardName","useParams","columns","useSelector","state","selectColumnsForBoard","dispatch","useDispatch","useEffect","getColumnsForBoard","ProjectOfficeHeader","AddColumnButton","columnName","addColumn","boardId","length","ProjectOfficeItem","_id","ProjectOffice","selectDashboards","dashboard","dashboards","board","find"],"sourceRoot":""}