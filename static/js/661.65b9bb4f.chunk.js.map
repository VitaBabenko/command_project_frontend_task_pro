{"version":3,"file":"static/js/661.65b9bb4f.chunk.js","mappings":"qTAKaA,GAAUC,EAAAA,EAAAA,GAAO,MAAPA,CAAc,CACnCC,SAAU,WACVC,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBC,WAAY,MACZC,YAAa,OACbC,IAAK,QAUMC,IAPgBR,EAAAA,EAAAA,GAAO,MAAPA,CAAc,CACzCM,YAAa,OACbJ,QAAS,OACTO,cAAe,MACfN,WAAY,YAGoBH,EAAAA,EAAAA,GAAO,MAAPA,CAAc,CAC9CE,QAAS,OACTE,eAAgB,WAChBD,WAAY,YAWDO,IARcV,EAAAA,EAAAA,GAAO,MAAPA,CAAc,CACvCE,QAAS,OACTE,eAAgB,gBAChBO,SAAU,OACVC,OAAQ,QACRC,SAAU,YAGoBb,EAAAA,EAAAA,GAAO,MAAPA,CAAc,CAC5CE,QAAS,OACTE,eAAgB,aAChBU,aAAc,OACdC,YAAa,OACbR,IAAK,UAGMS,GAAmBhB,EAAAA,EAAAA,GAAO,MAAPA,CAAc,CAC5CE,QAAS,OACTE,eAAgB,WAChBU,aAAc,OACdP,IAAK,MACLU,UAAW,QAGAC,GAAoBlB,EAAAA,EAAAA,GAAOmB,EAAAA,EAAPnB,CAAoB,CACnDc,aAAc,OACdC,YAAa,S,IAGaf,EAAAA,EAAAA,GAAOoB,EAAAA,EAAPpB,CAAc,CACxCqB,MAAO,QACPT,OAAQ,OACRU,WAAY,UACZC,aAAc,MACdC,aAAc,SAGgBxB,EAAAA,EAAAA,GAAOoB,EAAAA,EAAPpB,CAAc,CAC5CqB,MAAO,QACPT,OAAQ,OACRU,WAAY,UACZC,aAAc,MACdC,aAAc,UAGYxB,EAAAA,EAAAA,GAAOyB,EAAAA,EAAPzB,CAAe,CACzCe,YAAa,OACbW,MAAO,UACPC,SAAU,OACVC,cAAe,UAGY5B,EAAAA,EAAAA,GAAO6B,EAAAA,EAAP7B,CAAgB,CAC3CqB,MAAO,OACPT,OAAQ,OACRW,aAAc,Q,sCCjFHO,EAAa9B,EAAAA,GAAAA,IAAU+B,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wPAU9B,SAAAC,GACA,OAAQA,EAAMC,UACZ,IAAK,MACH,MAAO,UACT,IAAK,SACH,MAAO,UACT,IAAK,OACH,MAAO,UACT,IAAK,UACH,MAAO,+BACT,QACE,MAAO,UAEb,IAGSC,EAAYnC,EAAAA,GAAAA,EAAQoC,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iIAQpBK,EAAWrC,EAAAA,GAAAA,EAAQsC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kMAWnBO,EAAkBvC,EAAAA,GAAAA,EAAQwC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,6HAQ1BS,EAAgBzC,EAAAA,GAAAA,IAAU0C,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+EAM1BW,EAAgB3C,EAAAA,GAAAA,IAAU4C,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,uFAM1Ba,EAAc7C,EAAAA,GAAAA,EAAQ8C,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,+HAQtBe,EAAgB/C,EAAAA,GAAAA,IAAUgD,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,4EAM1BiB,EAAejD,EAAAA,GAAAA,IAAUkD,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,sFAGtB,SAAAC,GACZ,OAAQA,EAAMC,UACZ,IAAK,MACH,MAAO,UACT,IAAK,SACH,MAAO,UACT,IAAK,OACH,MAAO,UACT,IAAK,UACH,MAAO,+BACT,QACE,MAAO,UAEb,IAIWiB,EAAiBnD,EAAAA,GAAAA,IAAUoD,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,wJAU3BqB,EAAerD,EAAAA,GAAAA,IAAUsD,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,mDAKzBuB,EAAqBvD,EAAAA,GAAAA,IAAUwD,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,uCAChC,SAAAC,GACV,QAAQ,GACJ,KAAKA,EAAMwB,SAAW,EACpB,MAAO,UACT,KAAKxB,EAAMwB,SAAW,GACpB,MAAO,UACT,QACE,MAAO,uBAEf,I,qEC9HA,SAASC,EAAUC,EAAOC,GACxB,OACED,EAAME,YAAcD,EAAMC,WAC1BF,EAAMG,aAAeF,EAAME,YAC3BH,EAAMI,gBAAkBH,EAAMG,aAElC,CAEO,I,oJAAMC,GAAa,SAAAC,GACxB,IAAMC,EAAQ,IAAIC,KACZC,EAAW,IAAID,KAAKD,GACpBG,EAAiBJ,EAAKK,mBAAmB,QAAS,CACtDC,QAAS,SAELC,EAAqBP,EAAKK,mBAAmB,QAAS,CAC1DG,MAAO,SAKT,OAFAL,EAASM,QAAQN,EAASP,UAAY,GAElCH,EAAUO,EAAMC,GACZ,UAANS,OAAiBH,EAAkB,KAAAG,OAAIV,EAAKJ,WACnCH,EAAUO,EAAMG,GACnB,aAANO,OAAoBH,EAAkB,KAAAG,OAAIV,EAAKJ,WAE5B,GAAAc,OAAMN,EAAc,KAAAM,OAAIV,EAAKJ,UAGpD,E,qBCzBae,IAAe5E,EAAAA,EAAAA,IAAO6E,GAAAA,EAAP7E,CAAe,CACzC,mBAAoB,CAClB8E,gBAAiB,0BACjBC,SAAU,QACVC,QAAS,OACTC,OAAQ,MACRC,OAAQ,oCACR3D,aAAc,MACdV,SAAU,UAGZ,2BAA4B,CAC1BmE,QAAS,SAwBPG,IApBsBnF,EAAAA,GAAAA,IAAU+B,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gbAoBboD,EAAAA,EAAAA,IAAGhD,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,6EAKfqD,GAAcrF,EAAAA,GAAAA,OAAasC,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,6QAe3BsD,GAAOtF,EAAAA,GAAAA,KAAWwC,KAAAA,IAAAR,EAAAA,EAAAA,GAAA,4EAKlBuD,GAAWvF,EAAAA,GAAAA,MAAY0C,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,oIAOvBwD,GAAYxF,EAAAA,GAAAA,MAAY4C,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,6YAU/BmD,GAGAA,IAOOM,GAAezF,EAAAA,GAAAA,SAAe8C,KAAAA,IAAAd,EAAAA,EAAAA,GAAA,0eAerCmD,GAGAA,IAOOO,GAAa1F,EAAAA,GAAAA,IAAUgD,KAAAA,IAAAhB,EAAAA,EAAAA,GAAA,4EAMvB2D,GAAa3F,EAAAA,GAAAA,MAAYkD,KAAAA,IAAAlB,EAAAA,EAAAA,GAAA,wMACR,SAAAC,GAC1B,OAAQA,EAAM2D,OACZ,IAAK,MACH,MAAO,UACT,IAAK,SACH,MAAO,UACT,IAAK,OACH,MAAO,UACT,IAAK,UACH,MAAO,+BACT,QACE,MAAO,UAEb,IAUWC,GAAc7F,EAAAA,GAAAA,MAAYoD,KAAAA,IAAApB,EAAAA,EAAAA,GAAA,qaAEvB2D,IAmBHG,GAAO9F,EAAAA,GAAAA,IAAUsD,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,qJAUjB+D,GAAO/F,EAAAA,GAAAA,KAAWwD,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,+FAMlBgE,GAAgBhG,EAAAA,GAAAA,IAAUiG,KAAAA,IAAAjE,EAAAA,EAAAA,GAAA,4OAe1BkE,GAAelG,EAAAA,GAAAA,KAAWmG,KAAAA,IAAAnE,EAAAA,EAAAA,GAAA,sEAK1BoE,GAAgBpG,EAAAA,GAAAA,IAAUqG,KAAAA,IAAArE,EAAAA,EAAAA,GAAA,kF,4CCxM1BsE,GAAU,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAASC,EAAUC,EAAQC,GAAI,IAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE1CC,GAAAA,EAAAA,IAAU,WAAD1C,OACdiC,EAAO,aAAAjC,OAAYkC,EAAQ,WAAAlC,OAAUmC,EAAM,KACtDC,GACA,KAAD,EAHQ,OAAHC,EAAGE,EAAAI,KAAAJ,EAAAK,OAAA,SAIFP,GAAG,UAAAE,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEK,MAAXA,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACW,OAA3BM,GAAAA,GAAAA,MAAY,eAAeR,EAAAK,OAAA,qBAGd,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACuC,OAAvDM,GAAAA,GAAAA,MAAY,2CAA2CR,EAAAK,OAAA,qBAG1C,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACS,OAAzBM,GAAAA,GAAAA,MAAY,aAAaR,EAAAK,OAAA,qBAGZ,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACS,OAAzBM,GAAAA,GAAAA,MAAY,aAAaR,EAAAK,OAAA,kBAG3BG,GAAAA,GAAAA,MAAYR,EAAAM,GAAEG,SACdC,QAAQC,IAAI,YAAaX,EAAAM,GAAEG,SAAS,yBAAAT,EAAAY,OAAA,GAAAnB,EAAA,kBAEvC,gBA3BsBoB,EAAAC,EAAAC,EAAAC,GAAA,OAAA3B,EAAA4B,MAAA,KAAAC,UAAA,KCAVC,GAAO,eAAA9B,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOI,EAAMH,EAASC,GAAQ,IAAAG,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE/BC,GAAAA,EAAAA,KAAW,WAAD1C,OACfiC,EAAO,aAAAjC,OAAYkC,EAAQ,UACtCE,GACA,KAAD,EAHQ,OAAHC,EAAGE,EAAAI,KAAAJ,EAAAK,OAAA,SAKFP,GAAG,UAAAE,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEK,MAAXA,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACW,OAA3BM,GAAAA,GAAAA,MAAY,eAAeR,EAAAK,OAAA,qBAGd,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACuC,OAAvDM,GAAAA,GAAAA,MAAY,2CAA2CR,EAAAK,OAAA,qBAG1C,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACS,OAAzBM,GAAAA,GAAAA,MAAY,aAAaR,EAAAK,OAAA,qBAGZ,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACS,OAAzBM,GAAAA,GAAAA,MAAY,aAAaR,EAAAK,OAAA,kBAG3BG,GAAAA,GAAAA,MAAYR,EAAAM,GAAEG,SACdC,QAAQC,IAAI,YAAaX,EAAAM,GAAEG,SAAS,yBAAAT,EAAAY,OAAA,GAAAnB,EAAA,kBAEvC,gBA5BmBoB,EAAAC,EAAAC,GAAA,OAAA1B,EAAA4B,MAAA,KAAAC,UAAA,K,UC0BPE,GAAY,SAAH/B,GAOf,IANLgC,EAAMhC,EAANgC,OACAC,EAAOjC,EAAPiC,QACA5B,EAAOL,EAAPK,QACAC,EAAQN,EAARM,SACA4B,EAAQlC,EAARkC,SACAC,EAAInC,EAAJmC,KAEAC,EAMID,GAAIE,EAAAA,EAAAA,GAAA,GACCF,GACL,CACEG,IAAK,KACLC,MAAO,GACPC,YAAa,GACb7G,SAAU,UACV8G,SAAU,IAAI7E,MAZb2C,EAAM6B,EAAXE,IACAC,EAAKH,EAALG,MACAC,EAAWJ,EAAXI,YACA7G,EAAQyG,EAARzG,SACA8G,EAAQL,EAARK,SAWFC,GAMIC,EAAAA,EAAAA,IAAQ,CAAEC,cAAe,CAAEL,MAAAA,EAAOC,YAAAA,EAAa7G,SAAAA,EAAU8G,SAAAA,KAL3DI,EAAQH,EAARG,SACAC,EAAYJ,EAAZI,aACAC,EAAQL,EAARK,SACAC,EAAKN,EAALM,MACaC,EAAMP,EAAnBQ,UAAaD,OAGTE,EAAQ,eAAAC,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMI,GAAI,IAAAC,EAAA4C,EAAA,OAAAnD,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACrBsB,EAAK,CAADxB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACYd,GAAWM,EAASC,EAAUC,EAAQC,GAAM,KAAD,EAAvDC,EAAGE,EAAAI,KAETmB,GAAS,SAAAoB,GACP,OAAOA,EAAEC,KAAI,SAAApB,GACX,OAAIA,EAAKG,MAAQ7B,EAAID,KAAK2B,KAAKG,IACtB7B,EAAID,KAAK2B,KAEXA,CACT,GACF,IAAGxB,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,EAEeiB,GAAQtB,EAAMH,EAASC,GAAU,KAAD,EAA5CG,EAAGE,EAAAI,KAETmB,GAAS,SAAAsB,GACP,MAAM,GAANpF,QAAAqF,EAAAA,EAAAA,GAAWD,GAAC,CAAE/C,EAAID,KAAK2B,MACzB,IAAG,QAELa,IACAf,IAAU,yBAAAtB,EAAAY,OAAA,GAAAnB,EAAA,KACX,gBArBaoB,GAAA,OAAA4B,EAAAxB,MAAA,KAAAC,UAAA,KAsBd6B,GAAoCC,EAAAA,EAAAA,UAClC,IAAI/F,MAAK,IAAIA,MAAOgG,eAAeC,WACpCC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAFMM,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAIhCI,GAA8BP,EAAAA,EAAAA,UAAS,IAAI/F,KAAK6E,IAAU0B,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnDE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA4CX,EAAAA,EAAAA,WAAS,GAAMY,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAaxC,OACEG,EAAAA,GAAAA,MAACrG,GAAY,CAACsG,KAAM3C,EAAQC,QAASA,EAAQ2C,SAAA,EAC3CC,EAAAA,GAAAA,KAAC/F,GAAW,CAACgG,KAAK,SAASC,QAAS9C,EAAQ2C,UAC1CC,EAAAA,GAAAA,KAACG,GAAAA,EAAS,CAACC,GAAI,CAAE7J,SAAU,UAAY8J,MAAO,CAAExK,UAAW,aAE7DgK,EAAAA,GAAAA,MAAC3F,GAAI,CAACoE,SAAUL,EAAaK,GAAUyB,SAAA,EACnCzC,IAAQ0C,EAAAA,GAAAA,KAAC7F,GAAQ,CAAA4F,SAAE,aACpBzC,IAAQ0C,EAAAA,GAAAA,KAAC7F,GAAQ,CAAA4F,SAAE,eACb,OAAN3B,QAAM,IAANA,OAAM,EAANA,EAAQV,SACPsC,EAAAA,GAAAA,KAAA,KAAGK,MAAO,CAAE/J,MAAO,OAAQyJ,SAAQ,OAAN3B,QAAM,IAANA,OAAM,EAANA,EAAQV,MAAMnB,WAE7CyD,EAAAA,GAAAA,KAAC5F,IAASoD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJQ,EAAS,QAAS,CACpBsC,UAAW,EACXC,SAAU,oDACV,IACFC,YAAY,YAGP,OAANpC,QAAM,IAANA,OAAM,EAANA,EAAQT,eACPqC,EAAAA,GAAAA,KAAA,KAAGK,MAAO,CAAE/J,MAAO,OAAQyJ,SAAQ,OAAN3B,QAAM,IAANA,OAAM,EAANA,EAAQT,YAAYpB,WAEnDyD,EAAAA,GAAAA,KAAC3F,IAAYmD,EAAAA,EAAAA,GAAA,CACXgD,YAAY,eACRxC,EAAS,cAAe,CAC1BsC,UAAW,EACXC,SAAU,sDAIdP,EAAAA,GAAAA,KAACrF,GAAI,CAAAoF,SAAC,iBACNF,EAAAA,GAAAA,MAACvF,GAAU,CAAAyF,SAAA,EACTF,EAAAA,GAAAA,MAACnF,GAAI,CAAAqF,SAAA,EACHC,EAAAA,GAAAA,KAACvF,IAAW+C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACVyC,KAAK,QACLQ,GAAG,OACCzC,EAAS,aAAW,IACxBxD,MAAM,UAERwF,EAAAA,GAAAA,KAACzF,GAAU,CACTmG,QAAQ,MACRlG,MAAM,MACNmG,QAAwC,QAA/B3C,EAAS,YAAYxD,YAGlCqF,EAAAA,GAAAA,MAACnF,GAAI,CAAAqF,SAAA,EACHC,EAAAA,GAAAA,KAACvF,IAAW+C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACVyC,KAAK,QACLQ,GAAG,UACCzC,EAAS,aAAW,IACxBxD,MAAM,aAERwF,EAAAA,GAAAA,KAACzF,GAAU,CACTmG,QAAQ,SACRlG,MAAM,SACNmG,QAAwC,WAA/B3C,EAAS,YAAYxD,YAIlCqF,EAAAA,GAAAA,MAACnF,GAAI,CAAAqF,SAAA,EACHC,EAAAA,GAAAA,KAACvF,IAAW+C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACVyC,KAAK,QACLQ,GAAG,QACCzC,EAAS,aAAW,IACxBxD,MAAM,WAERwF,EAAAA,GAAAA,KAACzF,GAAU,CACTmG,QAAQ,OACRlG,MAAM,OACNmG,QAAwC,SAA/B3C,EAAS,YAAYxD,YAIlCqF,EAAAA,GAAAA,MAACnF,GAAI,CAAAqF,SAAA,EACHC,EAAAA,GAAAA,KAACvF,IAAW+C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACVyC,KAAK,QACLQ,GAAG,WACCzC,EAAS,WAAY,CAAEuC,UAAU,KAAQ,IAC7C/F,MAAM,cAGRwF,EAAAA,GAAAA,KAACzF,GAAU,CACTmG,QAAQ,UACRlG,MAAM,UACNmG,QAAwC,YAA/B3C,EAAS,YAAYxD,eAIpCwF,EAAAA,GAAAA,KAACrF,GAAI,CAAAoF,SAAC,cACNF,EAAAA,GAAAA,MAACjF,GAAa,CAACsF,QA5FI,WACvBN,GAAkB,SAAAgB,GAAS,OAAKA,CAAS,GAC3C,EA0F+Cb,SAAA,EACvCC,EAAAA,GAAAA,KAAClF,GAAY,CAAAiF,SAAEnH,GAAW2G,MAC1BS,EAAAA,GAAAA,KAAChF,GAAa,CACZqF,MAAO,CAAEpK,MAAO,GAAIT,OAAQ,IAC5B,aAAW,yBAAwBuK,UAEnCC,EAAAA,GAAAA,KAAA,OAAKa,KAAMC,EAAAA,EAAS,2BAGxBd,EAAAA,GAAAA,KAAA,SAAAxC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMQ,EAAS,WAAY,CAAExD,MAAO2E,EAAW4B,cAAa,IAC1DV,MAAO,CAAEvL,QAAS,WAEnB6K,IACCK,EAAAA,GAAAA,KAACgB,IAAU,CACTC,SAAU,IAAIlI,KACdmI,SApHoB,SAAArI,GAC5B,IAAMsI,EAAMtI,EAAKkG,cACXqC,EAAO,IAAIrI,KAAKoI,GAAKnC,UAC3BQ,EAAW3G,GACXuG,EAAcgC,GACdlD,EAAS,WAAYkD,EAAKL,YAC1BnB,GAAkB,EACpB,EA8GUyB,WAAW,aACXC,QAAM,EACNC,QAAS,IAAIxI,OAIhBuE,IAAS0C,EAAAA,GAAAA,KAACwB,GAAAA,EAAY,CACnBvB,KAAK,SACLwB,aAAc,CACVvL,WAAY,iCACZI,MAAO,4BACPL,MAAO,QACPT,OAAQ,QAEZ6K,MAAO,CAACnK,WAAY,kCACpBwL,YAAa,CAACC,OAAQ,0BAA0B5B,SAE/C,UAGHzC,IAAQ0C,EAAAA,GAAAA,KAACwB,GAAAA,EAAY,CACnBvB,KAAK,SACLwB,aAAc,CACVvL,WAAY,iCACZI,MAAO,4BACPL,MAAO,QACPT,OAAQ,QAEZ6K,MAAO,CAACnK,WAAY,kCACpBwL,YAAa,CAACC,OAAQ,0BAA0B5B,SAE/C,aAMb,ECpPa6B,GAAoB,SAAAhE,GAC/B,IAAMiE,EAAU,IAAI9I,KAAK6E,GACnBkE,EAAMD,EAAQpJ,UACdY,EAAQwI,EAAQnJ,WAAa,EAC7BqJ,EAAc1I,EAAQ,GAAE,IAAAE,OAAOF,GAAK,GAAAE,OAAQF,GAE5C2I,EAAOH,EAAQlJ,cACrB,MAAM,GAANY,OAAUuI,EAAG,KAAAvI,OAAIwI,EAAW,KAAAxI,OAAIyI,EAClC,ECLaC,GAAU,eAAA9G,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAASC,EAAUC,GAAM,OAAAL,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEhDC,GAAAA,EAAAA,OAAa,WAAD1C,OACLiC,EAAO,aAAAjC,OAAYkC,EAAQ,WAAAlC,OAAUmC,IAChD,KAAD,SAAAI,EAAAK,OAAA,UACM,GAAI,UAAAL,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEI,MAAXA,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACW,OAA3BM,GAAAA,GAAAA,MAAY,eAAeR,EAAAK,OAAA,qBAGd,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACuC,OAAvDM,GAAAA,GAAAA,MAAY,2CAA2CR,EAAAK,OAAA,qBAG1C,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACS,OAAzBM,GAAAA,GAAAA,MAAY,aAAaR,EAAAK,OAAA,qBAGZ,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACS,OAAzBM,GAAAA,GAAAA,MAAY,aAAaR,EAAAK,OAAA,kBAG3BG,GAAAA,GAAAA,MAAYR,EAAAM,GAAEG,SAAS,yBAAAT,EAAAY,OAAA,GAAAnB,EAAA,kBAE1B,gBAzBsBoB,EAAAC,EAAAC,GAAA,OAAA1B,EAAA4B,MAAA,KAAAC,UAAA,K,WCgCVkF,GAAYtN,EAAAA,GAAAA,IAAU+B,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,mPAatBuL,GAAOvN,EAAAA,GAAAA,GAASoC,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,0BAIhBP,GAASzB,EAAAA,GAAAA,OAAasC,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,8LAatBwL,GAAQxN,EAAAA,GAAAA,KAAWwC,KAAAA,IAAAR,EAAAA,EAAAA,GAAA,wJAenByL,IALYzN,EAAAA,GAAAA,KAAW0C,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,2DAKZhC,EAAAA,GAAAA,IAAU4C,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,2DAKrB0L,GAAW1N,EAAAA,GAAAA,GAAS8C,KAAAA,IAAAd,EAAAA,EAAAA,GAAA,2PAS3BP,GAIAgM,IC/FOE,GAAe,eAAApH,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAASC,EAAUC,EAAQC,GAAI,IAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE/CC,GAAAA,EAAAA,IAAU,WAAD1C,OACdiC,EAAO,aAAAjC,OAAYkC,EAAQ,WAAAlC,OAAUmC,EAAM,KACtDC,GACA,KAAD,EAHQ,OAAHC,EAAGE,EAAAI,KAAAJ,EAAAK,OAAA,SAIFP,GAAG,UAAAE,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEK,MAAXA,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACW,OAA3BM,GAAAA,GAAAA,MAAY,eAAeR,EAAAK,OAAA,qBAGd,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACuC,OAAvDM,GAAAA,GAAAA,MAAY,2CAA2CR,EAAAK,OAAA,qBAG1C,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACS,OAAzBM,GAAAA,GAAAA,MAAY,aAAaR,EAAAK,OAAA,qBAGZ,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACS,OAAzBM,GAAAA,GAAAA,MAAY,aAAaR,EAAAK,OAAA,kBAG3BG,GAAAA,GAAAA,MAAYR,EAAAM,GAAEG,SAAS,yBAAAT,EAAAY,OAAA,GAAAnB,EAAA,kBAE1B,gBA1B2BoB,EAAAC,EAAAC,EAAAC,GAAA,OAAA3B,EAAA4B,MAAA,KAAAC,UAAA,K,UCAfwF,GAAU,eAAArH,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAASC,GAAQ,IAAAgH,EAAA9G,EAAA,OAAAN,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEvBC,GAAAA,EAAAA,IAAU,WAAD1C,OACnBiC,EAAO,aAAAjC,OAAYkC,EAAQ,WACtC,KAAD,EAFW,OAEXgH,EAAA3G,EAAAI,KAFOP,EAAI8G,EAAJ9G,KAAIG,EAAAK,OAAA,SAGLR,GAAI,UAAAG,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEI,MAAXA,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACuC,OAAvDM,GAAAA,GAAAA,MAAY,2CAA2CR,EAAAK,OAAA,qBAG1C,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACS,OAAzBM,GAAAA,GAAAA,MAAY,aAAaR,EAAAK,OAAA,qBAGZ,MAAXL,EAAAM,GAAEC,KAAY,CAAAP,EAAAE,KAAA,SACS,OAAzBM,GAAAA,GAAAA,MAAY,aAAaR,EAAAK,OAAA,kBAG3BG,GAAAA,GAAAA,MAAYR,EAAAM,GAAEG,SACdC,QAAQC,IAAI,YAAaX,EAAAM,GAAEG,SAAS,yBAAAT,EAAAY,OAAA,GAAAnB,EAAA,kBAEvC,gBAtBsBoB,EAAAC,GAAA,OAAAzB,EAAA4B,MAAA,KAAAC,UAAA,KCcV0F,GAA+B,SAAHvH,GAQlC,IAPLwH,EAAOxH,EAAPwH,QAGArF,GAFWnC,EAAXyH,YACiBzH,EAAjB0H,kBACI1H,EAAJmC,MACA7B,EAAQN,EAARM,SACAD,EAAOL,EAAPK,QACA6B,EAAQlC,EAARkC,SAEMyF,GAAWC,EAAAA,GAAAA,MAEXC,EAAoB,eAAAzF,GAAAnC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAM0H,GAAQ,IAAArF,EAAAD,EAAA7G,EAAA4G,EAAAwF,EAAAC,EAAA,OAAA9H,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACK,OAAtC4B,EAA2CN,EAA3CM,SAAUD,EAAiCL,EAAjCK,YAAa7G,EAAoBwG,EAApBxG,SAAU4G,EAAUJ,EAAVI,MAAK5B,EAAAE,KAAA,EACxCuG,GAAgB/G,EAASC,EAAU6B,EAAKG,IAAIsD,WAAY,CAC5DnD,SAAAA,EACAD,YAAAA,EACA7G,SAAAA,EACA4G,MAAAA,EACA0F,MAAOH,IACN,KAAD,SAAAnH,EAAAE,KAAA,EAEI8G,GAASO,EAAAA,GAAAA,IAAmB7H,IAAU,KAAD,SAAAM,EAAAE,KAAA,EACnBwG,GAAWhH,EAASC,GAAU,KAAD,EAAAyH,EAAApH,EAAAI,KAA7CiH,EAAKD,EAALC,MACR9F,EAAS8F,GAAO,yBAAArH,EAAAY,OAAA,GAAAnB,EAAA,KACjB,gBAbyBoB,GAAA,OAAAY,EAAAR,MAAA,KAAAC,UAAA,KAsB1B,OACEgD,EAAAA,GAAAA,KAAAsD,GAAAA,SAAA,CAAAvD,UACEC,EAAAA,GAAAA,KAACkC,GAAS,CAAAnC,UACRC,EAAAA,GAAAA,KAACmC,GAAI,CAAApC,SACF4C,EAAQjE,KAAI,SAAA6E,GACX,OAAIA,EAAO9F,MAAQhC,EACV,MAGPuE,EAAAA,GAAAA,KAACsC,GAAQ,CAAAvC,UACPF,EAAAA,GAAAA,MAACxJ,GAAM,CACL4J,KAAK,SACLC,QAAS,kBAAM8C,EAAqBO,EAAO9F,IAAI,EAACsC,SAAA,EAEhDC,EAAAA,GAAAA,KAACoC,GAAK,CAAArC,UArBAyD,EAqBeD,EAAO7F,MArBhB+F,EAqBuB,GApB7CD,EAAKE,OAASD,EACTD,EAAKG,UAAU,EAAGF,GAAa,MAEjCD,MAkBOxD,EAAAA,GAAAA,KAACqC,GAAQ,CAAC,aAAW,aAAapM,MAAO,GAAIT,OAAQ,GAAGuK,UACtDC,EAAAA,GAAAA,KAAA,OACEa,KAAI,GAAAtH,OAAKuH,EAAAA,EAAM,2CARRyC,EAAO9F,KAhBb,IAAC+F,EAAMC,CA8BpB,SAKV,E,WCgFA,GA/H8B,SAAHtI,GAA+C,IAAzCmC,EAAInC,EAAJmC,KAAM9B,EAAOL,EAAPK,QAASC,EAAQN,EAARM,SAAU4B,EAAQlC,EAARkC,SAC3C3B,EAAmD4B,EAAxDG,IAAaC,EAA2CJ,EAA3CI,MAAOC,EAAoCL,EAApCK,YAAa7G,EAAuBwG,EAAvBxG,SAAU8G,EAAaN,EAAbM,SACnDpB,QAAQC,IAAImB,GAEZ,IAAM+E,GAAUiB,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIC,EAAAA,GAAAA,IAAsBD,EAAOrI,EAAQ,IAE1EqD,GAA4BC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAApC1B,EAAM8B,EAAA,GAAE8E,EAAS9E,EAAA,GACxBI,GAAsCP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9CuD,EAAWtD,EAAA,GAAE0E,EAAc1E,EAAA,GAc5B2E,EAXa,WACjB,IAAMC,EAAc,IAAInL,KAGlBoL,EAFe,IAAIpL,KAAK6E,GAEAoB,UAAYkF,EAAYlF,UAEtD,OADkBoF,KAAKC,MAAMF,EAAQ,KAIvC,CAEuBG,GAGjBC,EAAoB,WACxBR,GAAU,SAAAS,GAAS,OAAKA,CAAS,GACnC,EAEM3B,EAAoB,WACxBmB,GAAe,SAAAQ,GAAS,OAAKA,CAAS,GACxC,EAEMC,EAAgB,eAAAlH,GAAAnC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjBiG,GAAWzG,EAASC,EAAUC,EAAOqF,YAAY,KAAD,EACtD1D,GAAS,SAAAoB,GACP,OAAOA,EAAEiG,QAAO,SAAApH,GAAI,OAAIA,EAAKG,MAAQ/B,CAAM,GAC7C,IAAG,wBAAAI,EAAAY,OAAA,GAAAnB,EAAA,KACJ,kBALqB,OAAAgC,EAAAR,MAAA,KAAAC,UAAA,KAOtB,OACE6C,EAAAA,GAAAA,MAAAyD,GAAAA,SAAA,CAAAvD,SAAA,EACEF,EAAAA,GAAAA,MAACnJ,EAAU,CAAcI,SAAUA,EAASiJ,SAAA,EAC1CC,EAAAA,GAAAA,KAAC2E,EAAAA,EAAc,CAAA5E,UACbF,EAAAA,GAAAA,MAAC+E,EAAAA,EAAW,CAAA7E,SAAA,EACVC,EAAAA,GAAAA,KAACjJ,EAAS,CAAC8N,UAAU,MAAK9E,SAAErC,KACxBsC,EAAAA,GAAAA,KAAC/I,EAAQ,CAAA8I,SAAEpC,UAGnBqC,EAAAA,GAAAA,KAAClK,EAAiB,CAAAiK,UAChBC,EAAAA,GAAAA,KAAC3I,EAAa,OAEhBwI,EAAAA,GAAAA,MAACvK,EAAgB,CAAAyK,SAAA,EACfC,EAAAA,GAAAA,KAAC7I,EAAe,CAAA4I,SAAC,cACjBC,EAAAA,GAAAA,KAAC7I,EAAe,CAAA4I,SAAC,iBAGnBF,EAAAA,GAAAA,MAACtI,EAAa,CAAAwI,SAAA,EACZF,EAAAA,GAAAA,MAACvK,EAAgB,CAAAyK,SAAA,EACfC,EAAAA,GAAAA,KAACvI,EAAW,CAAAsI,UACVF,EAAAA,GAAAA,MAAClI,EAAa,CAAAoI,SAAA,EACZC,EAAAA,GAAAA,KAACnI,EAAY,CAACf,SAAUA,IACvBA,QAILkJ,EAAAA,GAAAA,KAACvI,EAAW,CAAAsI,SAAE6B,GAAkBhE,SAGlCiC,EAAAA,GAAAA,MAACjK,EAAgB,CAAAmK,SAAA,CAEdkE,EAAiB,KAChBjE,EAAAA,GAAAA,KAAC7H,EAAkB,CAAC,aAAW,YAAYlC,MAAO,GAAIT,OAAQ,GAAI6C,SAAU4L,EAAelE,UACzFC,EAAAA,GAAAA,KAAA,OAAKa,KAAI,GAAAtH,OAAKuH,EAAAA,EAAM,mBAGxBd,EAAAA,GAAAA,KAAC3J,EAAAA,EAAM,CACL+J,GAAI,CAAExG,QAAS,EAAG3D,MAAO,OAAQ6O,SAAU,KAC3C5E,QAAS2C,EAAkB9C,UAE7BC,EAAAA,GAAAA,KAACjI,EAAc,CAAC,aAAW,0BAA0B9B,MAAO,GAAIT,OAAQ,GAAGuK,UACvEC,EAAAA,GAAAA,KAAA,OAAKa,KAAI,GAAAtH,OAAKuH,EAAAA,EAAM,0CAGxBd,EAAAA,GAAAA,KAAC3J,EAAAA,EAAM,CACP6J,QAASqE,EACPnE,GAAI,CAAExG,QAAS,EAAG3D,MAAO,OAAQ6O,SAAU,IAAK,4CAA6C,CAAEpL,gBAAiB,YAAaqG,UAE/HC,EAAAA,GAAAA,KAACjI,EAAc,CAAC,aAAW,0BAA0B9B,MAAO,GAAIT,OAAQ,GAAGuK,UACvEC,EAAAA,GAAAA,KAAA,OAAKa,KAAI,GAAAtH,OAAKuH,EAAAA,EAAM,uBAGxBd,EAAAA,GAAAA,KAAC3J,EAAAA,EAAM,CACL6J,QAASuE,EACTrE,GAAI,CAAExG,QAAS,EAAG3D,MAAO,OAAQ6O,SAAU,IAAK,4CAA6C,CAAEpL,gBAAiB,YAAcqG,UAEhIC,EAAAA,GAAAA,KAACjI,EAAc,CAAC,aAAW,0BAA0B9B,MAAO,GAAIT,OAAQ,GAAGuK,UACvEC,EAAAA,GAAAA,KAAA,OAAKa,KAAI,GAAAtH,OAAKuH,EAAAA,EAAM,6BAvDbpF,GA6DhByB,IACC6C,EAAAA,GAAAA,KAAC9C,GAAS,CACRC,OAAQA,EACRC,QAASmH,EACT9I,SAAUA,EACVD,QAASA,EACT6B,SAAUA,EACVC,KAAMA,IAGTsF,IACC5C,EAAAA,GAAAA,KAAC0C,GAA4B,CAC3BE,YAAaA,EACbxF,QAASyF,EACTF,QAASA,EACTlH,SAAUA,EACVD,QAASA,EACT6B,SAAUA,EACVC,KAAMA,MAKhB,EC1JayH,GAAgBnQ,EAAAA,GAAAA,IAAU+B,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,+LAU1BoO,GAAcpQ,EAAAA,GAAAA,EAAQoC,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,qHAOtBqO,GAAoBrQ,EAAAA,GAAAA,OAAasC,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,sGAOjCsO,GAAiBtQ,EAAAA,GAAAA,IAAUwC,KAAAA,IAAAR,EAAAA,EAAAA,GAAA,4KCmBxC,GAtC6B,SAAHuE,GAA+C,IAAzCM,EAAQN,EAARM,SAAUD,EAAOL,EAAPK,QAAS6B,EAAQlC,EAARkC,SACjDwB,GAD+D1D,EAAJmC,MAC/BwB,EAAAA,EAAAA,WAAS,IAAMG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAApC1B,EAAM8B,EAAA,GAAE8E,EAAS9E,EAAA,GAElBsF,EAAoB,WACxBR,GAAU,SAAAS,GAAS,OAAKA,CAAS,GACnC,EAEA,OACE3E,EAAAA,GAAAA,MAAAyD,GAAAA,SAAA,CAAAvD,SAAA,EACEC,EAAAA,GAAAA,KAACrL,EAAO,CAAAoL,UAGNC,EAAAA,GAAAA,KAACwB,GAAAA,EAAY,CACTvB,KAAK,SACLC,QAASqE,EACT9C,aAAc,CACVvL,WAAY,iCACZI,MAAO,6BAEX+J,MAAO,CAACnK,WAAY,kCACpBwL,YAAa,CAACC,OAAQ,0BAA0B5B,SACnD,uBAIF5C,IACC6C,EAAAA,GAAAA,KAAC9C,GAAS,CACRC,OAAQA,EACRC,QAASmH,EACT9I,SAAUA,EACVD,QAASA,EACT6B,SAAUA,MAKpB,E,4CCtCa8H,IAAavQ,EAAAA,EAAAA,IAAOwQ,GAAAA,EAAPxQ,CAAiB+B,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,k6BA8C9B4C,IAAe5E,EAAAA,EAAAA,IAAO6E,GAAAA,EAAP7E,CAAcoC,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,+MC7C7ByO,GAAc,SAAHlK,GAAqF,IAA/EgC,EAAMhC,EAANgC,OAAQC,EAAOjC,EAAPiC,QAAOkI,EAAAnK,EAAE8E,KAAAA,OAAI,IAAAqF,EAAG,SAAQA,EAAAC,EAAApK,EAAEqK,aAAAA,OAAY,IAAAD,EAAG,GAAEA,EAAEE,EAAQtK,EAARsK,SAAUC,EAAQvK,EAARuK,SAC3F7G,GAA0BC,EAAAA,EAAAA,UAAS0G,GAAavG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAzCnB,EAAKuB,EAAA,GAAE0G,EAAQ1G,EAAA,GAMhB2G,EAAc,WAHlBD,EAAS,IAKTvI,GACF,EAqBA,OACEyC,EAAAA,GAAAA,MAACrG,GAAY,CACXsG,KAAM3C,EACN0I,WAAW,EACXzI,QAASwI,EACT/Q,SAAS,WAAUkL,SAAA,EAEnBF,EAAAA,GAAAA,MAACiG,GAAAA,EAAG,CACFhR,QAAQ,OACRE,eAAe,gBACfD,WAAW,SACXqB,aAAa,OAAM2J,SAAA,EAEnBC,EAAAA,GAAAA,KAAC+F,GAAAA,EAAW,CACV3F,GAAI,CACF9J,MAAO,0BACPsD,QAAS,IACToM,WAAY,sBACZzP,SAAU,OACV0P,WAAY,OACZlG,SAEQ,WAATE,EAAoB,aAAe,iBAEtCD,EAAAA,GAAAA,KAACG,GAAAA,EAAS,CACRD,QAAS0F,EACTxF,GAAI,CACF9J,MAAO,0BACPzB,SAAU,WACVqR,IAAK,OACLC,MAAO,OACP3Q,OAAQ,OACRS,MAAO,OACPmQ,OAAQ,iBAIdvG,EAAAA,GAAAA,MAACwG,GAAAA,EAAa,CAAAtG,SAAA,EACZC,EAAAA,GAAAA,KAACmF,GAAU,CACTmB,WAAS,EACT7F,GAAG,QACHD,YAAY,QACZ+F,KAAK,QACLtG,KAAK,OACL4F,WAAS,EACTW,QAAQ,WACRC,gBAAiB,CAAEC,QAAQ,GAC3BlM,MAAOkD,EACPwD,SAnEa,SAAH3D,GAAoB,IAAdoJ,EAAMpJ,EAANoJ,OACtBhB,EAASgB,EAAOnM,MAClB,KAmEMwF,EAAAA,GAAAA,KAACwB,GAAAA,EAAY,CACTvB,KAAK,SACLC,QAAS,kBAnEO,SAACxC,GACZ,WAATuC,IACFwF,EAAS/H,GACTkI,KAEW,SAAT3F,IACFzD,QAAQC,IAAIiB,GACZgI,EAAShI,GACTkI,IAIJ,CAuDyBgB,CAAkBlJ,EAAM,EACvC+D,aAAc,CACVvL,WAAY,iCACZI,MAAO,4BACPL,MAAO,QACPT,OAAQ,QAEZ6K,MAAO,CAACnK,WAAY,kCACpBwL,YAAa,CAACC,OAAQ,0BAA0B5B,SAEtC,WAATE,EAAoB,MAAQ,cAQzC,ECYA,GAlG0B,SAAH9E,GAKhB,IAJLoI,EAAMpI,EAANoI,OACA/H,EAAOL,EAAPK,QACAqL,EAAQ1L,EAAR0L,SACAC,EAAoB3L,EAApB2L,qBAEQpJ,EAAyB6F,EAAzB7F,MAAYjC,EAAa8H,EAAlB9F,IAEfoB,GAA0BC,EAAAA,EAAAA,UAAS,IAAGG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA/BsE,EAAKlE,EAAA,GAAE5B,EAAQ4B,EAAA,GACtBI,GAA4BP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApClC,EAAMmC,EAAA,GAAEyE,EAASzE,EAAA,GAElBoF,GAASd,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMa,MAAM,IAE1CqC,EAAe,WACnBhD,GAAW5G,EACb,EAwBA,OAfA6J,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,eAAA1J,GAAAnC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAASC,GAAQ,IAAAE,EAAAuL,EAAA,OAAA7L,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACzBwG,GAAWhH,EAASC,GAAU,KAAD,EAA1CE,EAAIG,EAAAI,KAEJgL,EAAgBvL,EAAKwH,MAAMuB,QAAO,SAAApH,GACtC,OAAIoH,GACKpH,EAAKxG,WAAa4N,CAG7B,IACArH,EAAS6J,GAAe,wBAAApL,EAAAY,OAAA,GAAAnB,EAAA,KACzB,gBAVkBoB,EAAAC,GAAA,OAAAW,EAAAR,MAAA,KAAAC,UAAA,KAWnBiK,EAAczL,EAASC,EACzB,GAAG,CAACD,EAASC,EAAU8H,EAAQmB,KAG7B7E,EAAAA,GAAAA,MAAC5H,EAAY,CAAA8H,SAAA,EACXC,EAAAA,GAAAA,KAACrL,EAAO,CAAAoL,UACNF,EAAAA,GAAAA,MAACkF,GAAa,CAAAhF,SAAA,EACZC,EAAAA,GAAAA,KAACgF,GAAW,CAAAjF,SAAErC,KACdmC,EAAAA,GAAAA,MAACzK,EAAkB,CAAA2K,SAAA,EACjBC,EAAAA,GAAAA,KAACiF,GAAiB,CAAChF,KAAK,SAASC,QAAS6G,EAAahH,UACrDC,EAAAA,GAAAA,KAACjI,EAAc,CACb,aAAW,0BACX9B,MAAO,GACPT,OAAQ,GAAGuK,UAEXC,EAAAA,GAAAA,KAAA,OAAKa,KAAI,GAAAtH,OAAKuH,EAAAA,EAAM,uBAGxBd,EAAAA,GAAAA,KAACiF,GAAiB,CAChBhF,KAAK,SACLC,QAAS,kBAAM2G,EAASrL,EAASC,EAAS,EAACsE,UAE3CC,EAAAA,GAAAA,KAACjI,EAAc,CACb,aAAW,0BACX9B,MAAO,GACPT,OAAQ,GAAGuK,UAEXC,EAAAA,GAAAA,KAAA,OAAKa,KAAI,GAAAtH,OAAKuH,EAAAA,EAAM,0BArBR/H,KAAKoO,UA2B3BnH,EAAAA,GAAAA,KAAA,OAAKK,MAAO,CAAE5K,SAAU,OAAQ2R,UAAW,SAAUrH,SAClDoD,GACCA,EAAMzE,KAAI,SAAApB,GAAI,OACZ0C,EAAAA,GAAAA,KAACqH,GAAqB,CAEpB/J,KAAMA,EACN7B,SAAUA,EACVD,QAASA,EACT6B,SAAUA,GAJLC,EAAKG,IAKV,OAGRuC,EAAAA,GAAAA,KAAA,OAAKK,MAAO,CAAExK,UAAW,QAASkK,UAChCC,EAAAA,GAAAA,KAACsH,GAAoB,CACnB7L,SAAUA,EACVD,QAASA,EACT6B,SAAUA,OAGd2C,EAAAA,GAAAA,KAACqF,GAAW,CACVlI,OAAQA,EACRC,QAAS2J,EACT9G,KAAK,OACLyF,SA3Ee,SAAA6B,GACnB/K,QAAQC,IAAIjB,GACZgB,QAAQC,IAAIhB,GACZe,QAAQC,IAAI8K,GACZT,EAAqB,CAAEtL,QAAAA,EAASC,SAAAA,EAAUiC,MAAO6J,GACnD,MA0EF,ECnHanF,GAAQxN,EAAAA,GAAAA,EAAQ+B,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,uJAShB4Q,GAAa5S,EAAAA,GAAAA,EAAQoC,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,8HAQrByL,GAAWzN,EAAAA,GAAAA,IAAUsC,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,8CAIrB6Q,GAAY7S,EAAAA,GAAAA,OAAawC,KAAAA,IAAAR,EAAAA,EAAAA,GAAA,mc,IA8BJhC,EAAAA,GAAAA,IAAU0C,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,4FAQVhC,EAAAA,GAAAA,IAAU4C,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,+J,SC3D/B8Q,GAAc9S,EAAAA,GAAAA,IAAU+B,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,QAExBwL,GAAQxN,EAAAA,GAAAA,GAASoC,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,qJASjB+Q,GAAkB/S,EAAAA,GAAAA,IAAUsC,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,mIAU5BP,GAASzB,EAAAA,GAAAA,OAAawC,KAAAA,IAAAR,EAAAA,EAAAA,GAAA,wgBAiCtBgR,GAAehT,EAAAA,GAAAA,OAAa0C,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,8YAuB5ByL,GAAWzN,EAAAA,GAAAA,IAAU4C,KAAAA,IAAAZ,EAAAA,EAAAA,GAAA,4DC5D5BiR,G,QAAaC,EAENC,GAAWC,EAAAA,MAAW,WACjC,IAAAnJ,GAAwCC,EAAAA,EAAAA,UAAS,IAAGG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA7CoJ,EAAYhJ,EAAA,GAAEiJ,EAAejJ,EAAA,GAE9B6D,GAAWC,EAAAA,GAAAA,MACToF,GAAcC,EAAAA,GAAAA,MAAdD,UAEFE,GAAQzE,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAC7BA,EAAMyE,UAAUC,WAAWC,MAAK,SAAAC,GAAI,OAAIA,EAAKhL,MAAQ0K,CAAS,GAAC,IAG3DO,EAAeL,EAAMnS,WAAW6K,YAEtCiG,EAAAA,EAAAA,YAAU,WACR,IAAM2B,EAAS,eAAAxN,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMqN,GAAQ,IAAAC,EAAA,OAAAxN,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEL8M,MAAMF,GAAU,KAAD,EAAxB,KAARC,EAAQ/M,EAAAI,MACD6M,GAAG,CAADjN,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACA6M,EAASG,OAAO,KAAD,SAAAlN,EAAAK,OAAA,SAAAL,EAAAI,MAAA,aAExB,IAAI+M,MAAM,yBAAyB,KAAD,GAAAnN,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAExCU,QAAQ0M,MAAKpN,EAAAM,IAAQ,yBAAAN,EAAAY,OAAA,GAAAnB,EAAA,mBAExB,gBAVcoB,GAAA,OAAAxB,EAAA4B,MAAA,KAAAC,UAAA,KAYTmM,EAAU,eAAA5L,GAAAnC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8N,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAlO,EAAAA,EAAAA,KAAAQ,MAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,OAGhB,OAFKqN,EAAWxB,GAAWnJ,KAAI,SAAA+K,GAAM,OACpCd,EAAUc,EAAOC,gBAAgB,IAClCF,EAAAzN,KAAA,EAAAyN,EAAAxN,KAAA,EAGuB2N,QAAQC,WAAWP,GAAU,KAAD,EAA5CC,EAAOE,EAAAtN,KACP4L,EAASwB,EACZ5E,QAAO,SAAAmF,GAAM,MAAsB,cAAlBA,EAAOC,MAAsB,IAC9CpL,KAAI,SAAAmL,GAAM,OAAIA,EAAOrP,KAAK,IAC7B0N,EAAgBJ,GAAQ0B,EAAAxN,KAAA,gBAAAwN,EAAAzN,KAAA,EAAAyN,EAAApN,GAAAoN,EAAA,SAExBhN,QAAQ0M,MAAKM,EAAApN,IAAQ,yBAAAoN,EAAA9M,OAAA,GAAA0M,EAAA,kBAExB,kBAde,OAAA7L,EAAAR,MAAA,KAAAC,UAAA,KAgBhBmM,GACF,GAAG,IAEH,IAAMvC,EAAiB,eAAArI,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyO,EAAMtJ,GAAE,IAAA9E,EAAA,OAAAN,EAAAA,EAAAA,KAAAQ,MAAA,SAAAmO,GAAA,cAAAA,EAAAjO,KAAAiO,EAAAhO,MAAA,OAK/B,OAJKL,EAAO,CACX+B,MAAO2K,EAAM3K,MACbuM,cAAe5B,EAAM4B,cACrB/T,WAAW,GAADqD,OAAKkH,IAChBuJ,EAAAhO,KAAA,EAEK8G,GAASoH,EAAAA,GAAAA,IAAgB,CAAE1O,QAAS6M,EAAM5K,IAAK4K,MAAO1M,KAAS,KAAD,SAAAqO,EAAAhO,KAAA,EAC9D8G,GAASO,EAAAA,GAAAA,IAAmB8E,IAAY,KAAD,mBAAA6B,EAAAtN,OAAA,GAAAqN,EAAA,KAC9C,gBATsBnN,GAAA,OAAA2B,EAAAxB,MAAA,KAAAC,UAAA,KAWvB,OACE6C,EAAAA,GAAAA,MAAC6H,GAAW,CAAA3H,SAAA,EACVC,EAAAA,GAAAA,KAACoC,GAAK,CAAArC,SAAC,gBACPF,EAAAA,GAAAA,MAAC8H,GAAe,CAAA5H,SAAA,EACdC,EAAAA,GAAAA,KAAC4H,GAAY,CAAC3H,KAAK,SAASC,QAAS,kBAAM0G,EAAkB,EAAE,EAAC7G,UAC9DC,EAAAA,GAAAA,KAACqC,GAAQ,CAACpM,MAAO,GAAIT,OAAQ,GAAGuK,UAC9BC,EAAAA,GAAAA,KAAA,OAAKa,KAAMC,EAAAA,EAAS,yBAGvB+G,GAAWnJ,KAAI,SAAA+K,GAAM,OACpBzJ,EAAAA,GAAAA,KAAC3J,GAAM,CAEL4J,KAAK,SACLI,MAAO,CACLqJ,gBAAgB,OAADnQ,OAASkQ,EAAOC,gBAAe,KAC9CS,eAAgB,SAElBjK,QAAS,kBAAM0G,EAAkB6C,EAAOhJ,GAAG,EAC3C2J,UACE1B,EAAa3H,aAAe0I,EAAOhJ,GAAGM,WAAa,SAAW,GAC/DhB,SAEAkI,EAAawB,EAAOhJ,MACnBT,EAAAA,GAAAA,KAAA,OACEqK,OAAM,GAAA9Q,OAAKkQ,EAAOC,gBAAe,SAAAnQ,OAAQkQ,EAAOa,sBAAqB,OACrEC,IAAI,MAdHd,EAAOhJ,GAiBL,SAKnB,I,sDC1Ga+J,IAAU5V,EAAAA,EAAAA,IAAO0F,GAAAA,EAAP1F,CAAkB+B,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,mCAI5B6T,GAAkB7V,EAAAA,GAAAA,IAAUoC,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,2KAS5BwL,GAAQxN,EAAAA,GAAAA,GAASsC,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,uIAQjB8T,GAAa9V,EAAAA,GAAAA,OAAawC,KAAAA,IAAAR,EAAAA,EAAAA,GAAA,+LAW1B+T,GAAe,CAC1B,CACEnQ,MAAO,UACPoQ,MAAO,mBACPtU,MAAO,UACPuU,aAAc,UACdC,YAAa,WAEf,CACEtQ,MAAO,MACPoQ,MAAO,MACPtU,MAAO,UACPuU,aAAc,UACdC,YAAa,WAEf,CACEtQ,MAAO,SACPoQ,MAAO,SACPtU,MAAO,UACPuU,aAAc,UACdC,YAAa,WAEf,CACEtQ,MAAO,OACPoQ,MAAO,OACPtU,MAAO,UACPuU,aAAc,UACdC,YAAa,YChDJC,GAAS,WACpB,IAAAlM,GAA0CC,EAAAA,EAAAA,UAAS,IAAGG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA/CmM,EAAa/L,EAAA,GAAEgM,EAAgBhM,EAAA,GAChC6D,GAAWC,EAAAA,GAAAA,MAcXmI,EAAqB,SAAAC,GACzB,IAAQ3Q,EAAU2Q,EAAMxE,OAAhBnM,MACRgC,QAAQC,IAAI,mBAAoBjC,GAChCyQ,EAAiBzQ,GACjBsI,GAASsI,EAAAA,GAAAA,GAAU5Q,GACrB,EAQA,OACEqF,EAAAA,GAAAA,MAAAyD,GAAAA,SAAA,CAAAvD,SAAA,EACEF,EAAAA,GAAAA,MAAC4K,GAAe,CAAA1K,SAAA,EACdC,EAAAA,GAAAA,KAACoC,GAAK,CAAArC,SAAC,iBACPC,EAAAA,GAAAA,KAAC0K,GAAU,CAACzK,KAAK,SAASC,QAvBV,WACpB1D,QAAQC,IAAI,qBACZqG,GAASsI,EAAAA,GAAAA,GAAU,OALnBH,EAAiB,GAOnB,EAmBuDlL,SAAC,iBAIpDC,EAAAA,GAAAA,KAACqL,GAAAA,EAAW,CAAAtL,UACVC,EAAAA,GAAAA,KAACwK,GAAO,CACN,kBAAgB,WAChBjE,KAAK,sBACL/L,MAAOwQ,EACP9J,SAnBwB,SAAAiK,GAC9B,IAAQ3Q,EAAU2Q,EAAMxE,OAAhBnM,MACRgC,QAAQC,IAAI,sBAADlD,OAAuBiB,IAClCyQ,EAAiBzQ,EACnB,EAe0CuF,SAEjC4K,GAAajM,KAAI,SAAA+K,GAAM,OACtBzJ,EAAAA,GAAAA,KAACsL,GAAAA,EAAgB,CAEflL,GAAI,CACF9J,MAAOmT,EAAOnT,MACd,+BAAgC,CAC9BA,MAAOmT,EAAOoB,cAEhB,qBAAsB,CACpBtU,SAAU,IAEZ,+BAAgC,CAC9BA,SAAU,IAEZ,sCAAuC,CACrCD,MAAOmT,EAAOoB,aACdjR,QAAS,EACTF,gBACEsR,IAAkBvB,EAAOjP,MACrB,cACAiP,EAAOqB,aAEf,wBAAyB,CACvBS,WAAY,EACZjV,MACE0U,IAAkBvB,EAAOjP,MAjErB,0BAmEA,YAGVA,MAAOiP,EAAOjP,MACdgR,SAASxL,EAAAA,GAAAA,KAACyL,GAAAA,EAAK,IACfb,MAAOnB,EAAOmB,MACd1J,SAAUgK,GA/BLzB,EAAOjP,MAgCZ,UAMd,EChGakR,GAAiB9W,EAAAA,GAAAA,IAAU+B,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,uRAe3BqD,GAAcrF,EAAAA,GAAAA,OAAaoC,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,oPAiB3ByL,GAAWzN,EAAAA,GAAAA,IAAUsC,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,8CAIrB+U,GAAc/W,EAAAA,GAAAA,GAASwC,KAAAA,IAAAR,EAAAA,EAAAA,GAAA,iOAUvBgV,GAAShX,EAAAA,GAAAA,IAAU0C,KAAAA,IAAAV,EAAAA,EAAAA,GAAA,6ECpCnBiV,GAAc,SAAH1Q,GAAqB,IAAfiC,EAAOjC,EAAPiC,QACtB0O,GAAWC,EAAAA,EAAAA,QAAO,MAQxB,OACE/L,EAAAA,GAAAA,KAAC4L,GAAM,CAAC1L,QAPiB,SAAAiL,GACrBW,EAASE,UAAYF,EAASE,QAAQC,SAASd,EAAMxE,SACvDvJ,GAEJ,EAGsC2C,UAClCF,EAAAA,GAAAA,MAAC6L,GAAc,CAACQ,IAAKJ,EAAS/L,SAAA,EAC5BC,EAAAA,GAAAA,KAAC/F,GAAW,CAACgG,KAAK,SAASC,QAAS9C,EAAQ2C,UAC1CC,EAAAA,GAAAA,KAACqC,GAAQ,CAAC,aAAW,0BAA0BpM,MAAO,GAAIT,OAAQ,GAAGuK,UACnEC,EAAAA,GAAAA,KAAA,OAAKa,KAAI,GAAAtH,OAAKuH,EAAAA,EAAM,wBAGxBd,EAAAA,GAAAA,KAAC2L,GAAW,CAAA5L,SAAC,aACbC,EAAAA,GAAAA,KAAC+H,GAAQ,KACT/H,EAAAA,GAAAA,KAAC+K,GAAM,QAIf,ECCA,GA9B4B,WAC1B,IAAAlM,GAA0CC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAlDsN,EAAclN,EAAA,GAAEmN,EAAenN,EAAA,GAUtC,OACEe,EAAAA,GAAAA,KAAAsD,GAAAA,SAAA,CAAAvD,UACEF,EAAAA,GAAAA,MAAClL,EAAO,CAAAoL,SAAA,EACNC,EAAAA,GAAAA,KAACoC,GAAK,CAAArC,SAAC,oBAEPF,EAAAA,GAAAA,MAAC4H,GAAS,CAACxH,KAAK,SAASC,QAbX,WAClBkM,GAAiBD,EACnB,EAWoDpM,SAAA,EAC5CC,EAAAA,GAAAA,KAACqC,GAAQ,CAAC,aAAW,cAAcpM,MAAO,GAAIT,OAAQ,GAAGuK,UACvDC,EAAAA,GAAAA,KAAA,OAAAD,UACEC,EAAAA,GAAAA,KAAA,OAAKqM,UAAS,GAAA9S,OAAKuH,EAAAA,EAAM,uBAG7Bd,EAAAA,GAAAA,KAACwH,GAAU,CAAAzH,SAAC,eAEboM,IAAkBnM,EAAAA,GAAAA,KAAC6L,GAAW,CAACzO,QAjBb,WACvBgP,GAAgB,EAClB,QAmBF,ECYA,GAxCwB,SAAHjR,GAA6B,IAAvBmR,EAAenR,EAAfmR,gBACzBzN,GAA4BC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAApC1B,EAAM8B,EAAA,GAAE8E,EAAS9E,EAAA,GAMlBsF,EAAoB,WACxBR,GAAU,SAAAS,GAAS,OAAKA,CAAS,GACnC,EAOA,OACExE,EAAAA,GAAAA,KAAAsD,GAAAA,SAAA,CAAAvD,UACEF,EAAAA,GAAAA,MAAAyD,GAAAA,SAAA,CAAAvD,SAAA,EACEC,EAAAA,GAAAA,KAACwB,GAAAA,EAAY,CACTvB,KAAK,SACLC,QAASqE,EACT9C,aAAc,CACVvL,WAAY,gCACZI,MAAO,4BAEX+J,MAAO,CAACnK,WAAY,+BAA+B6J,SACtD,wBAGDC,EAAAA,GAAAA,KAACqF,GAAW,CACVlI,OAAQA,EACRC,QAASmH,EACTkB,SAAU6G,QAKpB,EC1CMC,GACJ,iGAEWC,GAAsB5X,EAAAA,GAAAA,IAAU+B,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,yxCAevB,SAAAC,GAAK,OACvBA,EAAM4V,SAAW,sBAAwB,aAAa,IAGlC,SAAA5V,GAAK,aAAA0C,OAChBgT,GAAS,oBAAAhT,OAAmB1C,EAAM4V,SAAQ,YAM/B,SAAA5V,GAAK,qBAAA0C,OAErBgT,GAAS,oBAAAhT,OAAmB1C,EAAM4V,SAAQ,eAI1B,SAAA5V,GAAK,qBAAA0C,OAErBgT,GAAS,oBAAAhT,OAAmB1C,EAAM4V,SAAQ,YAM1B,SAAA5V,GAAK,qBAAA0C,OAErBgT,GAAS,oBAAAhT,OAAmB1C,EAAM4V,SAAQ,eAI1B,SAAA5V,GAAK,qBAAA0C,OAErBgT,GAAS,qBAAAhT,OAAoB1C,EAAM4V,SAAQ,YAK3B,SAAA5V,GAAK,qBAAA0C,OAErBgT,GAAS,qBAAAhT,OAAoB1C,EAAM4V,SAAQ,eC2BnD,GAhEsB,WACpB,IAAMC,GAAY9I,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMyE,UAAUoE,SAAS,IACxDvE,GAAcC,EAAAA,GAAAA,MAAdD,UACFxF,GAAUiB,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIC,EAAAA,GAAAA,IAAsBD,EAAOsE,EAAU,IAEtEwE,GADa/I,EAAAA,GAAAA,IAAYgJ,GAAAA,GACCpE,MAAK,SAAAH,GAAK,OAAIA,EAAM5K,MAAQ0K,CAAS,IAC/DrF,GAAWC,EAAAA,GAAAA,MAEX8J,EAAkB,eAAA1R,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAASC,GAAQ,OAAAJ,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC3C8G,GAASgK,EAAAA,GAAAA,IAAa,CAAEtR,QAAAA,EAASC,SAAAA,KAAa,KAAD,EACnDqH,GAASO,EAAAA,GAAAA,IAAmB8E,IAAY,wBAAArM,EAAAY,OAAA,GAAAnB,EAAA,KACzC,gBAHuBoB,EAAAC,GAAA,OAAAzB,EAAA4B,MAAA,KAAAC,UAAA,KAKlB8J,EAAoB,eAAAvI,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8N,EAAA7L,GAAA,IAAA/B,EAAAC,EAAAiC,EAAA,OAAArC,EAAAA,EAAAA,KAAAQ,MAAA,SAAA2N,GAAA,cAAAA,EAAAzN,KAAAyN,EAAAxN,MAAA,OAAiC,OAAxBR,EAAO+B,EAAP/B,QAASC,EAAQ8B,EAAR9B,SAAUiC,EAAKH,EAALG,MAAK8L,EAAAxN,KAAA,EACtD8G,GAASiK,EAAAA,GAAAA,IAAa,CAAEvR,QAAAA,EAASC,SAAAA,EAAUiC,MAAAA,KAAU,KAAD,EAC1DlB,QAAQC,IAAI,oBACZqG,GAASO,EAAAA,GAAAA,IAAmB8E,IAAY,wBAAAqB,EAAA9M,OAAA,GAAA0M,EAAA,KACzC,gBAJyBvM,GAAA,OAAA0B,EAAAxB,MAAA,KAAAC,UAAA,KAc1B,OAJAgK,EAAAA,EAAAA,YAAU,WACRlE,GAASO,EAAAA,GAAAA,IAAmB8E,GAC9B,GAAG,CAACrF,EAAUqF,KAIZnI,EAAAA,GAAAA,KAACwM,GAAmB,CAACC,SAAUE,EAAeA,EAAazW,WAAa,GAAG6J,UACzEF,EAAAA,GAAAA,MAACiG,GAAAA,EAAG,CAAC1F,GAAI,CAAEmL,WAAY,GAAIxL,SAAA,EACzBC,EAAAA,GAAAA,KAACgN,GAAmB,KAClBN,IAAa1M,EAAAA,GAAAA,KAACiN,GAAe,CAACX,gBAbd,SAAAY,GACtBpK,GAASqK,EAAAA,GAAAA,IAAU,CAAEzP,MAAOwP,EAAY1R,QAAS2M,IACnD,KAYMnI,EAAAA,GAAAA,KAACkF,GAAc,CAAAnF,SAeZ4C,GACCA,EAAQjE,KAAI,SAAA6E,GAAM,OAChBvD,EAAAA,GAAAA,KAACoN,GAAiB,CAChB7J,OAAQA,EACR/H,QAAS2M,EAETtB,SAAUgG,EACV/F,qBAAsBA,GAFjBvD,EAAO9F,IAGZ,UAMhB,EC/EA,GAJoB,WAClB,OAAOuC,EAAAA,GAAAA,KAACqN,GAAa,GACvB,C,+ECJO,IAAMT,EAAmB,SAAA/I,GAAK,OAAIA,EAAMyE,UAAUC,UAAW,EAEvDzE,EAAwB,SAACD,EAAOrI,GAC3C,IAAM6M,EAAQxE,EAAMyE,UAAUC,WAAWC,MAAK,SAAAH,GAAK,OAAIA,EAAM5K,MAAQjC,CAAO,IAC5E,OAAO6M,EAAQA,EAAM1F,QAAU,EACjC,C,uDCLO,IAAMmF,EAAS,CACpB,CACErH,GAAI,EACJiJ,gBACE,qJACFY,sBACE,yJAEJ,CACE7J,GAAI,EACJiJ,gBACE,qJACFY,sBACE,yJAEJ,CACE7J,GAAI,EACJiJ,gBACE,qJACFY,sBACE,yJAEJ,CACE7J,GAAI,EACJiJ,gBACE,qJACFY,sBACE,yJAEJ,CACE7J,GAAI,EACJiJ,gBACE,qJACFY,sBACE,yJAEJ,CACE7J,GAAI,EACJiJ,gBACE,qJACFY,sBACE,yJAEJ,CACE7J,GAAI,EACJiJ,gBACE,qJACFY,sBACE,yJAEJ,CACE7J,GAAI,EACJiJ,gBACE,qJACFY,sBACE,yJAEJ,CACE7J,GAAI,EACJiJ,gBACE,qJACFY,sBACE,yJAEJ,CACE7J,GAAI,GACJiJ,gBACE,sJACFY,sBACE,0JAEJ,CACE7J,GAAI,GACJiJ,gBACE,sJACFY,sBACE,0JAGJ,CACE7J,GAAI,GACJiJ,gBACE,sJACFY,sBACE,0JAEJ,CACE7J,GAAI,GACJiJ,gBACE,sJACFY,sBACE,0JAEJ,CACE7J,GAAI,GACJiJ,gBACE,sJACFY,sBACE,0JAEJ,CACE7J,GAAI,GACJiJ,gBACE,sJACFY,sBACE,0J","sources":["components/ProjectOffice/ProjectOfficeStyle.jsx","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.styled.jsx","utils.js/formatDate.js","components/CardPopUp/CardPopUp.styled.jsx","taskServices/updateTask.js","taskServices/addTask.js","components/CardPopUp/CardPopUp.jsx","utils/dateFormatDedline.js","taskServices/deleteTask.js","components/ProjectOffice/ProjectOfficePopUpCardColumn/ProjectOfficePopUpCardColumn.styled.js","taskServices/changeOwnerTask.js","taskServices/fetchTask.js","components/ProjectOffice/ProjectOfficePopUpCardColumn/ProjectOfficePopUpCardColumn.js","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.jsx","components/ProjectOffice/ProjectOfficeItem/OfficeItemStyle.styled.jsx","components/ProjectOffice/ProjectCardAddButton/ProjectCardAddButton.jsx","components/Modal/ModalColumn/ModalColumn.styled.jsx","components/Modal/ModalColumn/ModalColumn.jsx","components/ProjectOffice/ProjectOfficeItem/ProjectOfficeItem.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeaderStyle.jsx","components/PopUpFilter/BgChange/BgChange.styled.jsx","components/PopUpFilter/BgChange/BgChange.jsx","components/PopUpFilter/Filter/Filter.styled.jsx","components/PopUpFilter/Filter/Filter.jsx","components/PopUpFilter/PopUpFilter.styled.jsx","components/PopUpFilter/PopUpFilter.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeader.jsx","components/ProjectOffice/AddColumnsButton/AddColumnsButton.jsx","components/ProjectOffice/ProjectOfficeBgContainer.styled.js","components/ProjectOffice/ProjectOffice.jsx","pages/ScreensPage.jsx","redux/dashboards/selectors.js","utils/bgImgPreview.js"],"sourcesContent":["import { styled } from '@mui/system';\nimport { Button, CardActions } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const Wrapper = styled('div')({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  paddingTop: '5px',\n  marginRight: '10px',\n  gap: '5px',\n});\n\nexport const FilterWrapper = styled('div')({\n  marginRight: '10px',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n});\n\nexport const ActionsIconsButton = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n});\n\nexport const CardWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  flexWrap: 'wrap',\n  height: '600px',\n  overflow: 'scroll',\n});\n\nexport const CardFooterStyled = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  paddingRight: '20px',\n  paddingLeft: '20px',\n  gap: '15px',\n});\n\nexport const CardIconsWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  paddingRight: '20px',\n  gap: '8px',\n  marginTop: '2px',\n});\n\nexport const CardActionsStyled = styled(CardActions)({\n  paddingRight: '20px',\n  paddingLeft: '20px',\n});\n\nexport const StackWrapper = styled(Stack)({\n  width: '330px',\n  height: '56px',\n  background: '#F6F6F7',\n  borderRadius: '8px',\n  marginBottom: '5px',\n});\n\nexport const CardButtonStyled = styled(Stack)({\n  width: '330px',\n  height: '56px',\n  background: '#BEDBB0',\n  borderRadius: '8px',\n  marginBottom: '20px',\n});\n\nexport const ButtonStyled = styled(Button)({\n  paddingLeft: '80px',\n  color: '#161616',\n  fontSize: '14px',\n  textTransform: 'none',\n});\n\nexport const AddIconStyled = styled(AddIcon)({\n  width: '28px',\n  height: '28px',\n  borderRadius: '8px',\n});\n","import styled from 'styled-components';\n\nexport const CardStyled = styled.div`\n  background: var(--cardItem);\n  max-width: 334px;\n  min-height: 154px;\n  border-radius: 8px;\n  margin-top: 15px;\n  margin-right: 10px;\n  margin-bottom: -10px;\n  border-left: 4px solid #8fa1d0;\n  border-left: 4px solid\n    ${props => {\n      switch (props.priority) {\n        case 'low':\n          return '#8FA1D0';\n        case 'medium':\n          return '#E09CB5';\n        case 'high':\n          return '#BEDBB0';\n        case 'without':\n          return ' var(--calendarWithoutColor)';\n        default:\n          return '#000000';\n      }\n    }};\n`;\n\nexport const CardTitle = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n  margin-bottom: 7px;\n`;\n\nexport const CardText = styled.p`\n  color: var(--cardItemText);\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 300px;\n`;\n\nexport const CardFooterTitle = styled.p`\n  color: var(--cardItemText);\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 12px;\n  padding-top: 5px;\n`;\n\nexport const DividerStyled = styled.div`\n  background: var(--dividerColor);\n  width: 300px;\n  height: 1px;\n`;\n\nexport const WrapperFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const WrapperText = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 15px;\n  padding-top: 8px;\n`;\n\nexport const StatusWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const StatusStyled = styled.div`\n  width: 12px;\n  height: 12px;\n  background: ${props => {\n    switch (props.priority) {\n      case 'low':\n        return '#8FA1D0';\n      case 'medium':\n        return '#E09CB5';\n      case 'high':\n        return '#BEDBB0';\n      case 'without':\n        return ' var(--calendarWithoutColor)';\n      default:\n        return '#000000';\n    }\n  }};\n  border-radius: 50%;\n`;\n\nexport const SvgIconsStyled = styled.svg`\n  stroke: var(--iconCardColor);\n  fill: none;\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n    box-shadow: 0px 0px 0px 0px #87d3ae;\n  }\n`;\n\nexport const ScrollStyled = styled.div`\ndisplay: flex;\nflex-direction: column;\n`;\n\nexport const SvgIconsStyledBell = styled.svg`\n  stroke: ${props => {\n  switch (true) {\n      case props.timeline < 0:\n        return '#e40c0c';\n      case props.timeline < 24:\n        return '#BEDBB0';\n      default:\n        return 'var(--iconCardColor)';\n  }\n}};\nfill: none;\n`;\n\n","function isSameDay(date1, date2) {\n  return (\n    date1.getDate() === date2.getDate() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getFullYear() === date2.getFullYear()\n  );\n}\n\nexport const formatDate = date => {\n  const today = new Date();\n  const tomorrow = new Date(today);\n  const optionsAllDays = date.toLocaleDateString('en-US', {\n    weekday: 'long',\n  });\n  const optionsNearestDays = date.toLocaleDateString('en-US', {\n    month: 'long',\n  });\n\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  if (isSameDay(date, today)) {\n    return `Today, ${optionsNearestDays} ${date.getDate()}`;\n  } else if (isSameDay(date, tomorrow)) {\n    return `Tomorrow, ${optionsNearestDays} ${date.getDate()}`;\n  } else {\n    const formattedDate = `${optionsAllDays} ${date.getDate()}`;\n    return formattedDate;\n  }\n};\n","import styled, { css } from 'styled-components';\nimport { Dialog } from '@mui/material';\n\nexport const CustomDialog = styled(Dialog)({\n  '& .MuiPaper-root': {\n    backgroundColor: 'var(--themeListBgColor)',\n    maxWidth: '350px',\n    padding: '24px',\n    margin: '0px',\n    border: '1px solid var(--modalBorderColor)',\n    borderRadius: '8px',\n    overflow: 'hidden',\n  },\n\n  '& .MuiDialogContent-root': {\n    padding: '0px',\n  },\n});\n\nexport const WrapperPopUp = styled.div`\n  width: 100%;\n  min-height: 355px;\n  padding: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--modalBorderColor);\n  background: var(--themeListBgColor);\n  box-shadow: 0px 4px 16px 0px var(--boxShadowColor);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 340px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 400px;\n  }\n`;\n\nconst hoverFocusStyles = css`\n  border: 1px solid var(--greenGreenBlueColor);\n  opacity: 0.7;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 7px;\n  margin-right: 14px;\n  /* font-size: 10px; */\n  line-height: 0;\n  color: var(--primaryTextColor);\n  /* color: red; */\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  min-width: 302px;\n`;\nexport const FormText = styled.label`\n  color: var(--primaryTextColor);\n  text-align: start;\n  margin-bottom: 24px;\n  font-size: 18px;\n  font-weight: 500;\n`;\nexport const FromInput = styled.input`\n  background-color: var(--themeListBgColor);\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--passiveBorderColor);\n  outline: none;\n  transition: opacity var(--transition_data);\n  color: var(--primaryTextColor);\n  &:hover {\n    ${hoverFocusStyles};\n  }\n  &:focus {\n    ${hoverFocusStyles};\n  }\n  &:placeholder {\n    color: var(--calendarSecondTextColor);\n  }\n`;\n\nexport const FormTextarea = styled.textarea`\n  background-color: var(--themeListBgColor);\n  vertical-align: text-top;\n  resize: none;\n  min-height: 154px;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--passiveBorderColor);\n  outline: none;\n  transition: opacity var(--transition_data);\n  color: var(--primaryTextColor);\n  &::placeholder {\n  }\n  &:hover {\n    ${hoverFocusStyles};\n  }\n  &:focus {\n    ${hoverFocusStyles};\n  }\n  &:placeholder {\n    color: var(--calendarSecondTextColor);\n  }\n`;\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 14px;\n`;\n\nexport const RadioLabel = styled.label`\n  --radio-background-color: ${props => {\n    switch (props.value) {\n      case 'low':\n        return '#8FA1D0';\n      case 'medium':\n        return '#E09CB5';\n      case 'high':\n        return '#BEDBB0';\n      case 'without':\n        return ' var(--calendarWithoutColor)';\n      default:\n        return '#000000';\n    }\n  }};\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  cursor: pointer;\n  background-color: var(--radio-background-color);\n`;\n\nexport const RadioButton = styled.input`\n  display: none;\n  &:checked + ${RadioLabel} {\n    width: 8px;\n    height: 8px;\n    position: relative;\n    &:before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      width: 14px;\n      height: 14px;\n      background-color: transparent;\n      border: 1px solid var(--radio-background-color);\n      border-radius: 50%;\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 14px;\n  &:not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const Text = styled.span`\n  color: var(--calendarSecondTextColor);\n  font-size: 12px;\n  margin-bottom: 6px;\n`;\n\nexport const CalendarWrapp = styled.div`\n  display: flex;\n\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 40px;\n  transition: opacity var(--transition_data);\n  &:hover {\n    opacity: 0.7;\n  }\n  &:focus {\n    opacity: 0.7;\n  }\n`;\nexport const CalendarText = styled.span`\n  color: var(--greenGreenBlueColor);\n  margin-right: 4px;\n`;\n\nexport const CalendarArrow = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: var(--greenGreenBlueColor);\n`;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nexport const updateTask = async (boardId, columnId, taskId, data) => {\n  try {\n    const res = await axios.put(\n      `/boards/${boardId}/columns/${columnId}/tasks/${taskId} `,\n      data\n    );\n    return res;\n  } catch (e) {\n    if (e.code === 400) { \n      toast.error('Bad request');\n      return\n    }\n    if (e.code === 401) { \n      toast.error('Missing header with authorization token');\n      return\n    }\n    if (e.code === 404) { \n      toast.error('Not found');\n      return\n    }\n    if (e.code === 500) { \n      toast.error('Not found');\n      return\n    }\n    toast.error(e.message);\n    console.log('e.message', e.message);\n  }\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nexport const addTask = async (data, boardId, columnId) => {\n  try {\n    const res = await axios.post(\n      `/boards/${boardId}/columns/${columnId}/tasks`,\n      data\n    );\n\n    return res;\n  } catch (e) {\n    if (e.code === 400) { \n      toast.error('Bad request');\n      return\n    }\n    if (e.code === 401) { \n      toast.error('Missing header with authorization token');\n      return\n    }\n    if (e.code === 404) { \n      toast.error('Not found');\n      return\n    }\n    if (e.code === 500) { \n      toast.error('Not found');\n      return\n    }\n    toast.error(e.message);\n    console.log('e.message', e.message);\n  }\n};\n","import { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport sprite from '../../images/sprite.svg';\nimport { formatDate } from 'utils.js/formatDate';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './calendar.css';\nimport {\n  Form,\n  FormText,\n  FromInput,\n  FormTextarea,\n  RadioGroup,\n  RadioButton,\n  RadioLabel,\n  Wrap,\n  Text,\n  CalendarWrapp,\n  CalendarText,\n  CalendarArrow,\n  CustomDialog,\n  CloseButton,\n} from './CardPopUp.styled';\n\nimport { CustomButton } from 'components/Button/CustomButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { updateTask } from 'taskServices/updateTask';\nimport { addTask } from 'taskServices/addTask';\n\nexport const CardPopUp = ({\n  isOpen,\n  onClose,\n  boardId,\n  columnId,\n  setTasks,\n  task,\n}) => {\n  const {\n    _id: taskId,\n    title,\n    description,\n    priority,\n    deadline,\n  } = task\n    ? { ...task }\n    : {\n        _id: null,\n        title: '',\n        description: '',\n        priority: 'without',\n        deadline: new Date(),\n      };\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    reset,\n    formState: { errors },\n  } = useForm({ defaultValues: { title, description, priority, deadline } });\n\n  const onSubmit = async data => {\n    if (task) {\n      const res = await updateTask(boardId, columnId, taskId, data);\n\n      setTasks(p => {\n        return p.map(task => {\n          if (task._id === res.data.task._id) {\n            return res.data.task;\n          }\n          return task;\n        });\n      });\n    } else {\n      const res = await addTask(data, boardId, columnId);\n\n      setTasks(s => {\n        return [...s, res.data.task];\n      });\n    }\n    reset();\n    onClose();\n  };\n  const [unixFromat, setUnixFormat] = useState(\n    new Date(new Date().toUTCString()).getTime()\n  );\n\n  const [dateBtn, setDateBtn] = useState(new Date(deadline));\n  const [showDatePicker, setShowDatePicker] = useState(false);\n\n  const handleDateInputChange = date => {\n    const UTC = date.toUTCString();\n    const UNIX = new Date(UTC).getTime();\n    setDateBtn(date);\n    setUnixFormat(UNIX);\n    setValue('deadline', UNIX.toString());\n    setShowDatePicker(false);\n  };\n  const toggleDatePicker = () => {\n    setShowDatePicker(prevState => !prevState);\n  };\n  return (\n    <CustomDialog open={isOpen} onClose={onClose}>\n      <CloseButton type=\"button\" onClick={onClose}>\n        <CloseIcon sx={{ fontSize: 'medium' }} style={{ marginTop: '14px' }} />\n      </CloseButton>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        {!task && <FormText>{'Add card'}</FormText>}\n        {task && <FormText>{'Edit card'}</FormText>}\n        {errors?.title && (\n          <p style={{ color: 'red' }}>{errors?.title.message}</p>\n        )}\n        <FromInput\n          {...register('title', {\n            minLength: 3,\n            required: 'This field is required, at least 3 characters!',\n          })}\n          placeholder=\"Title\"\n        />\n\n        {errors?.description && (\n          <p style={{ color: 'red' }}>{errors?.description.message}</p>\n        )}\n        <FormTextarea\n          placeholder=\"Description\"\n          {...register('description', {\n            minLength: 3,\n            required: 'This field is required, at least 3 characters!',\n          })}\n        ></FormTextarea>\n\n        <Text>Label color</Text>\n        <RadioGroup>\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"low\"\n              {...register('priority')}\n              value=\"low\"\n            />\n            <RadioLabel\n              htmlFor=\"low\"\n              value=\"low\"\n              checked={register('priority').value === 'low'}\n            />\n          </Wrap>\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"medium\"\n              {...register('priority')}\n              value=\"medium\"\n            />\n            <RadioLabel\n              htmlFor=\"medium\"\n              value=\"medium\"\n              checked={register('priority').value === 'medium'}\n            />\n          </Wrap>\n\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"high\"\n              {...register('priority')}\n              value=\"high\"\n            />\n            <RadioLabel\n              htmlFor=\"high\"\n              value=\"high\"\n              checked={register('priority').value === 'high'}\n            />\n          </Wrap>\n\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"without\"\n              {...register('priority', { required: false })}\n              value=\"without\"\n              // checked={true}\n            />\n            <RadioLabel\n              htmlFor=\"without\"\n              value=\"without\"\n              checked={register('priority').value === 'without'}\n            />\n          </Wrap>\n        </RadioGroup>\n        <Text>Deadline</Text>\n        <CalendarWrapp onClick={toggleDatePicker}>\n          <CalendarText>{formatDate(dateBtn)}</CalendarText>\n          <CalendarArrow\n            style={{ width: 18, height: 18 }}\n            aria-label=\"open theme select icon\"\n          >\n            <use href={sprite + '#icon-arrow-down'}></use>\n          </CalendarArrow>\n        </CalendarWrapp>\n        <input\n          {...register('deadline', { value: unixFromat.toString() })}\n          style={{ display: 'none' }}\n        />\n        {showDatePicker && (\n          <DatePicker\n            selected={new Date()}\n            onChange={handleDateInputChange}\n            dateFormat=\"dd/MM/yyyy\"\n            inline\n            minDate={new Date()}\n          />\n        )}\n\n        {task &&  <CustomButton\n            type=\"submit\"\n            styleOptions={{\n                background: 'var(--addCardButtonBackground)',\n                color: 'var(--addCardButtonColor)',\n                width: '302px',\n                height: '49px'\n            }}\n            style={{background: 'var(--addPlusButtonBackground)'}}\n            customIcons={{stroke: 'var(--addPlusIconColor'}}\n        >\n            {'Edit'}\n        </CustomButton>\n        }\n        {!task && <CustomButton\n            type=\"submit\"\n            styleOptions={{\n                background: 'var(--addCardButtonBackground)',\n                color: 'var(--addCardButtonColor)',\n                width: '302px',\n                height: '49px'\n            }}\n            style={{background: 'var(--addPlusButtonBackground)'}}\n            customIcons={{stroke: 'var(--addPlusIconColor'}}\n        >\n            {'Add'}\n        </CustomButton>\n    }\n      </Form>\n    </CustomDialog>\n  );\n};\n","export const dateFormatDedline = deadline => {\n  const seconds = new Date(deadline);\n  const day = seconds.getDate();\n  const month = seconds.getMonth() + 1;\n  const monthFormat = month < 10 ? `0${month}` : `${month}`;\n\n  const year = seconds.getFullYear();\n  return `${day}/${monthFormat}/${year}`;\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nexport const deleteTask = async (boardId, columnId, taskId) => {\n  try {\n    await axios.delete(\n      `/boards/${boardId}/columns/${columnId}/tasks/${taskId}`\n    );\n    return true;\n  } catch (e) {\n    if (e.code === 400) { \n      toast.error('Bad request');\n      return\n    }\n    if (e.code === 401) { \n      toast.error('Missing header with authorization token');\n      return\n    }\n    if (e.code === 404) { \n      toast.error('Not found');\n      return\n    }\n    if (e.code === 500) { \n      toast.error('Not found');\n      return\n    }\n    toast.error(e.message);\n  }\n};\n","import styled from 'styled-components';\n\n// import { Dialog } from '@mui/material';\n\n// export const CustomDialog = styled(Dialog)({\n//   '& .MuiPaper-root': {\n//     backgroundColor: 'var(--themeListBgColor)',\n//     maxWidth: '350px',\n//     padding: '24px',\n//     margin: '0px',\n//     border: '1px solid var(--modalBorderColor)',\n//     borderRadius: '8px',\n//     overflow: 'hidden',\n//   },\n\n//   '& .MuiDialogContent-root': {\n//     padding: '0px',\n//   },\n// });\n\n// export const CloseButton = styled.button`\n//   position: absolute;\n//   top: 0;\n//   right: 0;\n//   padding: 7px;\n//   margin-right: 14px;\n//   /* font-size: 10px; */\n//   line-height: 0;\n//   color: var(--primaryTextColor);\n//   /* color: red; */\n//   border: none;\n//   background-color: transparent;\n//   cursor: pointer;\n// `;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: 165px;\n  padding: 18px;\n\n  border-radius: 8px;\n  background: var(--popupBackground);\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n`;\n\nexport const List = styled.ul`\n  width: 100%;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 100%;\n  padding: 4px 0;\n\n  border: none;\n  background: transparent;\n  color: inherit;\n`;\n\nexport const Title = styled.span`\n  color: inherit;\n  font-size: 14px;\n  letter-spacing: -0.28px;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const BtnTitles = styled.span`\n  display: inline-block;\n  margin-right: auto;\n`;\n\nexport const SvgIcons = styled.svg`\n  fill: none;\n  stroke: var(--iconCardColor);\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 8px;\n  color: var(--popupColor);\n\n  &:hover,\n  &:focus {\n    color: var(--poupHoverColor);\n\n    ${Button} {\n      color: var(--poupHoverColor);\n    }\n\n    ${SvgIcons} {\n      stroke: var(--poupHoverColor);\n    }\n  }\n`;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nexport const changeOwnerTask = async (boardId, columnId, taskId, data) => {\n  try {\n    const res = await axios.put(\n      `/boards/${boardId}/columns/${columnId}/tasks/${taskId} `,\n      data\n    );\n    return res;\n  } catch (e) {\n    if (e.code === 400) { \n      toast.error('Bad request');\n      return\n    }\n    if (e.code === 401) { \n      toast.error('Missing header with authorization token');\n      return\n    }\n    if (e.code === 404) { \n      toast.error('Not found');\n      return\n    }\n    if (e.code === 500) { \n      toast.error('Not found');\n      return\n    }\n    toast.error(e.message);\n  }\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nexport const fetchTasks = async (boardId, columnId) => {\n  try {\n    const { data } = await axios.get(\n      `/boards/${boardId}/columns/${columnId}/tasks`\n    );\n    return data;\n  } catch (e) {\n    if (e.code === 401) { \n      toast.error('Missing header with authorization token');\n      return\n    }\n    if (e.code === 404) { \n      toast.error('Not found');\n      return\n    }\n    if (e.code === 500) { \n      toast.error('Not found');\n      return\n    }\n    toast.error(e.message);\n    console.log('e.message', e.message);\n  }\n};\n","import { useDispatch } from 'react-redux';\nimport {\n  Title,\n  Container,\n  Button,\n  List,\n  ListItem,\n  SvgIcons,\n\n  //   CustomDialog,\n} from './ProjectOfficePopUpCardColumn.styled';\nimport { changeOwnerTask } from 'taskServices/changeOwnerTask';\nimport { getColumnsForBoard } from 'redux/dashboards/operation';\nimport { fetchTasks } from 'taskServices/fetchTask';\n\nimport sprite from '../../../images/sprite.svg';\n\nexport const ProjectOfficePopUpCardColumn = ({\n  columns,\n  isOpenPopUp,\n  handleTogglePopUp,\n  task,\n  columnId,\n  boardId,\n  setTasks,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleChangeOnerTask = async newOwner => {\n    const { deadline, description, priority, title } = task;\n    await changeOwnerTask(boardId, columnId, task._id.toString(), {\n      deadline,\n      description,\n      priority,\n      title,\n      owner: newOwner,\n    });\n\n    await dispatch(getColumnsForBoard(boardId));\n    const { tasks } = await fetchTasks(boardId, columnId);\n    setTasks(tasks);\n  };\n\n  const truncateText = (text, maxLength) => {\n    if (text.length > maxLength) {\n      return text.substring(0, maxLength) + '...';\n    }\n    return text;\n  };\n\n  return (\n    <>\n      <Container>\n        <List>\n          {columns.map(column => {\n            if (column._id === columnId) {\n              return null;\n            }\n            return (\n              <ListItem key={column._id}>\n                <Button\n                  type=\"button\"\n                  onClick={() => handleChangeOnerTask(column._id)}\n                >\n                  <Title>{truncateText(column.title, 10)}</Title>\n                  <SvgIcons aria-label=\"arrow icon\" width={16} height={16}>\n                    <use\n                      href={`${sprite}#icon-arrow-circle-broken-right`}\n                    ></use>\n                  </SvgIcons>\n                </Button>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Container>\n    </>\n  );\n};\n","import {\n  CardActionsStyled,\n  CardFooterStyled,\n  CardIconsWrapper,\n} from '../ProjectOfficeStyle';\nimport CardContent from '@mui/material/CardContent';\nimport { Button, CardActionArea } from '@mui/material';\nimport {\n  CardStyled,\n  CardTitle,\n  CardText,\n  CardFooterTitle,\n  DividerStyled,\n  WrapperFooter,\n  WrapperText,\n  StatusWrapper,\n  StatusStyled,\n  SvgIconsStyled,\n  SvgIconsStyledBell,\n} from './ProjectOfficeCardItem.styled';\n\nimport { useState } from 'react';\nimport { CardPopUp } from 'components/CardPopUp/CardPopUp';\n\nimport { dateFormatDedline } from 'utils/dateFormatDedline';\nimport { deleteTask } from 'taskServices/deleteTask';\nimport sprite from '../../../images/sprite.svg';\nimport { ProjectOfficePopUpCardColumn } from '../ProjectOfficePopUpCardColumn/ProjectOfficePopUpCardColumn';\nimport { useSelector } from 'react-redux';\nimport { selectColumnsForBoard } from 'redux/dashboards/selectors';\n\nconst ProjectOfficeCardItem = ({ task, boardId, columnId, setTasks }) => {\n  const { _id: taskId, title, description, priority, deadline } = task;\n  console.log(deadline)\n\n  const columns = useSelector(state => selectColumnsForBoard(state, boardId));\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenPopUp, setIsOpenPopUp] = useState(false);\n\n\n  const isDeadLine = () => { \n    const currentTime = new Date();\n    const deadlineTime = new Date(deadline);\n\n    const timeLeft = deadlineTime.getTime() - currentTime.getTime();\n    const hoursLeft = Math.floor(timeLeft / (1000 * 60 * 60));\n    return hoursLeft;\n\n    // return hoursLeft < 24;\n  }\n\n  const isDeadlineTime = isDeadLine();\n\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  const handleTogglePopUp = () => {\n    setIsOpenPopUp(prevstate => !prevstate);\n  };\n\n  const handleDeleteTask = async () => {\n    await deleteTask(boardId, columnId, taskId.toString());\n    setTasks(p => {\n      return p.filter(task => task._id !== taskId);\n    });\n  };\n\n  return (\n    <>\n      <CardStyled key={taskId} priority={priority}>\n        <CardActionArea>\n          <CardContent>\n            <CardTitle component=\"div\">{title}</CardTitle>\n                <CardText>{description}</CardText>\n          </CardContent>\n        </CardActionArea>\n        <CardActionsStyled>\n          <DividerStyled />\n        </CardActionsStyled>\n        <CardFooterStyled>\n          <CardFooterTitle>Priority</CardFooterTitle>\n          <CardFooterTitle>Deadline</CardFooterTitle>\n        </CardFooterStyled>\n\n        <WrapperFooter>\n          <CardFooterStyled>\n            <WrapperText>\n              <StatusWrapper>\n                <StatusStyled priority={priority} />\n                {priority}\n              </StatusWrapper>\n            </WrapperText>\n\n            <WrapperText>{dateFormatDedline(deadline)}</WrapperText>\n          </CardFooterStyled>\n\n          <CardIconsWrapper>\n            \n            {isDeadlineTime < 24 && \n              <SvgIconsStyledBell aria-label=\"icon-bell\" width={16} height={16} timeline={isDeadlineTime} >\n                <use href={`${sprite}#icon-bell`}></use>\n              </SvgIconsStyledBell>}\n          \n            <Button\n              sx={{ padding: 0, width: '20px', minWidth: '0' }}\n              onClick={handleTogglePopUp}\n            >\n            <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-arrow-circle-broken-right`}></use>\n            </SvgIconsStyled>\n            </Button>\n            <Button\n            onClick={handleToggleModal}\n              sx={{ padding: 0, width: '20px', minWidth: '0', '&.MuiButtonBase-root.MuiButton-root:hover': { backgroundColor: '#121212'} }}\n            >\n            <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-pencil`}></use>\n            </SvgIconsStyled>\n            </Button>\n            <Button\n              onClick={handleDeleteTask}\n              sx={{ padding: 0, width: '20px', minWidth: '0', '&.MuiButtonBase-root.MuiButton-root:hover': { backgroundColor: '#121212'}  }}\n            >\n            <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-trash`}></use>\n            </SvgIconsStyled>\n            </Button>\n          </CardIconsWrapper>\n        </WrapperFooter>\n      </CardStyled>\n      {isOpen && (\n        <CardPopUp\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          columnId={columnId}\n          boardId={boardId}\n          setTasks={setTasks}\n          task={task}\n        />\n      )}\n      {isOpenPopUp && (\n        <ProjectOfficePopUpCardColumn\n          isOpenPopUp={isOpenPopUp}\n          onClose={handleTogglePopUp}\n          columns={columns}\n          columnId={columnId}\n          boardId={boardId}\n          setTasks={setTasks}\n          task={task}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ProjectOfficeCardItem;\n","import styled from 'styled-components';\n\nexport const ActionsButton = styled.div`\n    background: var(--actionsButton);\n    width: 334px; \n    height: 56px;\n    border-radius: 8px;\n    padding: 20px;\n    display: flex; \n    justify-content: space-between;\n`;\n\nexport const StyledTitle = styled.p`\n    color: var(--primaryTextColor);\n    font-weight: 500; \n    font-size: 14px;\n    line-height: 21px;\n`;\n\nexport const IconButtonWrapper = styled.button`\n    background: inherit;\n    border: none;\n    margin-right: -8px;\n    cursor: pointer;\n`;\n\nexport const ProjectWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n    overflow: auto;\n    @media screen and (max-width: 375px) {\n        max-height: 450px;\n    }\n`;\n\n","import { useState } from 'react';\nimport {\n  Wrapper\n} from '../ProjectOfficeStyle';\nimport { CardPopUp } from 'components/CardPopUp/CardPopUp';\nimport { CustomButton } from 'components/Button/CustomButton';\n\nconst ProjectCardAddButton = ({ columnId, boardId, setTasks, task }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        {/* {Array.from(Array(3)).map((_, index) => ( */}\n        {/* <CardButtonStyled direction=\"row\" spacing={2} key={index}> */}\n        <CustomButton\n            type='button'\n            onClick={handleToggleModal}\n            styleOptions={{\n                background: 'var(--addCardButtonBackground)',\n                color: 'var(--addCardButtonColor)',\n            }}\n            style={{background: 'var(--addPlusButtonBackground)'}}\n            customIcons={{stroke: 'var(--addPlusIconColor'}}\n        >\n            Add another card\n        </CustomButton>\n      </Wrapper>\n      {isOpen && (\n        <CardPopUp\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          columnId={columnId}\n          boardId={boardId}\n          setTasks={setTasks}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ProjectCardAddButton;\n","import { TextField, Dialog } from \"@mui/material\";\n// import { styled } from '@mui/system';\nimport styled from 'styled-components';\n\n\nexport const StyleInput = styled(TextField)`\n  /* background-color: var(--currentLinkBgColor); */\n  max-width: 302px;\n  margin-bottom: 24px;\n\n        & label.Mui-focused {\n          color: #fff;\n        };\n\n  & .MuiInputBase-input {\n          padding: 14px 16px;\n          color: var(--primaryTextColor);\n          background-color: var(--currentLinkBgColor);\n\n        };\n\n        & .MuiFormLabel-root {\n          color: #fff;\n        };\n\n  & .MuiInputBase-root {\n          opacity: 0.4;\n    border-radius: 8px;\n              margin-bottom: 24px;\n    & :hover {\n      opacity: 1.0;\n    };\n\n    & :focus {\n      opacity: 1.0;\n    }\n        };\n\n        & .MuiOutlinedInput-root {\n          & fieldset {\n            border-color: #BEDBB0;\n          };\n          & :hover fieldset {\n            border-color: #BEDBB0;\n          };\n          & .Mui-focused fieldset {\n            border-color: #BEDBB0;\n          };\n        };\n`\n\nexport const CustomDialog = styled(Dialog)`\n  \n  & .MuiPaper-root {\n    background-color: var(--themeListBgColor);\n    max-width: 350px;\n    padding: 24px;\n  margin: 0px;\n  };\n\n  & .MuiDialogContent-root {\n    padding: 0px;\n  }\n\n`","import { DialogTitle, Box, DialogContent } from \"@mui/material\";\nimport { CustomButton } from \"../../Button/CustomButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CustomDialog, StyleInput } from \"./ModalColumn.styled\";\nimport { useState } from \"react\";\n\nexport const ModalColumn = ({ isOpen, onClose, type = \"create\", initialState = '', onRemove, onUpdate }) => {\n  const [title, setTitle] = useState(initialState);\n\n  const reset = () => {\n    setTitle('');\n  }\n\n  const handleClose = () => { \n    reset();\n    onClose();\n  }\n\n  const handleChange = ({ target }) => { \n    setTitle(target.value);\n  }\n\n  const handleButtonClick = (title) => { \n    if (type === \"create\") { \n      onRemove(title);\n      handleClose();\n    }\n    if (type === \"edit\") {\n      console.log(title)\n      onUpdate(title);\n      handleClose();\n    }\n\n    \n  }\n\n\n  return (\n    <CustomDialog\n      open={isOpen}\n      fullWidth={true}\n      onClose={handleClose}\n      position=\"relative\"\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        marginBottom=\"24px\"\n      >\n        <DialogTitle\n          sx={{\n            color: \"var(--primaryTextColor)\",\n            padding: \"0\",\n            fontFamily: \"Poppins, sans-serif\",\n            fontSize: \"18px\",\n            lineHeight: \"1.5\",\n          }}\n        >\n          {type === 'create' ? 'Add Column' : 'Edit Column'}\n        </DialogTitle>\n        <CloseIcon\n          onClick={handleClose}\n          sx={{\n            color: \"var(--primaryTextColor)\",\n            position: \"absolute\",\n            top: \"14px\",\n            right: \"14px\",\n            height: \"18px\",\n            width: \"18px\",\n            cursor: \"pointer\",\n          }}\n        />\n      </Box>\n      <DialogContent>\n        <StyleInput\n          autoFocus\n          id=\"title\"\n          placeholder=\"Title\"\n          name=\"title\"\n          type=\"text\"\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: false }}\n          value={title}\n          onChange={handleChange}\n        />\n        <CustomButton\n            type=\"submit\"\n            onClick={() => handleButtonClick(title)} \n            styleOptions={{\n                background: 'var(--addCardButtonBackground)',\n                color: 'var(--addCardButtonColor)',\n                width: '302px',\n                height: '49px'\n            }}\n            style={{background: 'var(--addPlusButtonBackground)'}}\n            customIcons={{stroke: 'var(--addPlusIconColor'}}\n        >\n            {type === 'create' ? 'Add' : 'Edit'}\n        </CustomButton>\n        {/* <CustomButton onClick={() => handleButtonClick(title)} style={{height: '49px !important'}}>\n          {type === 'create' ? 'Add' : 'Edit'}\n        </CustomButton> */}\n      </DialogContent>\n    </CustomDialog>\n  );\n};","import { Wrapper, ActionsIconsButton } from '../ProjectOfficeStyle';\nimport ProjectOfficeCardItem from '../ProjectOfficeCardItem/ProjectOfficeCardItem';\nimport {\n  ActionsButton,\n  IconButtonWrapper,\n  StyledTitle,\n} from './OfficeItemStyle.styled';\nimport { useEffect, useState } from 'react';\n\nimport ProjectCardAddButton from '../ProjectCardAddButton/ProjectCardAddButton';\n\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\nimport { fetchTasks } from 'taskServices/fetchTask';\nimport sprite from '../../../images/sprite.svg';\nimport {\n  ScrollStyled,\n  SvgIconsStyled,\n} from '../ProjectOfficeCardItem/ProjectOfficeCardItem.styled';\n\nimport { useSelector } from 'react-redux';\n\nconst ProjectOfficeItem = ({\n  column,\n  boardId,\n  onDelete,\n  handleEditColumnName,\n}) => {\n  const { title, _id: columnId } = column;\n\n  const [tasks, setTasks] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const filter = useSelector(state => state.filter);\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleUpdate = newName => {\n    console.log(boardId);\n    console.log(columnId);\n    console.log(newName);\n    handleEditColumnName({ boardId, columnId, title: newName });\n  };\n\n  useEffect(() => {\n    const fetchTasksApi = async (boardId, columnId) => {\n      const data = await fetchTasks(boardId, columnId);\n\n      const filteredTasks = data.tasks.filter(task => {\n        if (filter) {\n          return task.priority === filter;\n        }\n        return true;\n      });\n      setTasks(filteredTasks);\n    };\n    fetchTasksApi(boardId, columnId);\n  }, [boardId, columnId, column, filter]);\n\n  return (\n    <ScrollStyled>\n      <Wrapper>\n        <ActionsButton key={Date.now()}>\n          <StyledTitle>{title}</StyledTitle>\n          <ActionsIconsButton>\n            <IconButtonWrapper type=\"button\" onClick={handleToggle}>\n              <SvgIconsStyled\n                aria-label=\"close modal select icon\"\n                width={16}\n                height={16}\n              >\n                <use href={`${sprite}#icon-pencil`}></use>\n              </SvgIconsStyled>\n            </IconButtonWrapper>\n            <IconButtonWrapper\n              type=\"button\"\n              onClick={() => onDelete(boardId, columnId)}\n            >\n              <SvgIconsStyled\n                aria-label=\"close modal select icon\"\n                width={16}\n                height={16}\n              >\n                <use href={`${sprite}#icon-trash`}></use>\n              </SvgIconsStyled>\n            </IconButtonWrapper>\n          </ActionsIconsButton>\n        </ActionsButton>\n      </Wrapper>\n      <div style={{ overflow: 'auto', maxHeight: '450px' }}>\n        {tasks &&\n          tasks.map(task => (\n            <ProjectOfficeCardItem\n              key={task._id}\n              task={task}\n              columnId={columnId}\n              boardId={boardId}\n              setTasks={setTasks}\n            />\n          ))}\n      </div>\n      <div style={{ marginTop: '10px' }}>\n        <ProjectCardAddButton\n          columnId={columnId}\n          boardId={boardId}\n          setTasks={setTasks}\n        />\n      </div>\n      <ModalColumn\n        isOpen={isOpen}\n        onClose={handleToggle}\n        type=\"edit\"\n        onUpdate={handleUpdate}\n      />\n    </ScrollStyled>\n  );\n};\n\nexport default ProjectOfficeItem;\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 20px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nexport const FilterText = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  cursor: pointer;\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--primaryTextColor);\n`;\n\nexport const BtnFilter = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n\n  width: 64px;\n  height: 20px;\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  border: none;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nexport const PopUpFilterWrapper = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  z-index: 999;\n`;\n\nexport const PopUpFilterContent = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background: #fff;\n  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n  padding: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const BgContainer = styled.div``;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0;\n`;\n\nexport const ButtonContainer = styled.div`\n  max-width: 252px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n\n  box-sizing: border-box;\n  padding: 14px 0;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  img {\n    display: block;\n    max-width: 100%;\n    max-height: 100%;\n    border-radius: 6px;\n  }\n\n  &.active {\n    border: 2px solid rgba(190, 219, 176, 1);\n    /* transform: scale(0.95); */\n  }\n`;\n\nexport const ButtonNoneBg = styled.button`\n  width: 28px;\n  height: 28px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 6px;\n  background-color: var(--defaultAvatarBgColor);\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-image: url();\n  background-size: cover;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--defaultImgColor);\n  fill: none;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  getColumnsForBoard,\n  updateUserBoard,\n} from 'redux/dashboards/operation';\n\nimport sprite from '../../../images/sprite.svg';\nimport {\n  Button,\n  ButtonNoneBg,\n  ButtonContainer,\n  Title,\n  SvgIcons,\n  BgContainer,\n} from './BgChange.styled';\nimport { images } from '../../../utils/bgImgPreview';\n\nconst buttonsImg = images;\n\nexport const BgChange = React.memo(() => {\n  const [loadedImages, setLoadedImages] = useState([]);\n\n  const dispatch = useDispatch();\n  const { boardName } = useParams();\n\n  const board = useSelector(state =>\n    state.dashboard.dashboards.find(item => item._id === boardName)\n  );\n\n  const backgroundId = board.background.toString();\n\n  useEffect(() => {\n    const loadImage = async imageUrl => {\n      try {\n        const response = await fetch(imageUrl);\n        if (response.ok) {\n          return await response.blob();\n        }\n        throw new Error('Image loading failed.');\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const loadImages = async () => {\n      const promises = buttonsImg.map(button =>\n        loadImage(button.backgroundImage)\n      );\n\n      try {\n        const results = await Promise.allSettled(promises);\n        const images = results\n          .filter(result => result.status === 'fulfilled')\n          .map(result => result.value);\n        setLoadedImages(images);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    loadImages();\n  }, []);\n\n  const handleButtonClick = async id => {\n    const data = {\n      title: board.title,\n      dashboardIcon: board.dashboardIcon,\n      background: `${id}`,\n    };\n\n    await dispatch(updateUserBoard({ boardId: board._id, board: data }));\n    await dispatch(getColumnsForBoard(boardName));\n  };\n\n  return (\n    <BgContainer>\n      <Title>Background</Title>\n      <ButtonContainer>\n        <ButtonNoneBg type=\"button\" onClick={() => handleButtonClick(0)}>\n          <SvgIcons width={18} height={18}>\n            <use href={sprite + '#icon-bg-default'} />\n          </SvgIcons>\n        </ButtonNoneBg>\n        {buttonsImg.map(button => (\n          <Button\n            key={button.id}\n            type=\"button\"\n            style={{\n              backgroundImage: `url(${button.backgroundImage})`,\n              backgroundSize: 'cover',\n            }}\n            onClick={() => handleButtonClick(button.id)}\n            className={\n              backgroundId.toString() === button.id.toString() ? 'active' : ''\n            }\n          >\n            {loadedImages[button.id] && (\n              <img\n                srcSet={`${button.backgroundImage} 1x, ${button.retinaBackgroundImage} 2x`}\n                alt=\"\"\n              />\n            )}\n          </Button>\n        ))}\n      </ButtonContainer>\n    </BgContainer>\n  );\n});\n","import styled from 'styled-components';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nexport const RadioGr = styled(RadioGroup)`\n  margin: 8px 0 0 32px;\n`;\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding-top: 14px;\n  border-top: 1px solid var(--modalGorizontalBorderColor);\n`;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const BtnShowAll = styled.button`\n  border: none;\n  background: inherit;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  text-decoration-line: underline;\n\n  color: var(--popupTextColor);\n`;\n\nexport const radioButtons = [\n  {\n    value: 'without',\n    label: 'Without priority',\n    color: '#5B5B5B',\n    checkedColor: '#5B5B5B',\n    buttonColor: '#5B5B5B',\n  },\n  {\n    value: 'low',\n    label: 'Low',\n    color: '#5B5B5B',\n    checkedColor: '#8FA1D0',\n    buttonColor: '#8FA1D0',\n  },\n  {\n    value: 'medium',\n    label: 'Medium',\n    color: '#5B5B5B',\n    checkedColor: '#E09CB5',\n    buttonColor: '#E09CB5',\n  },\n  {\n    value: 'high',\n    label: 'High',\n    color: '#5B5B5B',\n    checkedColor: '#BEDBB0',\n    buttonColor: '#BEDBB0',\n  },\n];\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../../redux/filter/filterSlice';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport {\n  Title,\n  FilterContainer,\n  BtnShowAll,\n  RadioGr,\n  radioButtons,\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const [selectedValue, setSelectedValue] = useState('');\n  const dispatch = useDispatch();\n\n  const primaryTextColor = `var(--primaryTextColor)`;\n\n  const handleReset = () => {\n    setSelectedValue('');\n  };\n\n  const handleShowAll = () => {\n    console.log('Show all selected');\n    dispatch(setFilter(null));\n    handleReset();\n  };\n\n  const handleFilterChange = event => {\n    const { value } = event.target;\n    console.log('Selected filter:', value);\n    setSelectedValue(value);\n    dispatch(setFilter(value));\n  };\n\n  const handleRadioButtonChange = event => {\n    const { value } = event.target;\n    console.log(`Selected priority: ${value}`);\n    setSelectedValue(value);\n  };\n\n  return (\n    <>\n      <FilterContainer>\n        <Title>Label color</Title>\n        <BtnShowAll type=\"button\" onClick={handleShowAll}>\n          Show all\n        </BtnShowAll>\n      </FilterContainer>\n      <FormControl>\n        <RadioGr\n          aria-labelledby=\"priority\"\n          name=\"radio-buttons-group\"\n          value={selectedValue}\n          onChange={handleRadioButtonChange}\n        >\n          {radioButtons.map(button => (\n            <FormControlLabel\n              key={button.value}\n              sx={{\n                color: button.color,\n                '& .Mui-checked.MuiRadio-root': {\n                  color: button.checkedColor,\n                },\n                '& .MuiSvgIcon-root': {\n                  fontSize: 14,\n                },\n                '& .MuiFormControlLabel-label': {\n                  fontSize: 12,\n                },\n                '& .MuiButtonBase-root.MuiRadio-root': {\n                  color: button.checkedColor,\n                  padding: 0,\n                  backgroundColor:\n                    selectedValue === button.value\n                      ? 'transparent'\n                      : button.buttonColor,\n                },\n                '& .MuiTypography-root': {\n                  marginLeft: 1,\n                  color:\n                    selectedValue === button.value\n                      ? primaryTextColor\n                      : 'inherit',\n                },\n              }}\n              value={button.value}\n              control={<Radio />}\n              label={button.label}\n              onChange={handleFilterChange}\n            />\n          ))}\n        </RadioGr>\n      </FormControl>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  position: relative;\n\n  width: 302px;\n  height: auto;\n\n  box-sizing: border-box;\n\n  border-radius: 8px;\n  border: 1px solid var(--modalBorderColor);\n  background: var(--themeListBgColor);\n  padding: 24px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.05);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  right: 14px;\n  top: 14px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 16px;\n  height: 16px;\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  border: none;\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--primaryTextColor);\n`;\n\nexport const ModalHeader = styled.h4`\n  color: var(--primaryTextColor);\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  padding-bottom: 14px;\n  border-bottom: 1px solid var(--modalGorizontalBorderColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const Wraper = styled.div`\n  position: absolute;\n  z-index: 999;\n  top: 32px;\n  right: 0;\n`;\n","import React, { useRef } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport { BgChange } from './BgChange/BgChange';\nimport { Filter } from './Filter/Filter';\nimport {\n  ModalContainer,\n  ModalHeader,\n  CloseButton,\n  SvgIcons,\n  Wraper,\n} from './PopUpFilter.styled';\n\nexport const PopUpFilter = ({ onClose }) => {\n  const modalRef = useRef(null);\n\n  const handleClickOutside = event => {\n    if (modalRef.current && !modalRef.current.contains(event.target)) {\n      onClose();\n    }\n  };\n\n  return (\n    <Wraper onClick={handleClickOutside}>\n      <ModalContainer ref={modalRef}>\n        <CloseButton type=\"button\" onClick={onClose}>\n          <SvgIcons aria-label=\"close modal select icon\" width={18} height={18}>\n            <use href={`${sprite}#icon-x-close`}></use>\n          </SvgIcons>\n        </CloseButton>\n        <ModalHeader>Filters</ModalHeader>\n        <BgChange />\n        <Filter />\n      </ModalContainer>\n    </Wraper>\n  );\n};\n","import React, { useState } from 'react';\nimport { Wrapper } from '../ProjectOfficeStyle';\nimport { BtnFilter, Title, SvgIcons, FilterText } from './ProjectOfficeHeaderStyle';\nimport sprite from '../../../images/sprite.svg';\nimport { PopUpFilter } from 'components/PopUpFilter/PopUpFilter';\n\nconst ProjectOfficeHeader = () => {\n  const [isPopUpVisible, setPopUpVisible] = useState(false);\n\n  const togglePopUp = () => {\n    setPopUpVisible(!isPopUpVisible);\n  };\n\n  const handleClosePopUp = () => {\n    setPopUpVisible(false);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Title>Project office</Title>\n\n        <BtnFilter type=\"button\" onClick={togglePopUp}>\n          <SvgIcons aria-label=\"filter icon\" width={18} height={18}>\n            <svg>\n              <use xlinkHref={`${sprite}#icon-filter`} />\n            </svg>\n          </SvgIcons>\n          <FilterText>Filters</FilterText>\n        </BtnFilter>\n        {isPopUpVisible && <PopUpFilter onClose={handleClosePopUp} />}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default ProjectOfficeHeader;\n","import { CustomButton } from 'components/Button/CustomButton';\nimport { useState } from 'react';\n\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\n// import { useParams } from 'react-router-dom';\n\nconst AddColumnButton = ({ handleAddColumn }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  // const columns = [\n  //   { columnName: 'one', id: 1 },\n  //   { columnName: 'two', id: 2 },\n  // ];\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  // const handleCreateColumn = (columnName) => {\n  //   //   const newArr = [...columns, { id: 4, columnName: columnName }];\n  //     console.log(columns)\n  // }\n\n  return (\n    <>\n      <>\n        <CustomButton\n            type='button'\n            onClick={handleToggleModal}\n            styleOptions={{\n                background: 'var(--customButtonBackground)',\n                color: 'var(--customButtonColor)',\n            }}\n            style={{background: 'var(--plusButtonBackground)'}}\n        >\n          Add another column\n        </CustomButton>\n        <ModalColumn\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          onRemove={handleAddColumn}\n        />\n      </>\n    </>\n  );\n};\n\nexport default AddColumnButton;\n","import styled from 'styled-components';\n\nconst baseBgUrl =\n  'https://res.cloudinary.com/dxhypjavs/image/upload/v1687378707/command_project_task_pro_images/';\n\nexport const BackgroundContainer = styled.div`\n  /* background-color: red; */\n\n  height: calc(100vh - 68px);\n\n  /* @media screen and (max-width: 768px) { */\n  /* min-height: 956px; */\n  /* } */\n  @media screen and (max-width: 375px) {\n    /* min-height: 752px; */\n    height: calc(100vh - 60px);\n  }\n\n  background-size: cover;\n  background-position: 50% 50%;\n  background-color: ${props =>\n    props.bgnumber ? 'var(--boardBgColor)' : 'transparent'};\n\n  @media screen and (max-width: 374px) {\n    background-image: ${props =>\n      `url(${baseBgUrl}mobile/bg-image-${props.bgnumber}.jpg)`};\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (max-width: 374px),\n    screen and (min-resolution: 192dpi) and (max-width: 374px),\n    screen and (min-resolution: 2dppx) and (max-width: 374px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}mobile/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n\n  @media screen and (min-width: 375px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}tablet/bg-image-${props.bgnumber}.jpg)`};\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 375px),\n    screen and (min-resolution: 192dpi) and (min-width: 375px),\n    screen and (min-resolution: 2dppx) and (min-width: 375px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}tablet/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n\n  @media screen and (min-width: 768px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}desktop/bg-image-${props.bgnumber}.jpg)`};\n  }\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 768px),\n    screen and (min-resolution: 192dpi) and (min-width: 768px),\n    screen and (min-resolution: 2dppx) and (min-width: 768px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}desktop/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n`;\n","// import { useState } from 'react';\n\nimport ProjectOfficeItem from './ProjectOfficeItem/ProjectOfficeItem';\nimport { useEffect } from 'react';\n// import { getColumns } from 'services/fetchColumn';\nimport ProjectOfficeHeader from './ProjectOfficeHeader/ProjectOfficeHeader';\nimport AddColumnButton from './AddColumnsButton/AddColumnsButton';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addColumn,\n  deleteColumn,\n  getColumnsForBoard,\n  updateColumn,\n} from 'redux/dashboards/operation';\nimport {\n  selectColumnsForBoard,\n  selectDashboards,\n} from 'redux/dashboards/selectors';\nimport { Box } from '@mui/material';\nimport { BackgroundContainer } from './ProjectOfficeBgContainer.styled';\nimport { ProjectWrapper } from './ProjectOfficeItem/OfficeItemStyle.styled';\n\nconst ProjectOffice = () => {\n  const isLoading = useSelector(state => state.dashboard.isLoading);\n  const { boardName } = useParams();\n  const columns = useSelector(state => selectColumnsForBoard(state, boardName));\n  const dashboards = useSelector(selectDashboards);\n  const currentBoard = dashboards.find(board => board._id === boardName);\n  const dispatch = useDispatch();\n\n  const handleDeletecolumn = async (boardId, columnId) => {\n    await dispatch(deleteColumn({ boardId, columnId }));\n    dispatch(getColumnsForBoard(boardName));\n  };\n\n  const handleEditColumnName = async ({ boardId, columnId, title }) => {\n    await dispatch(updateColumn({ boardId, columnId, title }));\n    console.log('UPADATE NAME NEW');\n    dispatch(getColumnsForBoard(boardName));\n  };\n\n  const handleAddColumn = columnName => {\n    dispatch(addColumn({ title: columnName, boardId: boardName }));\n  };\n\n  useEffect(() => {\n    dispatch(getColumnsForBoard(boardName));\n  }, [dispatch, boardName]);\n\n  return (\n    // <Box sx={{ marginLeft: '20%' }}>\n    <BackgroundContainer bgnumber={currentBoard ? currentBoard.background : ''}>\n      <Box sx={{ marginLeft: 3 }}>\n        <ProjectOfficeHeader />\n        {!isLoading && <AddColumnButton handleAddColumn={handleAddColumn} />}\n        <ProjectWrapper>\n          {/* {columns ? (\n            columns.map(column => (\n              <ProjectOfficeItem\n                column={column}\n                boardId={boardName}\n                key={column._id}\n                onDelete={handleDeletecolumn}\n                handleEditColumnName={handleEditColumnName}\n              />\n            ))\n          ) : (\n            <p>Loading...</p>\n          )} */}\n\n          {columns &&\n            columns.map(column => (\n              <ProjectOfficeItem\n                column={column}\n                boardId={boardName}\n                key={column._id}\n                onDelete={handleDeletecolumn}\n                handleEditColumnName={handleEditColumnName}\n              />\n            ))}\n        </ProjectWrapper>\n      </Box>\n    </BackgroundContainer>\n  );\n};\n\nexport default ProjectOffice;\n","import ProjectOffice from '../components/ProjectOffice/ProjectOffice';\n\nconst ScreensPage = () => {\n  return <ProjectOffice />;\n};\n\nexport default ScreensPage;\n","export const selectDashboards = state => state.dashboard.dashboards;\n\nexport const selectColumnsForBoard = (state, boardId) => {\n  const board = state.dashboard.dashboards.find(board => board._id === boardId);\n  return board ? board.columns : [];\n};\n\nexport const selectCurrentDashboard = state => state.dashboard.currentDashboard;","export const images = [\n  {\n    id: 1,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-1.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-1_2x.jpg',\n  },\n  {\n    id: 2,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-2.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-2_2x.jpg',\n  },\n  {\n    id: 3,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-3.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-3_2x.jpg',\n  },\n  {\n    id: 4,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-4.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-4_2x.jpg',\n  },\n  {\n    id: 5,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-5.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-5_2x.jpg',\n  },\n  {\n    id: 6,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-6.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-6_2x.jpg',\n  },\n  {\n    id: 7,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-7.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-7_2x.jpg',\n  },\n  {\n    id: 8,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-8.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-8_2x.jpg',\n  },\n  {\n    id: 9,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-9.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-9_2x.jpg',\n  },\n  {\n    id: 10,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-10.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-10_2x.jpg',\n  },\n  {\n    id: 11,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-11.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-11_2x.jpg',\n  },\n\n  {\n    id: 12,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-12.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-12_2x.jpg',\n  },\n  {\n    id: 13,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-13.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-13_2x.jpg',\n  },\n  {\n    id: 14,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-14.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-14_2x.jpg',\n  },\n  {\n    id: 15,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-15.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-15_2x.jpg',\n  },\n];"],"names":["Wrapper","styled","position","display","alignItems","justifyContent","paddingTop","marginRight","gap","ActionsIconsButton","flexDirection","CardFooterStyled","flexWrap","height","overflow","paddingRight","paddingLeft","CardIconsWrapper","marginTop","CardActionsStyled","CardActions","Stack","width","background","borderRadius","marginBottom","Button","color","fontSize","textTransform","AddIcon","CardStyled","_templateObject","_taggedTemplateLiteral","props","priority","CardTitle","_templateObject2","CardText","_templateObject3","CardFooterTitle","_templateObject4","DividerStyled","_templateObject5","WrapperFooter","_templateObject6","WrapperText","_templateObject7","StatusWrapper","_templateObject8","StatusStyled","_templateObject9","SvgIconsStyled","_templateObject10","ScrollStyled","_templateObject11","SvgIconsStyledBell","_templateObject12","timeline","isSameDay","date1","date2","getDate","getMonth","getFullYear","formatDate","date","today","Date","tomorrow","optionsAllDays","toLocaleDateString","weekday","optionsNearestDays","month","setDate","concat","CustomDialog","Dialog","backgroundColor","maxWidth","padding","margin","border","hoverFocusStyles","css","CloseButton","Form","FormText","FromInput","FormTextarea","RadioGroup","RadioLabel","value","RadioButton","Wrap","Text","CalendarWrapp","_templateObject13","CalendarText","_templateObject14","CalendarArrow","_templateObject15","updateTask","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","boardId","columnId","taskId","data","res","wrap","_context","prev","next","axios","sent","abrupt","t0","code","toast","message","console","log","stop","_x","_x2","_x3","_x4","apply","arguments","addTask","CardPopUp","isOpen","onClose","setTasks","task","_ref2","_objectSpread","_id","title","description","deadline","_useForm","useForm","defaultValues","register","handleSubmit","setValue","reset","errors","formState","onSubmit","_ref3","_res","p","map","s","_toConsumableArray","_useState","useState","toUTCString","getTime","_useState2","_slicedToArray","unixFromat","setUnixFormat","_useState3","_useState4","dateBtn","setDateBtn","_useState5","_useState6","showDatePicker","setShowDatePicker","_jsxs","open","children","_jsx","type","onClick","CloseIcon","sx","style","minLength","required","placeholder","id","htmlFor","checked","prevState","href","sprite","toString","DatePicker","selected","onChange","UTC","UNIX","dateFormat","inline","minDate","CustomButton","styleOptions","customIcons","stroke","dateFormatDedline","seconds","day","monthFormat","year","deleteTask","Container","List","Title","SvgIcons","ListItem","changeOwnerTask","fetchTasks","_yield$axios$get","ProjectOfficePopUpCardColumn","columns","isOpenPopUp","handleTogglePopUp","dispatch","useDispatch","handleChangeOnerTask","newOwner","_yield$fetchTasks","tasks","owner","getColumnsForBoard","_Fragment","column","text","maxLength","length","substring","useSelector","state","selectColumnsForBoard","setIsOpen","setIsOpenPopUp","isDeadlineTime","currentTime","timeLeft","Math","floor","isDeadLine","handleToggleModal","prevstate","handleDeleteTask","filter","CardActionArea","CardContent","component","minWidth","ActionsButton","StyledTitle","IconButtonWrapper","ProjectWrapper","StyleInput","TextField","ModalColumn","_ref$type","_ref$initialState","initialState","onRemove","onUpdate","setTitle","handleClose","fullWidth","Box","DialogTitle","fontFamily","lineHeight","top","right","cursor","DialogContent","autoFocus","name","variant","InputLabelProps","shrink","target","handleButtonClick","onDelete","handleEditColumnName","handleToggle","useEffect","fetchTasksApi","filteredTasks","now","maxHeight","ProjectOfficeCardItem","ProjectCardAddButton","newName","FilterText","BtnFilter","BgContainer","ButtonContainer","ButtonNoneBg","buttonsImg","images","BgChange","React","loadedImages","setLoadedImages","boardName","useParams","board","dashboard","dashboards","find","item","backgroundId","loadImage","imageUrl","response","fetch","ok","blob","Error","error","loadImages","_callee2","promises","results","_images","_context2","button","backgroundImage","Promise","allSettled","result","status","_callee3","_context3","dashboardIcon","updateUserBoard","backgroundSize","className","srcSet","retinaBackgroundImage","alt","RadioGr","FilterContainer","BtnShowAll","radioButtons","label","checkedColor","buttonColor","Filter","selectedValue","setSelectedValue","handleFilterChange","event","setFilter","FormControl","FormControlLabel","marginLeft","control","Radio","ModalContainer","ModalHeader","Wraper","PopUpFilter","modalRef","useRef","current","contains","ref","isPopUpVisible","setPopUpVisible","xlinkHref","handleAddColumn","baseBgUrl","BackgroundContainer","bgnumber","isLoading","currentBoard","selectDashboards","handleDeletecolumn","deleteColumn","updateColumn","ProjectOfficeHeader","AddColumnButton","columnName","addColumn","ProjectOfficeItem","ProjectOffice"],"sourceRoot":""}