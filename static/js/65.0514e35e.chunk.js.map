{"version":3,"file":"static/js/65.0514e35e.chunk.js","mappings":"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","sources":["components/DefaultScreen/DefaultScreen.styled.js","components/DefaultScreen/DefaultScreen.jsx","components/ProjectOffice/ProjectOfficeStyle.jsx","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.styled.jsx","utils.js/formatDate.js","components/CardPopUp/CardPopUp.styled.jsx","components/CardPopUp/CardPopUp.jsx","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.jsx","components/ProjectOffice/ProjectOfficeItem/OfficeItemStyle.styled.jsx","components/ProjectOffice/ProjectCardAddButton/ProjectCardAddButton.jsx","components/Modal/ModalColumn/ModalColumn.styled.jsx","components/Modal/ModalColumn/ModalColumn.jsx","components/ProjectOffice/ProjectOfficeItem/ProjectOfficeItem.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeaderStyle.jsx","components/PopUpFilter/BgChange/BgChange.styled.jsx","components/PopUpFilter/BgChange/BgChange.jsx","components/PopUpFilter/Filter/Filter.styled.jsx","components/PopUpFilter/Filter/Filter.jsx","components/PopUpFilter/PopUpFilter.styled.jsx","components/PopUpFilter/PopUpFilter.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeader.jsx","components/ProjectOffice/AddColumnsButton/AddColumnsButton.jsx","components/ProjectOffice/ProjectOfficeBgContainer.js","components/ProjectOffice/ProjectOffice.jsx","pages/ScreensPage.jsx","redux/dashboards/selectors.js","utils/bgImgPreview.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DefaultWrapper = styled.div`\nwidth: 100%;\nheight: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`;\n\nexport const DefaultText = styled.p`\nwidth: 486px;\nfont-size: 14px;\nline-height: 1.3;\nletter-spacing: -0.02em;\ncolor: rgba(255, 255, 255, 0.5);\n`\n\nexport const AccentText = styled.span`\ncolor: #BEDBB0;\n`","import { AccentText, DefaultText, DefaultWrapper } from \"./DefaultScreen.styled\"\n\nexport const DefaultScreen = () => {\n\n    return (\n        \n        <DefaultWrapper>\n            <DefaultText>Before starting your project, it is essential <AccentText>to create a board</AccentText> to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.</DefaultText>\n        </DefaultWrapper>\n    )\n}","import { styled } from '@mui/system';\nimport { Button, CardActions } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const Wrapper = styled('div')({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  marginTop: '5px',\n  marginRight: '10px',\n  gap: '5px',\n});\n\nexport const FilterWrapper = styled('div')({\n  marginRight: '10px',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n});\n\nexport const ActionsIconsButton = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n  gap: '8px',\n});\n\nexport const CardWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  flexWrap: 'wrap',\n  height: '600px',\n  overflow: 'scroll',\n});\n\nexport const CardFooterStyled = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  paddingRight: '20px',\n  paddingLeft: '20px',\n  gap: '15px',\n});\n\nexport const CardIconsWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  paddingRight: '20px',\n  gap: '8px',\n  marginTop: '-5px',\n});\n\nexport const CardActionsStyled = styled(CardActions)({\n  paddingRight: '20px',\n  paddingLeft: '20px',\n});\n\nexport const StackWrapper = styled(Stack)({\n  width: '330px',\n  height: '56px',\n  background: '#F6F6F7',\n  borderRadius: '8px',\n});\n\nexport const CardButtonStyled = styled(Stack)({\n  width: '330px',\n  height: '56px',\n  background: '#BEDBB0',\n  borderRadius: '8px',\n  marginBottom: '20px',\n});\n\nexport const ButtonStyled = styled(Button)({\n  paddingLeft: '80px',\n  color: '#161616',\n  fontSize: '14px',\n  textTransform: 'none',\n});\n\nexport const AddIconStyled = styled(AddIcon)({\n  width: '28px',\n  height: '28px',\n  borderRadius: '8px',\n});\n","import styled from 'styled-components';\n\nexport const CardStyled = styled.p`\n    background: var(--cardItem);\n    max-width: 334px; \n    height: 154px; \n    border-radius: 8px; \n    margin-top: 25px;\n    margin-right: 10px;\n    margin-bottom: 15px;\n    border-left: 4px solid #8FA1D0;\n    padding-bottom: 15px;\n`;\n\nexport const CardTitle = styled.p`\n    color: var(--cardHeaderText);\n    font-weight: 600; \n    font-size: 14px;\n    line-height: 21px; \n    margin-bottom: 7px;\n`;\n\nexport const CardText = styled.p`\n    color: var(--cardItemText);\n    font-weight: 400; \n    font-size: 12px;\n    line-height: 16px;\n    white-space: nowrap;\n    overflow: hidden; \n    text-overflow: ellipsis;\n    width: 300px;\n`;\n\nexport const CardFooterTitle = styled.p`\n    color: var(--cardItemText);\n    font-weight: 400; \n    font-size: 10px;\n    line-height: 12px; \n    padding-top: 5px;\n`;\n\nexport const DividerStyled = styled.div`\n    background: var(--cardItemText);\n    width: 300px;\n    height: 1px;\n`;\n\nexport const WrapperFooter = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const WrapperText = styled.p`\n    color: var(--cardHeaderText);\n    font-weight: 400; \n    font-size: 10px;\n    line-height: 15px; \n    padding-top: 8px;\n`;\n\nexport const StatusWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    gap: 4px;\n`;\n\nexport const StatusStyled = styled.div`\n    width: 12px;\n    height: 12px;\n    background: #8FA1D0;\n    border-radius: 50%;\n`;\n","function isSameDay(date1, date2) {\n  return (\n    date1.getDate() === date2.getDate() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getFullYear() === date2.getFullYear()\n  );\n}\n\nexport const formatDate = date => {\n  const today = new Date();\n  const tomorrow = new Date(today);\n  const optionsAllDays = date.toLocaleDateString('en-US', {\n    weekday: 'long',\n  });\n  const optionsNearestDays = date.toLocaleDateString('en-US', {\n    month: 'long',\n  });\n\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  if (isSameDay(date, today)) {\n    return `Today, ${optionsNearestDays} ${date.getDate()}`;\n  } else if (isSameDay(date, tomorrow)) {\n    return `Tomorrow, ${optionsNearestDays} ${date.getDate()}`;\n  } else {\n    const formattedDate = `${optionsAllDays} ${date.getDate()}`;\n    return formattedDate;\n  }\n};\n","import styled, { css } from 'styled-components';\nimport { Dialog } from '@mui/material';\n\nexport const CustomDialog = styled(Dialog)({\n  '& .MuiPaper-root': {\n    backgroundColor: 'var(--themeListBgColor)',\n    maxWidth: '350px',\n    padding: '24px',\n    margin: '0px',\n    border: '1px solid var(--modalBorderColor)',\n    borderRadius: '8px',\n    overflow: 'hidden',\n  },\n\n  '& .MuiDialogContent-root': {\n    padding: '0px',\n  },\n});\n\nexport const WrapperPopUp = styled.div`\n  width: 100%;\n  min-height: 355px;\n  padding: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--modalBorderColor);\n  background: var(--themeListBgColor);\n  box-shadow: 0px 4px 16px 0px var(--boxShadowColor);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 340px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 400px;\n  }\n`;\n\nconst hoverFocusStyles = css`\n  border: 1px solid var(--greenGreenBlueColor);\n  opacity: 0.7;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 7px;\n  margin-right: 14px;\n  /* font-size: 10px; */\n  line-height: 0;\n  color: var(--primaryTextColor);\n  /* color: red; */\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  min-width: 302px;\n`;\nexport const FormText = styled.label`\n  color: var(--primaryTextColor);\n  text-align: start;\n  margin-bottom: 24px;\n  font-size: 18px;\n  font-weight: 500;\n`;\nexport const FromInput = styled.input`\n  background-color: var(--themeListBgColor);\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--passiveBorderColor);\n  outline: none;\n  transition: opacity var(--transition_data);\n  &:hover {\n    ${hoverFocusStyles};\n  }\n  &:focus {\n    ${hoverFocusStyles};\n  }\n  &:placeholder {\n    color: var(--calendarSecondTextColor);\n  }\n`;\n\nexport const FormTextarea = styled.textarea`\n  background-color: var(--themeListBgColor);\n  vertical-align: text-top;\n  resize: none;\n  min-height: 154px;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--passiveBorderColor);\n  outline: none;\n  transition: opacity var(--transition_data);\n  &::placeholder {\n  }\n  &:hover {\n    ${hoverFocusStyles};\n  }\n  &:focus {\n    ${hoverFocusStyles};\n  }\n  &:placeholder {\n    color: var(--calendarSecondTextColor);\n  }\n`;\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 14px;\n`;\n\nexport const RadioLabel = styled.label`\n  --radio-background-color: ${props => {\n    switch (props.value) {\n      case 'low':\n        return '#8FA1D0';\n      case 'medium':\n        return '#E09CB5';\n      case 'high':\n        return '#BEDBB0';\n      case 'without':\n        return ' var(--calendarWithoutColor)';\n      default:\n        return '#000000';\n    }\n  }};\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  cursor: pointer;\n  background-color: var(--radio-background-color);\n`;\n\nexport const RadioButton = styled.input`\n  display: none;\n  &:checked + ${RadioLabel} {\n    width: 8px;\n    height: 8px;\n    position: relative;\n    &:before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      width: 14px;\n      height: 14px;\n      background-color: transparent;\n      border: 1px solid var(--radio-background-color);\n      border-radius: 50%;\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 14px;\n  &:not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const Text = styled.span`\n  color: var(--calendarSecondTextColor);\n  font-size: 12px;\n  margin-bottom: 6px;\n`;\n\nexport const CalendarWrapp = styled.div`\n  display: flex;\n\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 40px;\n  transition: opacity var(--transition_data);\n  &:hover {\n    opacity: 0.7;\n  }\n  &:focus {\n    opacity: 0.7;\n  }\n`;\nexport const CalendarText = styled.span`\n  color: var(--greenGreenBlueColor);\n  margin-right: 4px;\n`;\n\nexport const CalendarArrow = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: var(--greenGreenBlueColor);\n`;\n","import { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport sprite from '../../images/sprite.svg';\nimport { formatDate } from 'utils.js/formatDate';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './calendar.css';\nimport {\n  Form,\n  FormText,\n  FromInput,\n  FormTextarea,\n  RadioGroup,\n  RadioButton,\n  RadioLabel,\n  Wrap,\n  Text,\n  CalendarWrapp,\n  CalendarText,\n  CalendarArrow,\n  CustomDialog,\n  CloseButton,\n} from './CardPopUp.styled';\n\nimport { CustomButton } from 'components/Button/CustomButton';\nimport { pureFinalPropsSelectorFactory } from 'react-redux/es/connect/selectorFactory';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport const CardPopUp = ({ isOpen, onClose }) => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n    reset();\n  };\n  const [unixFromat, setUnixFormat] = useState(\n    new Date(new Date().toUTCString()).getTime() / 1000\n  );\n  const [dateBtn, setDateBtn] = useState(new Date());\n  const [showDatePicker, setShowDatePicker] = useState(false);\n\n  const handleDateInputChange = date => {\n    const UTC = date.toUTCString();\n    const UNIX = new Date(UTC).getTime() / 1000;\n    setDateBtn(date);\n    setUnixFormat(UNIX);\n    setValue('deadline', UNIX.toString());\n    setShowDatePicker(false);\n  };\n  const toggleDatePicker = () => {\n    setShowDatePicker(prevState => !prevState);\n  };\n  return (\n    <CustomDialog open={isOpen} onClose={onClose}>\n      <CloseButton type=\"button\" onClick={onClose}>\n        <CloseIcon sx={{ fontSize: 'medium' }} style={{ marginTop: '14px' }} />\n      </CloseButton>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <FormText>{'Add card'}</FormText>\n        <FromInput\n          {...register('title', {\n            minLength: 3,\n            required: pureFinalPropsSelectorFactory,\n          })}\n          placeholder=\"Title\"\n        />\n        <FormTextarea\n          placeholder=\"Description\"\n          {...register('description', { minLength: 3, required: false })}\n        ></FormTextarea>\n        <Text>Label color</Text>\n        <RadioGroup>\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"low\"\n              {...register('priority')}\n              value=\"low\"\n            />\n            <RadioLabel\n              htmlFor=\"low\"\n              value=\"low\"\n              checked={register('priority').value === 'low'}\n            />\n          </Wrap>\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"medium\"\n              {...register('priority')}\n              value=\"medium\"\n            />\n            <RadioLabel\n              htmlFor=\"medium\"\n              value=\"medium\"\n              checked={register('priority').value === 'medium'}\n            />\n          </Wrap>\n\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"high\"\n              {...register('priority')}\n              value=\"high\"\n            />\n            <RadioLabel\n              htmlFor=\"high\"\n              value=\"high\"\n              checked={register('priority').value === 'high'}\n            />\n          </Wrap>\n\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"without\"\n              {...register('priority', { required: false })}\n              value=\"without\"\n              checked={true}\n            />\n            <RadioLabel\n              htmlFor=\"without\"\n              value=\"without\"\n              checked={register('priority').value === 'without'}\n            />\n          </Wrap>\n        </RadioGroup>\n        <Text>Deadline</Text>\n        <CalendarWrapp onClick={toggleDatePicker}>\n          <CalendarText>{formatDate(dateBtn)}</CalendarText>\n          <CalendarArrow\n            style={{ width: 18, height: 18 }}\n            aria-label=\"open theme select icon\"\n          >\n            <use href={sprite + '#icon-arrow-down'}></use>\n          </CalendarArrow>\n        </CalendarWrapp>\n        <input\n          {...register('deadline', { value: unixFromat.toString() })}\n          style={{ display: 'none' }}\n        />\n        {showDatePicker && (\n          <DatePicker\n            selected={new Date()}\n            onChange={handleDateInputChange}\n            dateFormat=\"dd/MM/yyyy\"\n            inline\n            minDate={new Date()}\n          />\n        )}\n        {errors.exampleRequired && <span>This field is required</span>}\n        <CustomButton type=\"submit\">{'Edit'}</CustomButton>\n      </Form>\n    </CustomDialog>\n  );\n};\n","import {\n  CardActionsStyled,\n  CardFooterStyled,\n  CardIconsWrapper,\n} from '../ProjectOfficeStyle';\nimport CardContent from '@mui/material/CardContent';\nimport { Button, CardActionArea } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\nimport {\n  CardStyled,\n  CardTitle,\n  CardText,\n  CardFooterTitle,\n  DividerStyled,\n  WrapperFooter,\n  WrapperText,\n  StatusWrapper,\n  StatusStyled,\n} from './ProjectOfficeCardItem.styled';\n\nimport { useState } from 'react';\nimport { CardPopUp } from 'components/CardPopUp/CardPopUp';\n\nconst ProjectOfficeCardItem = ({ task }) => {\n  const { _id, title, description, priority, deadline } = task;\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  return (\n    <>\n      <CardStyled key={_id}>\n        <CardActionArea>\n          <CardContent>\n            <CardTitle component=\"div\">{title}</CardTitle>\n\n            <CardText>{description}</CardText>\n          </CardContent>\n        </CardActionArea>\n        <CardActionsStyled>\n          <DividerStyled />\n        </CardActionsStyled>\n        <CardFooterStyled>\n          <CardFooterTitle>Priority</CardFooterTitle>\n          <CardFooterTitle>Deadline</CardFooterTitle>\n        </CardFooterStyled>\n\n        <WrapperFooter>\n          <CardFooterStyled>\n            <WrapperText>\n              <StatusWrapper>\n                <StatusStyled />\n                {priority}\n              </StatusWrapper>\n            </WrapperText>\n\n            <WrapperText>{deadline}</WrapperText>\n          </CardFooterStyled>\n\n          <CardIconsWrapper>\n            <NotificationsNoneIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n            <ArrowCircleRightIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n            <Button onClick={handleToggleModal}>\n              <EditIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n            </Button>\n\n            <DeleteOutlineIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n          </CardIconsWrapper>\n        </WrapperFooter>\n      </CardStyled>\n      {isOpen && <CardPopUp isOpen={isOpen} onClose={handleToggleModal} />}\n    </>\n  );\n};\n\nexport default ProjectOfficeCardItem;\n","import styled from 'styled-components';\n\nexport const ActionsButton = styled.div`\n    background: var(--actionsButton);\n    width: 334px; \n    height: 56px;\n    border-radius: 8px;\n    padding: 20px;\n    display: flex; \n    justify-content: space-between;\n`;\n\nexport const StyledTitle = styled.p`\n    color: var(--primaryTextColor);\n    font-weight: 500; \n    font-size: 14px;\n    line-height: 21px;\n`;\n\n","import {\n  Wrapper,\n  ButtonStyled,\n  AddIconStyled,\n  CardButtonStyled,\n} from '../ProjectOfficeStyle';\n\nconst ProjectCardAddButton = () => {\n  return (\n    <>\n      <Wrapper>\n        {/* {Array.from(Array(3)).map((_, index) => ( */}\n        {/* <CardButtonStyled direction=\"row\" spacing={2} key={index}> */}\n        <CardButtonStyled direction=\"row\" spacing={2}>\n          <ButtonStyled startIcon={<AddIconStyled />}>\n            Add another card\n          </ButtonStyled>\n        </CardButtonStyled>\n        {/* ))} */}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default ProjectCardAddButton;\n","import { TextField, Dialog } from \"@mui/material\";\n// import { styled } from '@mui/system';\nimport styled from 'styled-components';\n\n\nexport const StyleInput = styled(TextField)`\n  /* background-color: var(--currentLinkBgColor); */\n  max-width: 302px;\n  margin-bottom: 24px;\n\n        & label.Mui-focused {\n          color: #fff;\n        };\n\n  & .MuiInputBase-input {\n          padding: 14px 16px;\n          color: var(--primaryTextColor);\n          background-color: var(--currentLinkBgColor);\n\n        };\n\n        & .MuiFormLabel-root {\n          color: #fff;\n        };\n\n  & .MuiInputBase-root {\n          opacity: 0.4;\n    border-radius: 8px;\n              margin-bottom: 24px;\n    & :hover {\n      opacity: 1.0;\n    };\n\n    & :focus {\n      opacity: 1.0;\n    }\n        };\n\n        & .MuiOutlinedInput-root {\n          & fieldset {\n            border-color: #BEDBB0;\n          };\n          & :hover fieldset {\n            border-color: #BEDBB0;\n          };\n          & .Mui-focused fieldset {\n            border-color: #BEDBB0;\n          };\n        };\n`\n\nexport const CustomDialog = styled(Dialog)`\n  \n  & .MuiPaper-root {\n    background-color: var(--themeListBgColor);\n    max-width: 350px;\n    padding: 24px;\n  margin: 0px;\n  };\n\n  & .MuiDialogContent-root {\n    padding: 0px;\n  }\n\n`","import { DialogTitle, Box, DialogContent } from \"@mui/material\";\nimport { CustomButton } from \"../../Button/CustomButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CustomDialog, StyleInput } from \"./ModalColumn.styled\";\nimport { useState } from \"react\";\n\nexport const ModalColumn = ({ isOpen, onClose, type = \"create\", initialState = '', onRemove, onUpdate }) => {\n  const [title, setTitle] = useState(initialState);\n\n  const reset = () => {\n    setTitle('');\n  }\n\n  const handleClose = () => { \n    reset();\n    onClose();\n  }\n\n  const handleChange = ({ target }) => { \n    setTitle(target.value);\n  }\n\n  const handleButtonClick = (title) => { \n    if (type === \"create\") { \n      onRemove(title);\n      handleClose();\n    }\n    if (type === \"edit\") {\n      console.log(title)\n      onUpdate(title);\n      handleClose();\n    }\n\n    \n  }\n\n\n  return (\n    <CustomDialog\n      open={isOpen}\n      fullWidth={true}\n      onClose={handleClose}\n      position=\"relative\"\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        marginBottom=\"24px\"\n      >\n        <DialogTitle\n          sx={{\n            color: \"var(--primaryTextColor)\",\n            padding: \"0\",\n            fontFamily: \"Poppins, sans-serif\",\n            fontSize: \"18px\",\n            lineHeight: \"1.5\",\n          }}\n        >\n          {type === 'create' ? 'Add Column' : 'Edit Column'}\n        </DialogTitle>\n        <CloseIcon\n          onClick={handleClose}\n          sx={{\n            color: \"var(--primaryTextColor)\",\n            position: \"absolute\",\n            top: \"14px\",\n            right: \"14px\",\n            height: \"18px\",\n            width: \"18px\",\n            cursor: \"pointer\",\n          }}\n        />\n      </Box>\n      <DialogContent>\n        <StyleInput\n          autoFocus\n          id=\"title\"\n          placeholder=\"Title\"\n          name=\"title\"\n          type=\"text\"\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: false }}\n          value={title}\n          onChange={handleChange}\n        />\n        <CustomButton onClick={() => handleButtonClick(title)} style={{height: '49px !important'}}>\n          {type === 'create' ? 'Add' : 'Edit'}\n        </CustomButton>\n      </DialogContent>\n    </CustomDialog>\n  );\n};","import { Wrapper, ActionsIconsButton } from '../ProjectOfficeStyle';\nimport ProjectOfficeCardItem from '../ProjectOfficeCardItem/ProjectOfficeCardItem';\nimport { ActionsButton, StyledTitle } from './OfficeItemStyle.styled';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { useEffect, useState } from 'react';\n\nimport ProjectCardAddButton from '../ProjectCardAddButton/ProjectCardAddButton';\nimport axios from 'axios';\n// import { useDispatch } from 'react-redux';\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\n\nconst ProjectOfficeItem = ({ column: { title, _id: columnId }, boardId, onDelete, handleEditColumnName }) => {\n  const [tasks, setTasks] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n\n\n  // const dispatch = useDispatch();\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n\n\n\n  const handleUpdate = newName => {\n    console.log(boardId)\n    console.log(columnId)\n    console.log(newName)\n    handleEditColumnName({ boardId, columnId, title: newName });\n  };\n\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const { data } = await axios.get(\n        `/boards/${boardId}/columns/${columnId}/tasks`\n      );\n\n      setTasks(data.tasks);\n    };\n    fetchTasks();\n  }, [boardId, columnId]);\n\n  \n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <Wrapper>\n        <ActionsButton key={Date.now()}>\n          <StyledTitle>{title}</StyledTitle>\n          <ActionsIconsButton>\n            <button type=\"button\" onClick={handleToggle}>\n              <EditIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n            </button>\n            <button type='button' onClick={() => onDelete(boardId, columnId)}>\n              <DeleteOutlineIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n              </button>\n          </ActionsIconsButton>\n        </ActionsButton>\n      </Wrapper>\n      {tasks && tasks.map(task => <ProjectOfficeCardItem task={task} />)}\n      <ProjectCardAddButton />\n      <ModalColumn\n        isOpen={isOpen}\n        onClose={handleToggle}\n        type=\"edit\"\n        onUpdate={handleUpdate}\n      />\n\n    </div>\n\n  );\n};\n\nexport default ProjectOfficeItem;\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 20px;\n  margin-bottom: 10px;\n`;\n\n// export const FilterText = styled.button`\n//   color: var(--cardHeaderText);\n//   font-weight: 500;\n//   font-size: 14px;\n//   line-height: 21px;\n// `;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--primaryTextColor);\n`;\n\nexport const BtnFilter = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n\n  width: 64px;\n  height: 20px;\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  border: none;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nexport const PopUpFilterWrapper = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  z-index: 999;\n`;\n\nexport const PopUpFilterContent = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background: #fff;\n  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n  padding: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const BgContainer = styled.div``;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0;\n`;\n\nexport const ButtonContainer = styled.div`\n  max-width: 252px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n\n  box-sizing: border-box;\n  padding: 14px 0;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  img {\n    display: block;\n    max-width: 100%;\n    max-height: 100%;\n    border-radius: 6px;\n  }\n\n  &.active {\n    border: 2px solid rgba(190, 219, 176, 1);\n    /* transform: scale(0.95); */\n  }\n`;\n\nexport const ButtonNoneBg = styled.button`\n  width: 28px;\n  height: 28px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 6px;\n  background-color: var(--defaultAvatarBgColor);\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-image: url();\n  background-size: cover;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--defaultImgColor);\n  fill: none;\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport sprite from '../../../images/sprite.svg';\nimport {\n  Button,\n  ButtonNoneBg,\n  ButtonContainer,\n  Title,\n  SvgIcons,\n  BgContainer,\n} from './BgChange.styled';\nimport { images } from '../../../utils/bgImgPreview';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n// import { updateUserBoard } from 'redux/dashboards/operation';\n\nconst buttonsImg = images;\n\nexport const BgChange = () => {\n  const [loadedImages, setLoadedImages] = useState([]);\n\n  //\n  // const dispatch = useDispatch();\n  const { boardName } = useParams();\n\n  const board = useSelector(state =>\n    state.dashboard.dashboards.find(item => item._id === boardName)\n  );\n  //\n\n  const backgroundId = board.background.toString();\n  console.log(backgroundId);\n\n  useEffect(() => {\n    const loadImage = async imageUrl => {\n      try {\n        const response = await fetch(imageUrl);\n        if (response.ok) {\n          return await response.blob();\n        }\n        throw new Error('Image loading failed.');\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const loadImages = async () => {\n      const promises = buttonsImg.map(button =>\n        loadImage(button.backgroundImage)\n      );\n      try {\n        const images = await Promise.all(promises);\n        setLoadedImages(images);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    loadImages();\n  }, []);\n\n  const handleButtonClick = async id => {\n    // await dispatch(\n    //   updateUserBoard({\n    //     background: id,\n    //     _id: board._id,\n    //     title: board.title,\n    //     dashboardIcon: board.dashboardIcon,\n    //   })\n    // );\n    console.log(id);\n  };\n\n  return (\n    <BgContainer>\n      <Title>Background</Title>\n      <ButtonContainer>\n        <ButtonNoneBg type=\"button\" onClick={() => handleButtonClick(0)}>\n          <SvgIcons width={18} height={18}>\n            <use href={sprite + '#icon-bg-default'} />\n          </SvgIcons>\n        </ButtonNoneBg>\n        {buttonsImg.map((button, index) => (\n          <Button\n            key={button.id}\n            type=\"button\"\n            style={{\n              backgroundImage: `url(${button.backgroundImage})`,\n              backgroundSize: 'cover',\n            }}\n            onClick={() => handleButtonClick(button.id)}\n            className={\n              backgroundId.toString() === button.id.toString() ? 'active' : ''\n            }\n          >\n            {loadedImages[index] && (\n              <img\n                srcSet={`${button.backgroundImage} 1x, ${button.retinaBackgroundImage} 2x`}\n                alt=\"\"\n              />\n            )}\n          </Button>\n        ))}\n      </ButtonContainer>\n    </BgContainer>\n  );\n};\n","import styled from 'styled-components';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nexport const RadioGr = styled(RadioGroup)`\n  margin: 8px 0 0 32px;\n`;\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding-top: 14px;\n  border-top: 1px solid var(--modalGorizontalBorderColor);\n`;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const BtnShowAll = styled.button`\n  border: none;\n  background: inherit;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  text-decoration-line: underline;\n\n  color: var(--popupTextColor);\n`;\n\nexport const radioButtons = [\n  {\n    value: 'withoutPriority',\n    label: 'Without priority',\n    color: '#5B5B5B',\n    checkedColor: '#5B5B5B',\n    buttonColor: '#5B5B5B',\n  },\n  {\n    value: 'low',\n    label: 'Low',\n    color: '#5B5B5B',\n    checkedColor: '#8FA1D0',\n    buttonColor: '#8FA1D0',\n  },\n  {\n    value: 'medium',\n    label: 'Medium',\n    color: '#5B5B5B',\n    checkedColor: '#E09CB5',\n    buttonColor: '#E09CB5',\n  },\n  {\n    value: 'high',\n    label: 'High',\n    color: '#5B5B5B',\n    checkedColor: '#BEDBB0',\n    buttonColor: '#BEDBB0',\n  },\n];\n","import React, { useState } from 'react';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport {\n  Title,\n  FilterContainer,\n  BtnShowAll,\n  RadioGr,\n  radioButtons,\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const [selectedValue, setSelectedValue] = useState('');\n\n  const primaryTextColor = `var(--primaryTextColor)`;\n\n  // const handleChange = event => {\n  //   setSelectedValue(event.target.value);\n  // };\n\n  const handleReset = () => {\n    setSelectedValue('');\n  };\n\n  const handleShowAll = () => {\n    console.log('Show all selected');\n    handleReset();\n  };\n\n  const handleRadioButtonChange = event => {\n    console.log(`Selected priority: ${event.target.value}`);\n    setSelectedValue(event.target.value);\n  };\n\n  return (\n    <>\n      <FilterContainer>\n        <Title>Label color</Title>\n        <BtnShowAll type=\"button\" onClick={handleShowAll}>\n          Show all\n        </BtnShowAll>\n      </FilterContainer>\n      <FormControl>\n        <RadioGr\n          aria-labelledby=\"priority\"\n          name=\"radio-buttons-group\"\n          value={selectedValue}\n          onChange={handleRadioButtonChange}\n        >\n          {radioButtons.map(button => (\n            <FormControlLabel\n              key={button.value}\n              sx={{\n                color: button.color,\n                '& .Mui-checked.MuiRadio-root': {\n                  color: button.checkedColor,\n                },\n                '& .MuiSvgIcon-root': {\n                  fontSize: 14,\n                },\n                '& .MuiFormControlLabel-label': {\n                  fontSize: 12,\n                },\n                '& .MuiButtonBase-root.MuiRadio-root': {\n                  color: button.checkedColor,\n                  padding: 0,\n                  backgroundColor:\n                    selectedValue === button.value\n                      ? 'transparent'\n                      : button.buttonColor,\n                },\n                '& .MuiTypography-root': {\n                  marginLeft: 1,\n                  color:\n                    selectedValue === button.value\n                      ? primaryTextColor\n                      : 'inherit',\n                },\n              }}\n              value={button.value}\n              control={<Radio />}\n              label={button.label}\n            />\n          ))}\n        </RadioGr>\n      </FormControl>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  position: relative;\n\n  width: 302px;\n  height: auto;\n\n  box-sizing: border-box;\n\n  border-radius: 8px;\n  border: 1px solid var(--modalBorderColor);\n  background: var(--themeListBgColor);\n  padding: 24px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.05);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  right: 14px;\n  top: 14px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 16px;\n  height: 16px;\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  border: none;\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--primaryTextColor);\n`;\n\nexport const ModalHeader = styled.h4`\n  color: var(--primaryTextColor);\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  padding-bottom: 14px;\n  border-bottom: 1px solid var(--modalGorizontalBorderColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const Wraper = styled.div`\n  position: absolute;\n  z-index: 999;\n  top: 32px;\n  right: 0;\n`;\n","import React, { useRef } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport { BgChange } from './BgChange/BgChange';\nimport { Filter } from './Filter/Filter';\nimport {\n  ModalContainer,\n  ModalHeader,\n  CloseButton,\n  SvgIcons,\n  Wraper,\n} from './PopUpFilter.styled';\n\nexport const PopUpFilter = ({ onClose }) => {\n  const modalRef = useRef(null);\n\n  const handleClickOutside = event => {\n    if (modalRef.current && !modalRef.current.contains(event.target)) {\n      onClose();\n    }\n  };\n\n  return (\n    <Wraper onClick={handleClickOutside}>\n      <ModalContainer ref={modalRef}>\n        <CloseButton type=\"button\" onClick={onClose}>\n          <SvgIcons aria-label=\"close modal select icon\" width={18} height={18}>\n            <use href={`${sprite}#icon-x-close`}></use>\n          </SvgIcons>\n        </CloseButton>\n        <ModalHeader>Filters</ModalHeader>\n        <BgChange />\n        <Filter />\n      </ModalContainer>\n    </Wraper>\n  );\n};\n","import React, { useState } from 'react';\nimport { Wrapper } from '../ProjectOfficeStyle';\nimport { BtnFilter, Title, SvgIcons } from './ProjectOfficeHeaderStyle';\nimport sprite from '../../../images/sprite.svg';\nimport { PopUpFilter } from 'components/PopUpFilter/PopUpFilter';\n\nconst ProjectOfficeHeader = () => {\n  const [isPopUpVisible, setPopUpVisible] = useState(false);\n\n  const togglePopUp = () => {\n    setPopUpVisible(!isPopUpVisible);\n  };\n\n  const handleClosePopUp = () => {\n    setPopUpVisible(false);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Title>Project</Title>\n\n        <BtnFilter type=\"button\" onClick={togglePopUp}>\n          <SvgIcons aria-label=\"filter icon\" width={18} height={18}>\n            <svg>\n              <use xlinkHref={`${sprite}#icon-filter`} />\n            </svg>\n          </SvgIcons>\n          <span>Filter</span>\n        </BtnFilter>\n        {isPopUpVisible && <PopUpFilter onClose={handleClosePopUp} />}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default ProjectOfficeHeader;\n","import { CustomButton } from 'components/Button/CustomButton';\nimport { useState } from 'react';\n\nimport { StackWrapper } from '../ProjectOfficeStyle';\n\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\n// import { useParams } from 'react-router-dom';\n\nconst AddColumnButton = ({ handleAddColumn }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  // const columns = [\n  //   { columnName: 'one', id: 1 },\n  //   { columnName: 'two', id: 2 },\n  // ];\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  // const handleCreateColumn = (columnName) => {\n  //   //   const newArr = [...columns, { id: 4, columnName: columnName }];\n  //     console.log(columns)\n  // }\n\n  return (\n    <>\n      <StackWrapper direction=\"row\" spacing={2}>\n        <CustomButton isWhiteBackground={true} onClick={handleToggleModal}>\n          Add\n        </CustomButton>\n        <ModalColumn\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          onRemove={handleAddColumn}\n        />\n        {/* <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another column\n            </ButtonStyled> */}\n      </StackWrapper>\n    </>\n  );\n};\n\nexport default AddColumnButton;\n","import styled from 'styled-components';\n\nconst baseBgUrl =\n  'https://res.cloudinary.com/dxhypjavs/image/upload/v1687378707/command_project_task_pro_images/';\n\nexport const BackgroundContainer = styled.div`\n  /* background-color: red; */\n  background-size: cover;\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-color: ${props => (props.bgnumber ? 'initial' : 'transparent')};\n\n\n  @media screen and (max-width: 374px) {\n    background-image: ${props =>\n      `url(${baseBgUrl}mobile/bg-image-${props.bgnumber}.jpg)`};\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (max-width: 374px),\n    screen and (min-resolution: 192dpi) and (max-width: 374px),\n    screen and (min-resolution: 2dppx) and (max-width: 374px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}mobile/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n\n  @media screen and (min-width: 375px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}tablet/bg-image-${props.bgnumber}.jpg)`};\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 375px),\n    screen and (min-resolution: 192dpi) and (min-width: 375px),\n    screen and (min-resolution: 2dppx) and (min-width: 375px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}tablet/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n\n  @media screen and (min-width: 768px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}desktop/bg-image-${props.bgnumber}.jpg)`};\n  }\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 768px),\n    screen and (min-resolution: 192dpi) and (min-width: 768px),\n    screen and (min-resolution: 2dppx) and (min-width: 768px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}desktop/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n`;","// import { useState } from 'react';\n\nimport ProjectOfficeItem from './ProjectOfficeItem/ProjectOfficeItem';\nimport { useEffect } from 'react';\n// import { getColumns } from 'services/fetchColumn';\nimport ProjectOfficeHeader from './ProjectOfficeHeader/ProjectOfficeHeader';\nimport AddColumnButton from './AddColumnsButton/AddColumnsButton';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addColumn, deleteColumn, getColumnsForBoard, updateColumn } from 'redux/dashboards/operation';\nimport {\n  selectColumnsForBoard,\n  selectDashboards,\n} from 'redux/dashboards/selectors';\nimport { Box } from '@mui/material';\nimport { BackgroundContainer } from './ProjectOfficeBgContainer';\n\n\nconst ProjectOffice = () => {\n  const isLoading = useSelector(state => state.dashboard.isLoading);\n  const { boardName } = useParams();\n  const columns = useSelector(state => selectColumnsForBoard(state, boardName));\n  const dashboards = useSelector(selectDashboards);\n  const currentBoard = dashboards.find(board => board._id === boardName);\n  const dispatch = useDispatch();\n  \n  const handleDeletecolumn = async (boardId, columnId) => {\n    await dispatch(deleteColumn({ boardId, columnId }));\n    dispatch(getColumnsForBoard(boardName));\n  };\n\n\n  const handleEditColumnName = async ({ boardId, columnId, title }) => {\n    await dispatch(updateColumn({ boardId, columnId, title }));\n    console.log('UPADATE NAME NEW')\n    dispatch(getColumnsForBoard(boardName));\n    \n  };\n\n\n\n  const handleAddColumn = columnName => {\n    dispatch(addColumn({ title: columnName, boardId: boardName }));\n  };\n\n  useEffect(() => {\n    dispatch(getColumnsForBoard(boardName));\n  }, [dispatch, boardName]);\n\n\n\n\n\n  return (\n    // <Box sx={{ marginLeft: '20%' }}>\n    <BackgroundContainer bgnumber={currentBoard ? currentBoard.background : ''}>\n      <Box sx={{ marginLeft: 3 }}>\n        <ProjectOfficeHeader />\n        {!isLoading && <AddColumnButton handleAddColumn={handleAddColumn} />}\n        {/* <div style={{ display: 'flex', flexDirection: 'row' }}> */}\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\n          {columns ? (\n            columns.map(column => (\n              <ProjectOfficeItem\n                column={column}\n                boardId={boardName}\n                key={column._id}\n                onDelete={handleDeletecolumn}\n                handleEditColumnName={handleEditColumnName}\n              />\n            ))\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n        {/* </div> */}\n        {/* <ProjectOfficeItem column={columns} /> */}\n      </Box>\n    </BackgroundContainer>\n  );\n};\n\nexport default ProjectOffice;\n","import { useEffect } from \"react\";\nimport ProjectOffice from \"../components/ProjectOffice/ProjectOffice\";\nimport { useSelector } from \"react-redux\";\nimport { selectDashboards } from \"redux/dashboards/selectors\";\nimport { DefaultScreen } from \"components/DefaultScreen/DefaultScreen\";\n\nconst ScreensPage = () => {\n  const dashboards = useSelector(selectDashboards);\n\n  useEffect(() => {\n  }, [dashboards]);\n\n\n  console.log(dashboards);\n  return (\n    <>\n      {dashboards && dashboards.length > 0 ? <ProjectOffice /> : <DefaultScreen />} \n    </>\n  );\n};\n\nexport default ScreensPage;\n","export const selectDashboards = state => state.dashboard.dashboards;\n\nexport const selectColumnsForBoard = (state, boardId) => {\n  const board = state.dashboard.dashboards.find(board => board._id === boardId);\n  return board ? board.columns : [];\n};\n\nexport const selectCurrentDashboard = state => state.dashboard.currentDashboard;","export const images = [\n  {\n    id: 1,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-1.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-1_2x.jpg',\n  },\n  {\n    id: 2,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-2.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-2_2x.jpg',\n  },\n  {\n    id: 3,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-3.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-3_2x.jpg',\n  },\n  {\n    id: 4,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-4.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-4_2x.jpg',\n  },\n  {\n    id: 5,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-5.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-5_2x.jpg',\n  },\n  {\n    id: 6,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-6.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-6_2x.jpg',\n  },\n  {\n    id: 7,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-7.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-7_2x.jpg',\n  },\n  {\n    id: 8,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-8.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-8_2x.jpg',\n  },\n  {\n    id: 9,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-9.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-9_2x.jpg',\n  },\n  {\n    id: 10,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-10.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-10_2x.jpg',\n  },\n  {\n    id: 11,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-11.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-11_2x.jpg',\n  },\n\n  {\n    id: 12,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-12.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-12_2x.jpg',\n  },\n  {\n    id: 13,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-13.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-13_2x.jpg',\n  },\n  {\n    id: 14,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-14.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-14_2x.jpg',\n  },\n  {\n    id: 15,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-15.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-15_2x.jpg',\n  },\n];"],"names":["DefaultWrapper","styled","_templateObject","_taggedTemplateLiteral","DefaultText","_templateObject2","AccentText","_templateObject3","DefaultScreen","_jsx","children","_jsxs","Wrapper","position","display","alignItems","justifyContent","marginTop","marginRight","gap","ActionsIconsButton","flexDirection","CardFooterStyled","flexWrap","height","overflow","paddingRight","paddingLeft","CardIconsWrapper","CardActionsStyled","CardActions","StackWrapper","Stack","width","background","borderRadius","CardButtonStyled","marginBottom","ButtonStyled","Button","color","fontSize","textTransform","AddIconStyled","AddIcon","CardStyled","CardTitle","CardText","CardFooterTitle","_templateObject4","DividerStyled","_templateObject5","WrapperFooter","_templateObject6","WrapperText","_templateObject7","StatusWrapper","_templateObject8","StatusStyled","_templateObject9","isSameDay","date1","date2","getDate","getMonth","getFullYear","formatDate","date","today","Date","tomorrow","optionsAllDays","toLocaleDateString","weekday","optionsNearestDays","month","setDate","concat","CustomDialog","Dialog","backgroundColor","maxWidth","padding","margin","border","hoverFocusStyles","css","CloseButton","Form","FormText","FromInput","FormTextarea","RadioGroup","RadioLabel","props","value","RadioButton","_templateObject10","Wrap","_templateObject11","Text","_templateObject12","CalendarWrapp","_templateObject13","CalendarText","_templateObject14","CalendarArrow","_templateObject15","CardPopUp","_ref","isOpen","onClose","_useForm","useForm","register","handleSubmit","setValue","reset","errors","formState","_useState","useState","toUTCString","getTime","_useState2","_slicedToArray","unixFromat","setUnixFormat","_useState3","_useState4","dateBtn","setDateBtn","_useState5","_useState6","showDatePicker","setShowDatePicker","open","type","onClick","CloseIcon","sx","style","onSubmit","data","console","log","_objectSpread","minLength","required","pureFinalPropsSelectorFactory","placeholder","id","htmlFor","checked","prevState","href","sprite","toString","DatePicker","selected","onChange","UTC","UNIX","dateFormat","inline","minDate","exampleRequired","CustomButton","task","_id","title","description","priority","deadline","setIsOpen","handleToggleModal","prevstate","_Fragment","CardActionArea","CardContent","component","NotificationsNoneIcon","ArrowCircleRightIcon","EditIcon","DeleteOutlineIcon","ActionsButton","StyledTitle","direction","spacing","startIcon","StyleInput","TextField","ModalColumn","_ref$type","_ref$initialState","initialState","onRemove","onUpdate","setTitle","handleClose","fullWidth","Box","DialogTitle","fontFamily","lineHeight","top","right","cursor","DialogContent","autoFocus","name","variant","InputLabelProps","shrink","_ref2","target","handleButtonClick","_ref$column","column","columnId","boardId","onDelete","handleEditColumnName","tasks","setTasks","handleToggle","useEffect","fetchTasks","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","wrap","_context","prev","next","axios","sent","stop","apply","arguments","now","map","ProjectOfficeCardItem","ProjectCardAddButton","newName","Title","SvgIcons","BtnFilter","BgContainer","ButtonContainer","ButtonNoneBg","buttonsImg","images","BgChange","loadedImages","setLoadedImages","boardName","useParams","backgroundId","useSelector","state","dashboard","dashboards","find","item","loadImage","imageUrl","response","fetch","ok","blob","abrupt","Error","t0","error","_x","loadImages","_callee2","promises","_images","_context2","button","backgroundImage","Promise","all","_ref3","_callee3","_context3","_x2","index","backgroundSize","className","srcSet","retinaBackgroundImage","alt","RadioGr","FilterContainer","BtnShowAll","radioButtons","label","checkedColor","buttonColor","Filter","selectedValue","setSelectedValue","FormControl","event","FormControlLabel","marginLeft","control","Radio","ModalContainer","ModalHeader","Wraper","PopUpFilter","modalRef","useRef","current","contains","ref","isPopUpVisible","setPopUpVisible","xlinkHref","handleAddColumn","isWhiteBackground","baseBgUrl","BackgroundContainer","bgnumber","isLoading","columns","selectColumnsForBoard","currentBoard","selectDashboards","board","dispatch","useDispatch","handleDeletecolumn","deleteColumn","getColumnsForBoard","updateColumn","_x3","ProjectOfficeHeader","AddColumnButton","columnName","addColumn","ProjectOfficeItem","length","ProjectOffice"],"sourceRoot":""}