{"version":3,"file":"static/js/563.6c62cce0.chunk.js","mappings":"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","sources":["components/DefaultScreen/DefaultScreen.styled.js","components/DefaultScreen/DefaultScreen.jsx","components/ProjectOffice/ProjectOfficeStyle.jsx","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.styled.jsx","components/ProjectOffice/ProjectCardAddButton/ProjectCardAddButton.jsx","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.jsx","components/ProjectOffice/ProjectOfficeItem/OfficeItemStyle.styled.jsx","components/ProjectOffice/ProjectOfficeItem/ProjectOfficeItem.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeaderStyle.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeader.jsx","components/Modal/ModalColumn/ModalColumn.styled.jsx","components/Modal/ModalColumn/ModalColumn.jsx","components/ProjectOffice/AddColumnsButton/AddColumnsButton.jsx","components/ProjectOffice/ProjectOffice.jsx","pages/ScreensPage.jsx","redux/dashboards/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DefaultWrapper = styled.div`\nwidth: 100%;\nheight: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n`;\n\nexport const DefaultText = styled.p`\nwidth: 486px;\nfont-size: 14px;\nline-height: 1.3;\nletter-spacing: -0.02em;\ncolor: rgba(255, 255, 255, 0.5);\n`\n\nexport const AccentText = styled.span`\ncolor: #BEDBB0;\n`","import { AccentText, DefaultText, DefaultWrapper } from \"./DefaultScreen.styled\"\n\nexport const DefaultScreen = () => {\n\n    return (\n        \n        <DefaultWrapper>\n            <DefaultText>Before starting your project, it is essential <AccentText>to create a board</AccentText> to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.</DefaultText>\n        </DefaultWrapper>\n    )\n}","import { styled } from '@mui/system';\nimport { Button, CardActions } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport AddIcon from '@mui/icons-material/Add';\n\n\nexport const Wrapper = styled('div')({ \n    display: 'flex', \n    justifyContent: 'space-between',\n    marginTop: '5px',\n    marginRight: '10px',\n    gap: '5px'\n});\n\nexport const FilterWrapper = styled('div')({\n    marginRight: '10px', \n    display: 'flex', \n    flexDirection: 'row', \n    alignItems: 'center' \n});\n\nexport const ActionsIconsButton = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-end', \n    alignItems: 'center', \n    gap: '8px'\n});\n\nexport const CardWrapper = styled('div')({\n    display: 'flex', \n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    height: '600px',\n    overflow: 'scroll',\n\n});\n\nexport const CardFooterStyled = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-start', \n    paddingRight: '20px', \n    paddingLeft: '20px', \n    gap: '15px'\n});\n\nexport const CardIconsWrapper = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-end',\n    paddingRight: '20px', \n    gap: '8px',\n    marginTop: '-5px'\n});\n\n\nexport const CardActionsStyled= styled(CardActions)({\n    paddingRight: '20px', \n    paddingLeft: '20px'\n});\n\nexport const StackWrapper = styled(Stack)({\n    width: '330px', \n    height: '56px', \n    background: '#F6F6F7', \n    borderRadius: '8px' \n});\n\nexport const CardButtonStyled = styled(Stack)({\n    width: '330px', \n    height: '56px', \n    background: '#BEDBB0', \n    borderRadius: '8px',\n    marginBottom: '20px'\n});\n\nexport const ButtonStyled = styled(Button)({\n    paddingLeft: '80px', \n    color: '#161616', \n    fontSize: '14px', \n    textTransform: 'none'\n});\n\nexport const AddIconStyled = styled(AddIcon)({\n    width: '28px', \n    height: '28px',\n    borderRadius: '8px' \n});\n","import styled from 'styled-components';\n\nexport const CardStyled = styled.p`\n    background: var(--cardItem);\n    max-width: 334px; \n    height: 154px; \n    border-radius: 8px; \n    margin-top: 25px;\n    margin-right: 10px;\n    margin-bottom: 15px;\n    border-left: 4px solid #8FA1D0;\n    padding-bottom: 15px;\n`;\n\nexport const CardTitle = styled.p`\n    color: var(--cardHeaderText);\n    font-weight: 600; \n    font-size: 14px;\n    line-height: 21px; \n    margin-bottom: 7px;\n`;\n\nexport const CardText = styled.p`\n    color: var(--cardItemText);\n    font-weight: 400; \n    font-size: 12px;\n    line-height: 16px;\n    white-space: nowrap;\n    overflow: hidden; \n    text-overflow: ellipsis;\n    width: 300px;\n`;\n\nexport const CardFooterTitle = styled.p`\n    color: var(--cardItemText);\n    font-weight: 400; \n    font-size: 10px;\n    line-height: 12px; \n    padding-top: 5px;\n`;\n\nexport const DividerStyled = styled.div`\n    background: var(--cardItemText);\n    width: 300px;\n    height: 1px;\n`;\n\nexport const WrapperFooter = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const WrapperText = styled.p`\n    color: var(--cardHeaderText);\n    font-weight: 400; \n    font-size: 10px;\n    line-height: 15px; \n    padding-top: 8px;\n`;\n\nexport const StatusWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    gap: 4px;\n`;\n\nexport const StatusStyled = styled.div`\n    width: 12px;\n    height: 12px;\n    background: #8FA1D0;\n    border-radius: 50%;\n`;\n","import { Wrapper, ButtonStyled, AddIconStyled, CardButtonStyled } from '../ProjectOfficeStyle';\n\nconst ProjectCardAddButton = () => {\n  return (\n    <>\n    <Wrapper>\n        {Array.from(Array(3)).map((_, index) => (\n            <CardButtonStyled direction=\"row\" spacing={2} key={index}>\n            <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another card\n            </ButtonStyled>\n            </CardButtonStyled>\n        ))}\n    </Wrapper>\n\n\n    </> \n  );\n};\n\nexport default ProjectCardAddButton;\n\n","import { CardWrapper, CardActionsStyled, CardFooterStyled, CardIconsWrapper } from '../ProjectOfficeStyle';\nimport CardContent from '@mui/material/CardContent';\nimport { CardActionArea } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\nimport { CardStyled, CardTitle, CardText, CardFooterTitle, DividerStyled, WrapperFooter, WrapperText, StatusWrapper, StatusStyled } from './ProjectOfficeCardItem.styled';\nimport ProjectCardAddButton from '../ProjectCardAddButton/ProjectCardAddButton';\n\nconst ProjectOfficeCardItem = () => {\n  return (\n    <>\n        <CardWrapper>\n            {Array.from(Array(1)).map((_, index) => (\n                <CardStyled key={index}>\n                    <CardActionArea>\n                        <CardContent>\n                            <CardTitle component=\"div\">\n                                The Watch Spot Design\n                            </CardTitle>\n                            <CardText>\n                                Create a visually stunning and eye-catching watch dial design that embodies our brand's\n                            </CardText>\n                        </CardContent>\n                    </CardActionArea>\n                    <CardActionsStyled>\n                        <DividerStyled />\n                    </CardActionsStyled>\n                    <CardFooterStyled>\n                        <CardFooterTitle>\n                            Priority\n                        </CardFooterTitle>\n                        <CardFooterTitle>\n                            Deadline\n                        </CardFooterTitle>\n                    </CardFooterStyled>\n\n                    <WrapperFooter>\n                    <CardFooterStyled>\n                        <WrapperText>\n                            <StatusWrapper>\n                                <StatusStyled/>Low\n                            </StatusWrapper>\n                        </WrapperText>\n                        <WrapperText>\n                            12/05/2023\n                        </WrapperText>\n                    </CardFooterStyled>\n\n                    <CardIconsWrapper>\n                        <NotificationsNoneIcon fontSize='small' sx={{color: '#888888'}}  />\n                        <ArrowCircleRightIcon fontSize='small' sx={{color: '#888888'}}  />\n                        <EditIcon fontSize='small' sx={{color: '#888888'}}  />\n                        <DeleteOutlineIcon fontSize='small' sx={{color: '#888888'}}  />\n                    </CardIconsWrapper>\n\n                    </WrapperFooter>\n\n                </CardStyled>\n            ))}\n            \n        </CardWrapper>\n        <ProjectCardAddButton />\n    </> \n  );\n};\n\nexport default ProjectOfficeCardItem;\n\n","import styled from 'styled-components';\n\nexport const ActionsButton = styled.div`\n    background: var(--actionsButton);\n    width: 334px; \n    height: 56px;\n    border-radius: 8px;\n    padding: 20px;\n    display: flex; \n    justify-content: space-between;\n`;\n\nexport const StyledTitle = styled.p`\n    color: var(--primaryTextColor);\n    font-weight: 500; \n    font-size: 14px;\n    line-height: 21px;\n`;\n\n","import { Wrapper, ActionsIconsButton } from '../ProjectOfficeStyle';\nimport ProjectOfficeCardItem from '../ProjectOfficeCardItem/ProjectOfficeCardItem';\nimport { ActionsButton, StyledTitle } from './OfficeItemStyle.styled';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\n\n\nconst ProjectOfficeItem = ({ column: { title } }) => {\n  console.log(title)\n  return (\n    <>\n        <Wrapper>\n        {Array.from(Array(3)).map((_, index) => (\n            <ActionsButton key={index}>\n            <StyledTitle>{ title }</StyledTitle>\n            <ActionsIconsButton>\n                <EditIcon fontSize='small' sx={{color: '#888888'}} /> \n                <DeleteOutlineIcon fontSize='small' sx={{color: '#888888'}}  />\n            </ActionsIconsButton>\n        </ActionsButton>\n        ))}\n        </Wrapper>\n        <ProjectOfficeCardItem />\n\n    </> \n  );\n};\n\nexport default ProjectOfficeItem;\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n    color: var(--cardHeaderText);\n    font-weight: 500; \n    font-size: 18px;\n    line-height: 27px; \n    margin-bottom: 10px;\n`;\n\nexport const FilterText = styled.p`\n      color: var(--cardHeaderText);\n      font-weight: 500; \n      font-size: 14px; \n      line-height: 21px;\n`;\n\n","import FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport { FilterWrapper, Wrapper } from '../ProjectOfficeStyle';\nimport { FilterText, Title } from './ProjectOfficeHeaderStyle';\n\n\nconst ProjectOfficeHeader = () => {\n  return (\n    <>\n        <Wrapper>\n            <Title>Project</Title>\n            <FilterWrapper>\n                <FilterAltIcon sx={{color: '#D2D2D2'}}  />\n                <FilterText>Filters</FilterText>\n            </FilterWrapper>\n        </Wrapper>\n    </> \n  );\n};\n\nexport default ProjectOfficeHeader;\n\n","import { TextField, Dialog } from \"@mui/material\";\nimport { styled } from '@mui/system';\n\n\nexport const StyleInput = styled(TextField)({\n  backgroundColor: \"#1F1F1F\",\n  maxWidth: \"302px\",\n   marginBottom: '24px',\n\n        \"& label.Mui-focused\": {\n          color: \"#fff\",\n        },\n\n  \"& .MuiInputBase-input\": {\n          padding: \"14px 16px\",\n          color: \"#fff\",\n          fontFamily: \"Poppins, sans-serif\",\n        },\n        \"& .MuiFormLabel-root\": {\n          color: \"#fff\",\n          fontFamily: \"Poppins, sans-serif\",\n        },\n\n  \"& .MuiInputBase-root\": {\n          opacity: '0.4',\n    borderRadius: \"8px\",\n    '&:hover': {\n      opacity: '1.0',\n    },\n\n    '&:focus': {\n      opacity: '1.0',\n    }\n        },\n\n        \"& .MuiOutlinedInput-root\": {\n          \"& fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n          \"&:hover fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n          \"&.Mui-focused fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n        },\n\n});\n\nexport const CustomDialog = styled(Dialog)({\n  \n  '& .MuiPaper-root': {\n    backgroundColor: 'black',\n    maxWidth: '350px',\n    padding: '24px',\n  margin: '0px',\n  },\n\n  '& .MuiDialogContent-root': {\n    padding: '0px',\n  }\n});","import { DialogTitle, Box, DialogContent } from \"@mui/material\";\nimport { CustomButton } from \"../../Button/CustomButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CustomDialog, StyleInput } from \"./ModalColumn.styled\";\nimport { useState } from \"react\";\n\nexport const ModalColumn = ({ isOpen, onClose, type = \"create\", initialState = '', onRemove }) => {\n  const [title, setTitle] = useState(initialState);\n\n  const reset = () => {\n    setTitle('');\n  }\n\n  const handleClose = () => { \n    reset();\n    onClose();\n  }\n\n  const handleChange = ({ target }) => { \n    setTitle(target.value);\n  }\n\n  return (\n    <CustomDialog\n      open={isOpen}\n      fullWidth={true}\n      onClose={handleClose}\n      position=\"relative\"\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        marginBottom=\"24px\"\n      >\n        <DialogTitle\n          sx={{\n            color: \"white\",\n            padding: \"0\",\n            fontFamily: \"Poppins, sans-serif\",\n            fontSize: \"18px\",\n            lineHeight: \"1.5\",\n          }}\n        >\n          {type === 'create' ? 'Add Column' : 'Edit Column'}\n        </DialogTitle>\n        <CloseIcon\n          onClick={handleClose}\n          sx={{\n            color: \"white\",\n            position: \"absolute\",\n            top: \"14px\",\n            right: \"14px\",\n            height: \"18px\",\n            width: \"18px\",\n            cursor: \"pointer\",\n          }}\n        />\n      </Box>\n      <DialogContent>\n        <StyleInput\n          autoFocus\n          id=\"title\"\n          placeholder=\"Title\"\n          name=\"title\"\n          type=\"text\"\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: false }}\n          value={title}\n          onChange={handleChange}\n        />\n        <CustomButton onClick={() => { onRemove(title);  handleClose()}}>\n                  Add\n        </CustomButton>\n      </DialogContent>\n    </CustomDialog>\n  );\n};","import { CustomButton } from 'components/Button/CustomButton';\nimport { useState } from 'react';\n\nimport { StackWrapper } from '../ProjectOfficeStyle';\n\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\n// import { useParams } from 'react-router-dom';\n\nconst AddColumnButton = ({ handleAddColumn }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  // const columns = [\n  //   { columnName: 'one', id: 1 },\n  //   { columnName: 'two', id: 2 },\n  // ];\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  // const handleCreateColumn = (columnName) => {\n  //   //   const newArr = [...columns, { id: 4, columnName: columnName }];\n  //     console.log(columns)\n  // }\n\n  return (\n    <>\n      <StackWrapper direction=\"row\" spacing={2}>\n        <CustomButton isWhiteBackground={true} onClick={handleToggleModal}>\n          Add\n        </CustomButton>\n        <ModalColumn\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          onRemove={handleAddColumn}\n        />\n        {/* <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another column\n            </ButtonStyled> */}\n      </StackWrapper>\n    </>\n  );\n};\n\nexport default AddColumnButton;\n","// import { useState } from 'react';\n\nimport ProjectOfficeItem from './ProjectOfficeItem/ProjectOfficeItem';\nimport { useEffect } from 'react';\n// import { getColumns } from 'services/fetchColumn';\nimport ProjectOfficeHeader from './ProjectOfficeHeader/ProjectOfficeHeader';\nimport AddColumnButton from './AddColumnsButton/AddColumnsButton';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addColumn, getColumnsForBoard } from 'redux/dashboards/operation';\nimport { selectColumnsForBoard } from 'redux/dashboards/selectors';\nimport { Box } from '@mui/material';\n\nconst ProjectOffice = () => {\n  const isLoading = useSelector(state => state.dashboard.isLoading);\n  const { boardName } = useParams();\n  const columns = useSelector(state => selectColumnsForBoard(state, boardName));\n\n  const dispatch = useDispatch();\n\n  const handleAddColumn = columnName => {\n    dispatch(addColumn({ title: columnName, boardId: boardName }));\n  };\n\n  useEffect(() => {\n    dispatch(getColumnsForBoard(boardName));\n  }, [dispatch, boardName]);\n\n  return (\n    <Box sx={{marginLeft: '20%'}}>\n      <ProjectOfficeHeader />\n      {!isLoading &&\n        <AddColumnButton handleAddColumn={handleAddColumn} />\n      }\n      {columns ? (\n  columns.map(column => (\n    <ProjectOfficeItem column={column} key={column._id} />\n  ))\n) : (\n  <p>Loading...</p>\n)}\n      {/* <ProjectOfficeItem column={columns} /> */}\n    </Box>\n  );\n};\n\nexport default ProjectOffice;\n","import { useEffect } from \"react\";\nimport ProjectOffice from \"../components/ProjectOffice/ProjectOffice\";\nimport { useSelector } from \"react-redux\";\nimport { selectDashboards } from \"redux/dashboards/selectors\";\nimport { DefaultScreen } from \"components/DefaultScreen/DefaultScreen\";\n\nconst ScreensPage = () => {\n  const dashboards = useSelector(selectDashboards);\n\n  useEffect(() => {\n  }, [dashboards]);\n\n\n  console.log(dashboards);\n  return (\n    <>\n      {dashboards && dashboards.length > 0 ? <ProjectOffice /> : <DefaultScreen />} \n    </>\n  );\n};\n\nexport default ScreensPage;\n","export const selectDashboards = state => state.dashboard.dashboards;\nexport const selectColumnsForBoard = (state, boardId) => {\n  const board = state.dashboard.dashboards.find(board => board._id === boardId);\n  return board ? board.columns : [];\n};"],"names":["DefaultWrapper","styled","_templateObject","_taggedTemplateLiteral","DefaultText","_templateObject2","AccentText","_templateObject3","DefaultScreen","_jsx","children","_jsxs","Wrapper","display","justifyContent","marginTop","marginRight","gap","FilterWrapper","flexDirection","alignItems","ActionsIconsButton","CardWrapper","flexWrap","height","overflow","CardFooterStyled","paddingRight","paddingLeft","CardIconsWrapper","CardActionsStyled","CardActions","StackWrapper","Stack","width","background","borderRadius","CardButtonStyled","marginBottom","ButtonStyled","Button","color","fontSize","textTransform","AddIconStyled","AddIcon","CardStyled","CardTitle","CardText","CardFooterTitle","_templateObject4","DividerStyled","_templateObject5","WrapperFooter","_templateObject6","WrapperText","_templateObject7","StatusWrapper","_templateObject8","StatusStyled","_templateObject9","_Fragment","Array","from","map","_","index","direction","spacing","startIcon","CardActionArea","CardContent","component","NotificationsNoneIcon","sx","ArrowCircleRightIcon","EditIcon","DeleteOutlineIcon","ProjectCardAddButton","ActionsButton","StyledTitle","_ref","title","column","console","log","ProjectOfficeCardItem","Title","FilterText","FilterAltIcon","StyleInput","TextField","backgroundColor","maxWidth","padding","fontFamily","opacity","borderColor","CustomDialog","Dialog","margin","ModalColumn","isOpen","onClose","_ref$type","type","_ref$initialState","initialState","onRemove","_useState","useState","_useState2","_slicedToArray","setTitle","handleClose","open","fullWidth","position","Box","DialogTitle","lineHeight","CloseIcon","onClick","top","right","cursor","DialogContent","autoFocus","id","placeholder","name","variant","InputLabelProps","shrink","value","onChange","_ref2","target","CustomButton","handleAddColumn","setIsOpen","handleToggleModal","prevstate","isWhiteBackground","isLoading","useSelector","state","dashboard","boardName","useParams","columns","selectColumnsForBoard","dispatch","useDispatch","useEffect","getColumnsForBoard","marginLeft","ProjectOfficeHeader","AddColumnButton","columnName","addColumn","boardId","ProjectOfficeItem","_id","dashboards","selectDashboards","length","ProjectOffice","board","find"],"sourceRoot":""}