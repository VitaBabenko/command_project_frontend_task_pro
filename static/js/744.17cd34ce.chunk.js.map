{"version":3,"file":"static/js/744.17cd34ce.chunk.js","mappings":"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","sources":["components/ProjectOffice/ProjectOfficeStyle.jsx","components/ProjectOffice/ProjectOfficeColumns/ProjectOfficeColumns.jsx","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.jsx","components/ProjectOffice/ProjectCardAddButton/ProjectCardAddButton.jsx","components/ProjectOffice/ProjectOfficeItem.jsx","services/fetchColumn.js","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeader.jsx","components/Button/CustomButton.jsx","components/Modal/ModalColumn/ModalColumn.styled.jsx","components/Modal/ModalColumn/ModalColumn.jsx","components/ProjectOffice/AddColumnsButton/AddColumnsButton.jsx","components/ProjectOffice/ProjectOffice.jsx","components/ThemeSelect/ThemeSelect.styled.js","components/ThemeSelect/ThemeSelect.jsx","components/Header.jsx","utils.js/regex.js","components/EditProfile/util.js","components/EditProfile/index.jsx","components/Modal/ModalBodyWrapper/index.jsx","components/Modal/ModalHeader/index.jsx","components/Modal/index.jsx","components/NeedHelp/NeedHelp.jsx","components/SideBar.jsx","pages/HomePage.jsx"],"sourcesContent":["import { styled } from '@mui/system';\nimport { Typography, Button, Card, CardActions, Divider } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const Wrapper = styled('div')({\n    margin: '20px', \n    display: 'flex', \n    justifyContent: 'space-between'\n});\n\nexport const FilterWrapper = styled('div')({\n    marginRight: '10px', \n    display: 'flex', \n    flexDirection: 'row', \n    alignItems: 'center' \n});\n\nexport const ActionsButton = styled('div')({\n    background: 'beige', \n    width: \"334px\", \n    height: '56px', \n    borderRadius: '8px', \n    padding: '20px',\n    display: 'flex', \n    justifyContent: 'space-between', \n});\n\nexport const ActionsIconsButton = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-end', \n    alignItems: 'center', \n    gap: '8px'\n});\n\nexport const CardWrapper = styled('div')({\n    display: 'flex', \n    justifyContent: 'space-between', \n    flexWrap: 'wrap'\n});\n\nexport const CardFooterStyled = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-start', \n    paddingRight: '20px', \n    paddingLeft: '20px', \n    gap: '15px'\n});\n\nexport const CardIconsWrapper = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-end',\n    paddingRight: '20px', \n    gap: '8px'\n});\n\nexport const CardStyled = styled(Card)({\n    maxWidth: '334px', \n    minHeight: '154px', \n    borderRadius: '8px', \n    margin: '20px'\n});\n\nexport const CardTitle = styled(Typography)({\n    fontWeight: '600', \n    fontSize: '14px', \n    lineHeight: '21px'\n});\n\nexport const CardFooterTitle = styled(Typography)({\n    fontWeight: '400', \n    fontSize: '10px', \n    lineHeight: '12px', \n    color: '#16161680'\n});\n\nexport const CardText= styled(Typography)({\n    fontWeight: '400', \n    fontSize: '12px', \n    lineHeight: '16px' \n});\n\nexport const CardActionsStyled= styled(CardActions)({\n    paddingRight: '20px', \n    paddingLeft: '20px'\n});\n\nexport const DividerStyled= styled(Divider)({\n    background: '#1616160', \n    width: '300px', \n    height: '1px'\n});\n\nexport const StackWrapper = styled(Stack)({\n    width: '330px', \n    height: '56px', \n    background: '#F6F6F7', \n    borderRadius: '8px' \n});\n\nexport const CardButtonStyled = styled(Stack)({\n    width: '330px', \n    height: '56px', \n    background: '#BEDBB0', \n    borderRadius: '8px' \n});\n\nexport const ButtonStyled = styled(Button)({\n    paddingLeft: '80px', \n    color: '#161616', \n    fontSize: '14px', \n    textTransform: 'none'\n});\n\nexport const AddIconStyled = styled(AddIcon)({\n    background: '#161616', \n    width: '28px', \n    height: '28px', \n    color: '#ffff', \n    borderRadius: '8px' \n});\n\nexport const Title = styled(Typography)({\n    fontWeight: 500, \n    fontSize: '18px', \n    lineHeight: '27px', \n    marginBottom: '5px' \n});\n\nexport const Text = styled(Typography)({\n    fontWeight: 500, \n    fontSize: '14px', \n    lineHeight: '21px'\n});\n\n","import { ActionsIconsButton } from '../ProjectOfficeStyle';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\n\n\nconst ProjectOfficeColumns = () => {\n  return (\n    <>\n        <ActionsIconsButton>\n            <EditIcon fontSize='small'  /> \n            <DeleteOutlineIcon fontSize='small' />\n        </ActionsIconsButton>\n    </> \n  );\n};\n\nexport default ProjectOfficeColumns;\n\n","import { CardWrapper, CardStyled, CardTitle, CardText, CardActionsStyled, DividerStyled, CardFooterStyled, CardFooterTitle, CardIconsWrapper } from '../ProjectOfficeStyle';\nimport CardContent from '@mui/material/CardContent';\nimport { CardActionArea } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\n\nconst ProjectOfficeCardItem = () => {\n  return (\n    <>\n        <CardWrapper>\n            {Array.from(Array(9)).map((_, index) => (\n                <CardStyled key={index}>\n                    <CardActionArea>\n                        <CardContent>\n                            <CardTitle variant=\"h5\" component=\"div\">\n                                The Watch Spot Design\n                            </CardTitle>\n                            <CardText color=\"text.secondary\">\n                                Create a visually stunning and eye-catching watch dial design that embodies our brand's...\n                            </CardText>\n                        </CardContent>\n                    </CardActionArea>\n                    <CardActionsStyled>\n                        <DividerStyled />\n                    </CardActionsStyled>\n                    <CardFooterStyled>\n                        <CardFooterTitle>\n                            Priority\n                        </CardFooterTitle>\n                        <CardFooterTitle>\n                            Deadline\n                        </CardFooterTitle>\n                    </CardFooterStyled>\n                    <CardIconsWrapper>\n                        <NotificationsNoneIcon fontSize='small' />\n                        <ArrowCircleRightIcon fontSize='small' />\n                        <EditIcon fontSize='small' />\n                        <DeleteOutlineIcon fontSize='small' />\n                    </CardIconsWrapper>\n                </CardStyled>\n            ))}\n        </CardWrapper>\n    </> \n  );\n};\n\nexport default ProjectOfficeCardItem;\n\n","import { Wrapper, ButtonStyled, AddIconStyled, CardButtonStyled } from '../ProjectOfficeStyle';\n\nconst ProjectCardAddButton = () => {\n  return (\n    <>\n    <Wrapper>\n        {Array.from(Array(3)).map((_, index) => (\n            <CardButtonStyled direction=\"row\" spacing={2} key={index}>\n            <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another card\n            </ButtonStyled>\n            </CardButtonStyled>\n        ))}\n    </Wrapper>\n\n\n    </> \n  );\n};\n\nexport default ProjectCardAddButton;\n\n","import { Wrapper, ActionsButton } from './ProjectOfficeStyle';\nimport ProjectOfficeColumns from './ProjectOfficeColumns/ProjectOfficeColumns';\nimport ProjectOfficeCardItem from './ProjectOfficeCardItem/ProjectOfficeCardItem';\nimport ProjectCardAddButton from './ProjectCardAddButton/ProjectCardAddButton';\n\n\nconst ProjectOfficeItem = ({ column: { title } }) => {\n  return (\n    <>\n        <Wrapper>\n            <ActionsButton>\n                  { title }\n                <ProjectOfficeColumns />\n            </ActionsButton>\n            <ActionsButton>\n                In progress\n                <ProjectOfficeColumns />\n            </ActionsButton>\n            <ActionsButton>\n                Done\n                <ProjectOfficeColumns />\n            </ActionsButton>\n        </Wrapper>\n        <ProjectOfficeCardItem />\n        <ProjectCardAddButton />\n\n    </> \n  );\n};\n\nexport default ProjectOfficeItem;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://64975d0e83d4c69925a39dad.mockapi.io';\n\nexport const getColumns = async (id) => { \n    const resp = await axios.get('/columns' , {\n        params: {\n            owner: id\n        }});\n    console.log(resp)\n    const data = resp.data;\n    console.log(data)\n\n    return data;\n}","import FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport { FilterWrapper, Title, Wrapper, Text } from '../ProjectOfficeStyle';\n\n\nconst ProjectOfficeHeader = () => {\n  return (\n    <>\n        <Wrapper>\n            <Title>Project</Title>\n            <FilterWrapper>\n                <FilterAltIcon />\n                <Text>Filters</Text>\n            </FilterWrapper>\n        </Wrapper>\n    </> \n  );\n};\n\nexport default ProjectOfficeHeader;\n\n","import { Button } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\n\n\nexport const CustomButton = ({\n  children,\n  onClick,\n  styleOptions = {},\n    type = \"button\",\n  isWhiteBackground = false,\n}) => {\n    const iconStyle = {\n    width: 28,\n        height: 28,\n    size: 14,\n    backgroundColor: isWhiteBackground ? \"#FFFFFF\" : \"#121212\",\n    color: isWhiteBackground ? '#121212' : \"#FFFFFF\",\n    borderRadius: \"6px\",\n    };\n    \n  return (\n    <Button\n          startIcon={\n        <AddIcon\n          fontSize=\"small\"\n          sx={iconStyle}\n        />\n      }\n      variant=\"contained\"\n      onClick={onClick}\n      fullWidth\n      type={type}\n      sx={{\n          height: \"49px\",\n          maxWidth: \"352px\",\n          fontFamily: \"Poppins, sans-serif\",\n          fontWeight: \"500\",\n          fontSize: \"14px\",\n          lineHeight: \"1.5\",\n        letterSpacing: \"-0.02em\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: isWhiteBackground? \"#121212\" : \"#BEDBB0\",\n        borderRadius: \"8px\",\n        color: isWhiteBackground? \"#FFFFFF\" : \"#161616\",\n        textTransform: \"none\",\n        \"&:hover\": {\n          background: isWhiteBackground ? \"#121212\" : \"#BEDBB0\",\n        },\n        ...styleOptions,\n      }}\n    >\n      {children}\n    </Button>\n  );\n};\n","import { TextField, Dialog } from \"@mui/material\";\nimport { styled } from '@mui/system';\n\n\nexport const StyleInput = styled(TextField)({\n  backgroundColor: \"#1F1F1F\",\n  maxWidth: \"302px\",\n   marginBottom: '24px',\n\n        \"& label.Mui-focused\": {\n          color: \"#fff\",\n        },\n\n  \"& .MuiInputBase-input\": {\n          padding: \"14px 16px\",\n          color: \"#fff\",\n          fontFamily: \"Poppins, sans-serif\",\n        },\n        \"& .MuiFormLabel-root\": {\n          color: \"#fff\",\n          fontFamily: \"Poppins, sans-serif\",\n        },\n\n  \"& .MuiInputBase-root\": {\n          opacity: '0.4',\n    borderRadius: \"8px\",\n    '&:hover': {\n      opacity: '1.0',\n    },\n\n    '&:focus': {\n      opacity: '1.0',\n    }\n        },\n\n        \"& .MuiOutlinedInput-root\": {\n          \"& fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n          \"&:hover fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n          \"&.Mui-focused fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n        },\n\n});\n\nexport const CustomDialog = styled(Dialog)({\n  \n  '& .MuiPaper-root': {\n    backgroundColor: 'black',\n    maxWidth: '350px',\n    padding: '24px',\n  margin: '0px',\n  },\n\n  '& .MuiDialogContent-root': {\n    padding: '0px',\n  }\n});","import { DialogTitle, Box, DialogContent } from \"@mui/material\";\nimport { CustomButton } from \"../../Button/CustomButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CustomDialog, StyleInput } from \"./ModalColumn.styled\";\nimport { useState } from \"react\";\n\nexport const ModalColumn = ({ isOpen, onClose, type = \"create\", initialState = '', onRemove }) => {\n  const [columnName, setColumnName] = useState(initialState);\n\n  const reset = () => {\n    setColumnName('');\n  }\n\n  const handleClose = () => { \n    reset();\n    onClose();\n  }\n\n  const handleChange = ({ target }) => { \n    setColumnName(target.value);\n  }\n\n  return (\n    <CustomDialog\n      open={isOpen}\n      fullWidth={true}\n      onClose={handleClose}\n      position=\"relative\"\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        marginBottom=\"24px\"\n      >\n        <DialogTitle\n          sx={{\n            color: \"white\",\n            padding: \"0\",\n            fontFamily: \"Poppins, sans-serif\",\n            fontSize: \"18px\",\n            lineHeight: \"1.5\",\n          }}\n        >\n          {type === 'create' ? 'Add Column' : 'Edit Column'}\n        </DialogTitle>\n        <CloseIcon\n          onClick={handleClose}\n          sx={{\n            color: \"white\",\n            position: \"absolute\",\n            top: \"14px\",\n            right: \"14px\",\n            height: \"18px\",\n            width: \"18px\",\n            cursor: \"pointer\",\n          }}\n        />\n      </Box>\n      <DialogContent>\n        <StyleInput\n          autoFocus\n          id=\"title\"\n          placeholder=\"Title\"\n          name=\"title\"\n          type=\"text\"\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: false }}\n          value={columnName}\n          onChange={handleChange}\n        />\n        <CustomButton onClick={() => { onRemove(columnName);  handleClose()}}>\n                  Add\n        </CustomButton>\n      </DialogContent>\n    </CustomDialog>\n  );\n};","import { CustomButton } from 'components/Button/CustomButton';\nimport { useState } from 'react';\n\nimport { StackWrapper } from '../ProjectOfficeStyle';\n\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\n\nconst AddColumnButton = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const columns = [{columnName: 'one', id: 1}, {columnName: 'two', id: 2}];\n\n  const handleToggleModal = () => {\n      setIsOpen((prevstate) => !prevstate )\n  }\n\n  const handleCreateColumn = (columnName) => {\n    //   const newArr = [...columns, { id: 4, columnName: columnName }];\n      console.log(columns)\n  }\n\n  return (\n    <>\n      <StackWrapper direction=\"row\" spacing={2}>\n        <CustomButton isWhiteBackground={true} onClick={handleToggleModal}>\n          Add\n        </CustomButton>\n        <ModalColumn\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          onRemove={handleCreateColumn}\n        />\n        {/* <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another column\n            </ButtonStyled> */}\n      </StackWrapper>\n    </>\n  );\n};\n\nexport default AddColumnButton;\n","import { useState } from 'react';\n\nimport ProjectOfficeItem from './ProjectOfficeItem';\nimport { useEffect } from 'react';\nimport { getColumns } from 'services/fetchColumn';\nimport ProjectOfficeHeader from './ProjectOfficeHeader/ProjectOfficeHeader';\nimport AddColumnButton from './AddColumnsButton/AddColumnsButton';\n\nconst ProjectOffice = () => {\n  const [columns, setColumns] = useState([]);\n  const id = '9a5c9bf5-64d7-42dc-9279-d22fde663db5';\n\n  useEffect(() => {\n    const getBoardColumn = async () => {\n      try {\n        const boardColumns = await getColumns(id);\n        setColumns(boardColumns);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getBoardColumn();\n  }, [id]);\n\n  console.log(columns);\n\n  return (\n    <>\n      <ProjectOfficeHeader />\n      <AddColumnButton />\n      {columns.map(column => {\n        return <ProjectOfficeItem column={column} key={column.id} />;\n      })}\n      {/* <ProjectOfficeItem column={columns} /> */}\n    </>\n  );\n};\n\nexport default ProjectOffice;\n","import styled from 'styled-components';\n\nexport const ThemeSelectTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* background-color: red; */\n\n  width: 68px;\n  height: 21px;\n\n  color: var(--themeTitleTextColor);\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n`;\n\nexport const ThemeSelectWrapper = styled.ul`\nposition: absolute;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100px;\n  height: 107px;\n  box-sizing: border-box;\n  padding: 18px 44px 18px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--greenGreenBlueColor);\n  background-color: var(--themeListBgColor);\n  box-shadow: var(--boxShadow);\n`;\n\nexport const ThemeSelects = styled.li`\n  font-size: 14px;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n  color: var(\n    --${props => (props.theme === props.children.toLowerCase() ? 'greenGreenBlueColor' : 'popupTextColor')}\n  );\n\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const ThemeSelectIcon = styled.svg`\n  /* margin-left: 4px; */\n  width: 16px;\n  height: 16px;\n  stroke: var(--themeTitleTextColor);\n  fill: none;\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setTheme } from '../../redux/theme/themeSlice';\nimport sprite from '../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\n// console.log(\"sprite: \", Sprite);\n\nimport {\n  ThemeSelectWrapper,\n  ThemeSelects,\n  ThemeSelectIcon,\n  ThemeSelectTitle,\n} from './ThemeSelect.styled';\n\nconst ThemeSelect = () => {\n  const dispatch = useDispatch();\n  const [isListOpen, setIsListOpen] = useState(false);\n\n\n  const currentTheme = useSelector(state => state.theme.themeColor);\n  console.log('currentTheme: ', currentTheme);\n\n    const [selectedTheme, setSelectedTheme] = useState(currentTheme);\n\n  useEffect(() => {\n    // console.log(\"useEffect\", selectedTheme);\n    document.body.setAttribute('data-theme', selectedTheme);\n  }, [selectedTheme]);\n\n  const handleThemeToggle = theme => {\n    dispatch(setTheme(theme));\n    setSelectedTheme(theme);\n    setIsListOpen(false);\n  };\n\n  return (\n    <>\n      <ThemeSelectTitle onClick={() => setIsListOpen(!isListOpen)}>\n        Theme\n        <ThemeSelectIcon aria-label=\"theme-select icon\">\n          <use href={sprite + '#icon-arrow-down'}></use>\n        </ThemeSelectIcon>\n      </ThemeSelectTitle>\n      {isListOpen && (\n        <ThemeSelectWrapper>\n          <ThemeSelects\n            theme={selectedTheme}\n            onClick={() => handleThemeToggle('light')}\n          >\n            Light\n          </ThemeSelects>\n          <ThemeSelects\n            theme={selectedTheme}\n            onClick={() => handleThemeToggle('dark')}\n          >\n            Dark\n          </ThemeSelects>\n          <ThemeSelects\n            theme={selectedTheme}\n            onClick={() => handleThemeToggle('violet')}\n          >\n            Violet\n          </ThemeSelects>\n        </ThemeSelectWrapper>\n      )}\n    </>\n  );\n};\n\nexport default ThemeSelect;\n","import ThemeSelect from './ThemeSelect/ThemeSelect';\n\nexport const Header = () => {\n  return (\n    <div>\n      Header\n      <ThemeSelect />\n    </div>\n  );\n};\n","export const regExpEmail = /^(?=.{1,64}@)[A-Za-z0-9_+-]+(\\.[A-Za-z0-9_+-]+)*@[^-.][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$/;","export const ERegisterFieldName = 'ERegisterFieldName';\nexport const ERegisterFieldEmail = 'ERegisterFieldEmail';\nexport const ERegisterFieldPassword = 'ERegisterFieldPassword';\n\nexport const getDefaultValuesForm = (name, email, password) => {\n  return {\n    [ERegisterFieldName]: name ?? '',\n    [ERegisterFieldEmail]: email ?? '',\n    [ERegisterFieldPassword]: password ?? '',\n  }\n};\n\nconst checkedField = [ERegisterFieldName, ERegisterFieldEmail, ERegisterFieldPassword];\nexport const isAllRequiredFieldsDirty = (dirtyFields) => {\n  return checkedField.every((el) => !!dirtyFields?.[el]);\n};\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { regExpEmail } from '../../utils.js/regex';\nimport {\n  ERegisterFieldEmail,\n  ERegisterFieldName,\n  ERegisterFieldPassword,\n  getDefaultValuesForm,\n  isAllRequiredFieldsDirty,\n} from './util';\nimport './style.css';\n// import { useEffect } from \"react\";\n\nexport const EditProfile = ({ toggle, open, HeaderRender }) => {\n  const [isShowPassword, setIsShowPassword] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, dirtyFields },\n  } = useForm({\n    shouldUnregister: true,\n    mode: 'onChange',\n    defaultValues: getDefaultValuesForm(),\n  });\n\n  const isFetching = false;\n  const isDisabledSubmitBtn =\n    !isAllRequiredFieldsDirty(dirtyFields) ||\n    !!Object.keys(errors).length ||\n    isFetching;\n\n  const togglePass = () => {\n    setIsShowPassword(prev => !prev);\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return (\n    <div className=\"edit-profile-wrapper\">\n      {HeaderRender('Edit profile')}\n      {/* <img></img> */}\n\n      <div className=\"wrapper-input\">\n        <input\n          autoComplete=\"off\"\n          disabled={isFetching}\n          className={errors?.ERegisterFieldName && 'error'}\n          type=\"text\"\n          {...register(ERegisterFieldName, {\n            required: 'This input is required.',\n            maxLength: {\n              value: 255,\n              message: 'This input must not exceed 255 characters',\n            },\n          })}\n        />\n        {errors?.ERegisterFieldName && (\n          <span className=\"error\">{errors.ERegisterFieldName.message}</span>\n        )}\n      </div>\n\n      <div className=\"wrapper-input\">\n        <input\n          autoComplete=\"off\"\n          disabled={isFetching}\n          className={errors?.ERegisterFieldEmail && 'error'}\n          type=\"text\"\n          {...register(ERegisterFieldEmail, {\n            required: 'This input is required.',\n            pattern: {\n              value: regExpEmail,\n              message: 'Invalid email address',\n            },\n            maxLength: {\n              value: 255,\n              message: 'This input must not exceed 255 characters',\n            },\n          })}\n        />\n        {errors?.ERegisterFieldEmail && (\n          <span className=\"error\">{errors.ERegisterFieldEmail.message}</span>\n        )}\n      </div>\n\n      <div className=\"wrapper-input\">\n        <div className=\"toggle_pass\">\n          <input\n            autoComplete=\"off\"\n            disabled={isFetching}\n            className={errors?.ERegisterFieldPassword && 'error'}\n            type={isShowPassword ? 'text' : 'password'}\n            {...register(ERegisterFieldPassword, {\n              required: 'This input is required.',\n              maxLength: {\n                value: 255,\n                message: 'This input must not exceed 255 characters',\n              },\n            })}\n          />\n          <span className=\"eye\" onClick={togglePass}></span>\n        </div>\n        {errors?.ERegisterFieldPassword && (\n          <span className=\"error\">{errors.ERegisterFieldPassword.message}</span>\n        )}\n      </div>\n\n      <button disabled={isDisabledSubmitBtn} onClick={handleSubmit(onSubmit)}>\n        Save\n      </button>\n    </div>\n  );\n};\n","export const ModalBodyWrapper = ({ children, manualControlBody }) => {\n  return (\n    <div className={!manualControlBody ? 'modal-body-wrapper' : ''}>\n      {children}\n    </div>\n  );\n};","import spriteIcon from '../../../images/sprite.svg'\nimport './style.css';\n\nexport const ModalHeader = ({ headerTitle, toggle }) => {\n  return (\n    <div className='modal-header'>\n      <div className='modal-header__title-wrapper'>\n        <span className='modal-header__title'>{headerTitle}</span>\n        <button className='modal-header__close' onClick={toggle}>\n          <svg className='modal-header__icon-close' aria-label=\"icon close\" width=\"18\" height=\"18\">\n          <use href={spriteIcon + '#icon-x-close'}></use>\n        </svg></button>\n      </div>\n    </div>\n  );\n};","import React, { Children } from 'react';\nimport { ModalBodyWrapper } from './ModalBodyWrapper';\nimport { ModalHeader } from './ModalHeader';\nimport './style.css';\n\nexport const Modal = ({\n  children,\n  open,\n  toggle,\n  manualControlBody = false,\n  ...props }) => {\n\n  const childrenWithProps = Children.map(children, (child) => {\n    return React.cloneElement(child, { toggle, open, HeaderRender: (headerTitle) => <ModalHeader {...{ headerTitle, toggle }} /> });\n  });\n\n  const activeClass = open ? 'active' : '';\n  return (\n    <>\n      {\n        (<div className={`modal ${activeClass}`} onClick={toggle} {...props} >\n          <div className={`modal__content ${activeClass}`} onClick={(e) => e.stopPropagation()}>\n            <ModalBodyWrapper {...{ manualControlBody }}>\n              {childrenWithProps}\n            </ModalBodyWrapper>\n          </div>\n        </div>)\n      }\n    </>\n  );\n};\n\n","import spriteIcon from '../../images/sprite.svg';\nimport './style.css';\nimport { Modal } from '../Modal';\nimport { EditProfile } from '../EditProfile';\nimport { useState } from 'react';\n\nexport const NeedHelp = () => {\n  const [open, setIsOpen] = useState(false);\n  const toggle = () => {\n    setIsOpen(prev => !prev);\n  };\n  return (\n    <div className=\"need-help__wrapper\">\n      <img\n        className=\"need-help__img\"\n        src=\"https://res.cloudinary.com/dxhypjavs/image/upload/v1687412198/command_project_task_pro_images/additionally/flowerpot.png\"\n        alt=\"\"\n      />\n      <p className=\"need-help__text\">\n        If you need help with <a href=\"*\">TaskPro</a>, check out our support\n        resources or reach out to our customer support team.\n      </p>\n      <button className=\"need-help__btn\" onClick={toggle}>\n        <svg\n          className=\"modal-header__icon-help-circle\"\n          aria-label=\"icon close\"\n          width=\"18\"\n          height=\"18\"\n        >\n          <use href={spriteIcon + '#icon-help-circle'}></use>\n        </svg>\n        <span className=\"need-help__btn-title\">Need help?</span>\n      </button>\n\n      {open && (\n        <Modal {...{ open, toggle }}>\n          <EditProfile />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { EditProfile } from \"./EditProfile\";\nimport { Modal } from \"./Modal\";\nimport { NeedHelp } from \"./NeedHelp/NeedHelp\";\nimport \"../assets/index.css\";\n\nexport const SideBar = () => {\n  const [open, setIsOpen] = useState(false);\n  const toggle = () => {\n    setIsOpen((prev) => !prev);\n  };\n\n  return (\n    <>\n      <button onClick={toggle}>open modal</button>\n      <h1>TaskPro</h1>\n      <NeedHelp></NeedHelp>\n\n      {open && (\n        <Modal {...{ open, toggle }}>\n          <EditProfile />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import ProjectOffice from \"components/ProjectOffice/ProjectOffice\";\n\nimport { Header } from \"../components/Header\";\nimport { SideBar } from \"../components/SideBar\";\n\n\nconst HomePage = () => {\n  \n \n  return (\n    <>\n      <Header />\n      <SideBar />\n      <ProjectOffice />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["Wrapper","styled","margin","display","justifyContent","FilterWrapper","marginRight","flexDirection","alignItems","ActionsButton","background","width","height","borderRadius","padding","ActionsIconsButton","gap","CardWrapper","flexWrap","CardFooterStyled","paddingRight","paddingLeft","CardIconsWrapper","CardStyled","Card","maxWidth","minHeight","CardTitle","Typography","fontWeight","fontSize","lineHeight","CardFooterTitle","color","CardText","CardActionsStyled","CardActions","DividerStyled","Divider","StackWrapper","Stack","CardButtonStyled","ButtonStyled","Button","textTransform","AddIconStyled","AddIcon","Title","marginBottom","Text","_jsx","_Fragment","children","_jsxs","EditIcon","DeleteOutlineIcon","Array","from","map","_","index","CardActionArea","CardContent","variant","component","NotificationsNoneIcon","ArrowCircleRightIcon","direction","spacing","startIcon","_ref","title","column","ProjectOfficeColumns","ProjectOfficeCardItem","ProjectCardAddButton","axios","getColumns","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","resp","data","wrap","_context","prev","next","params","owner","sent","console","log","abrupt","stop","_x","apply","arguments","FilterAltIcon","CustomButton","onClick","_ref$styleOptions","styleOptions","_ref$type","type","_ref$isWhiteBackgroun","isWhiteBackground","iconStyle","size","backgroundColor","sx","fullWidth","_objectSpread","fontFamily","letterSpacing","StyleInput","TextField","opacity","borderColor","CustomDialog","Dialog","ModalColumn","isOpen","onClose","_ref$initialState","initialState","onRemove","_useState","useState","_useState2","_slicedToArray","columnName","setColumnName","handleClose","open","position","Box","DialogTitle","CloseIcon","top","right","cursor","DialogContent","autoFocus","placeholder","name","InputLabelProps","shrink","value","onChange","_ref2","target","setIsOpen","columns","handleToggleModal","prevstate","setColumns","useEffect","getBoardColumn","boardColumns","t0","message","ProjectOfficeHeader","AddColumnButton","ProjectOfficeItem","ThemeSelectTitle","_templateObject","_taggedTemplateLiteral","ThemeSelectWrapper","_templateObject2","ThemeSelects","_templateObject3","props","theme","toLowerCase","ThemeSelectIcon","_templateObject4","dispatch","useDispatch","isListOpen","setIsListOpen","currentTheme","useSelector","state","themeColor","_useState3","_useState4","selectedTheme","setSelectedTheme","document","body","setAttribute","handleThemeToggle","setTheme","href","sprite","Header","ThemeSelect","regExpEmail","ERegisterFieldName","ERegisterFieldEmail","ERegisterFieldPassword","getDefaultValuesForm","email","password","_defineProperty","checkedField","EditProfile","toggle","HeaderRender","isShowPassword","setIsShowPassword","_useForm","useForm","shouldUnregister","mode","defaultValues","register","handleSubmit","_useForm$formState","formState","errors","isFetching","isDisabledSubmitBtn","dirtyFields","every","el","isAllRequiredFieldsDirty","Object","keys","length","className","autoComplete","disabled","required","maxLength","pattern","ModalBodyWrapper","manualControlBody","ModalHeader","headerTitle","spriteIcon","Modal","_ref$manualControlBod","_objectWithoutProperties","_excluded","childrenWithProps","Children","child","React","activeClass","concat","e","stopPropagation","NeedHelp","src","alt","SideBar","ProjectOffice"],"sourceRoot":""}