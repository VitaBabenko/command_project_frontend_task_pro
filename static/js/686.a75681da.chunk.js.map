{"version":3,"file":"static/js/686.a75681da.chunk.js","mappings":"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","sources":["components/DefaultScreen/DefaultScreen.styled.js","components/DefaultScreen/DefaultScreen.jsx","components/ProjectOffice/ProjectOfficeStyle.jsx","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.styled.jsx","utils.js/formatDate.js","components/CardPopUp/CardPopUp.styled.jsx","components/CardPopUp/CardPopUp.jsx","utils/dateFormatDedline.js","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.jsx","components/ProjectOffice/ProjectOfficeItem/OfficeItemStyle.styled.jsx","components/ProjectOffice/ProjectCardAddButton/ProjectCardAddButton.jsx","components/Modal/ModalColumn/ModalColumn.styled.jsx","components/Modal/ModalColumn/ModalColumn.jsx","components/ProjectOffice/ProjectOfficeItem/ProjectOfficeItem.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeaderStyle.jsx","components/PopUpFilter/BgChange/BgChange.styled.jsx","components/PopUpFilter/BgChange/BgChange.jsx","components/PopUpFilter/Filter/Filter.styled.jsx","components/PopUpFilter/Filter/Filter.jsx","components/PopUpFilter/PopUpFilter.styled.jsx","components/PopUpFilter/PopUpFilter.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeader.jsx","components/ProjectOffice/AddColumnsButton/AddColumnsButton.jsx","components/ProjectOffice/ProjectOfficeBgContainer.js","components/ProjectOffice/ProjectOffice.jsx","pages/ScreensPage.jsx","redux/dashboards/selectors.js","utils/bgImgPreview.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DefaultWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 200px;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  @media (min-width: 375px) {\n    min-width: 335px;\n    max-width: 486px;\n  }\n`;\n\nexport const DefaultText = styled.p`\n  font-size: 14px;\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n  text-align: center;\n  color: var(--popupTextColor);\n`;\n\nexport const AccentText = styled.span`\n  color: var(--greenGreenBlueColor);\n`;\n","import { AccentText, DefaultText, DefaultWrapper } from \"./DefaultScreen.styled\"\n\nexport const DefaultScreen = () => {\n\n    return (\n        \n        <DefaultWrapper>\n            <DefaultText>Before starting your project, it is essential <AccentText>to create a board</AccentText> to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.</DefaultText>\n        </DefaultWrapper>\n    )\n}","import { styled } from '@mui/system';\nimport { Button, CardActions } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const Wrapper = styled('div')({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  marginTop: '5px',\n  marginRight: '10px',\n  gap: '5px',\n});\n\nexport const FilterWrapper = styled('div')({\n  marginRight: '10px',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n});\n\nexport const ActionsIconsButton = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n  gap: '8px',\n});\n\nexport const CardWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  flexWrap: 'wrap',\n  height: '600px',\n  overflow: 'scroll',\n});\n\nexport const CardFooterStyled = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  paddingRight: '20px',\n  paddingLeft: '20px',\n  gap: '15px',\n});\n\nexport const CardIconsWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  paddingRight: '20px',\n  gap: '8px',\n  marginTop: '-5px',\n});\n\nexport const CardActionsStyled = styled(CardActions)({\n  paddingRight: '20px',\n  paddingLeft: '20px',\n});\n\nexport const StackWrapper = styled(Stack)({\n  width: '330px',\n  height: '56px',\n  background: '#F6F6F7',\n  borderRadius: '8px',\n});\n\nexport const CardButtonStyled = styled(Stack)({\n  width: '330px',\n  height: '56px',\n  background: '#BEDBB0',\n  borderRadius: '8px',\n  marginBottom: '20px',\n});\n\nexport const ButtonStyled = styled(Button)({\n  paddingLeft: '80px',\n  color: '#161616',\n  fontSize: '14px',\n  textTransform: 'none',\n});\n\nexport const AddIconStyled = styled(AddIcon)({\n  width: '28px',\n  height: '28px',\n  borderRadius: '8px',\n});\n","import styled from 'styled-components';\n\nexport const CardStyled = styled.p`\n  background: var(--cardItem);\n  max-width: 334px;\n  height: 154px;\n  border-radius: 8px;\n  margin-top: 25px;\n  margin-right: 10px;\n  margin-bottom: 15px;\n  border-left: 4px solid #8fa1d0;\n  border-left: 4px solid\n    ${props => {\n      switch (props.priority) {\n        case 'low':\n          return '#8FA1D0';\n        case 'medium':\n          return '#E09CB5';\n        case 'high':\n          return '#BEDBB0';\n        case 'without':\n          return ' var(--calendarWithoutColor)';\n        default:\n          return '#000000';\n      }\n    }};\n  padding-bottom: 15px;\n`;\n\nexport const CardTitle = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n  margin-bottom: 7px;\n`;\n\nexport const CardText = styled.p`\n  color: var(--cardItemText);\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 300px;\n`;\n\nexport const CardFooterTitle = styled.p`\n  color: var(--cardItemText);\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 12px;\n  padding-top: 5px;\n`;\n\nexport const DividerStyled = styled.div`\n  background: var(--cardItemText);\n  width: 300px;\n  height: 1px;\n`;\n\nexport const WrapperFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const WrapperText = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 15px;\n  padding-top: 8px;\n`;\n\nexport const StatusWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const StatusStyled = styled.div`\n  width: 12px;\n  height: 12px;\n  background: ${props => {\n    switch (props.priority) {\n      case 'low':\n        return '#8FA1D0';\n      case 'medium':\n        return '#E09CB5';\n      case 'high':\n        return '#BEDBB0';\n      case 'without':\n        return ' var(--calendarWithoutColor)';\n      default:\n        return '#000000';\n    }\n  }};\n  border-radius: 50%;\n`;\n\n// import styled from 'styled-components';\n\n// export const CardStyled = styled.div`\n//   background: var(--cardItem);\n//   max-width: 334px;\n//   height: 154px;\n//   border-radius: 8px;\n//   margin-top: 25px;\n//   margin-right: 10px;\n//   margin-bottom: 15px;\n//   border-left: 4px solid #8fa1d0;\n//   padding-bottom: 15px;\n// `;\n\n// export const CardTitle = styled.p`\n//   color: var(--cardHeaderText);\n//   font-weight: 600;\n//   font-size: 14px;\n//   line-height: 21px;\n//   margin-bottom: 7px;\n// `;\n\n// export const CardText = styled.p`\n//   color: var(--cardItemText);\n//   font-weight: 400;\n//   font-size: 12px;\n//   line-height: 16px;\n//   white-space: nowrap;\n//   overflow: hidden;\n//   text-overflow: ellipsis;\n//   width: 300px;\n// `;\n\n// export const CardFooterTitle = styled.p`\n//   color: var(--cardItemText);\n//   font-weight: 400;\n//   font-size: 10px;\n//   line-height: 12px;\n//   padding-top: 5px;\n// `;\n\n// export const DividerStyled = styled.div`\n//   background: var(--cardItemText);\n//   width: 300px;\n//   height: 1px;\n// `;\n\n// export const WrapperFooter = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n// `;\n\n// export const WrapperText = styled.p`\n//   color: var(--cardHeaderText);\n//   font-weight: 400;\n//   font-size: 10px;\n//   line-height: 15px;\n//   padding-top: 8px;\n// `;\n\n// export const StatusWrapper = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   gap: 4px;\n// `;\n\n// export const StatusStyled = styled.div`\n//   width: 12px;\n//   height: 12px;\n//   background: #8fa1d0;\n//   border-radius: 50%;\n// `;\n","function isSameDay(date1, date2) {\n  return (\n    date1.getDate() === date2.getDate() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getFullYear() === date2.getFullYear()\n  );\n}\n\nexport const formatDate = date => {\n  const today = new Date();\n  const tomorrow = new Date(today);\n  const optionsAllDays = date.toLocaleDateString('en-US', {\n    weekday: 'long',\n  });\n  const optionsNearestDays = date.toLocaleDateString('en-US', {\n    month: 'long',\n  });\n\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  if (isSameDay(date, today)) {\n    return `Today, ${optionsNearestDays} ${date.getDate()}`;\n  } else if (isSameDay(date, tomorrow)) {\n    return `Tomorrow, ${optionsNearestDays} ${date.getDate()}`;\n  } else {\n    const formattedDate = `${optionsAllDays} ${date.getDate()}`;\n    return formattedDate;\n  }\n};\n","import styled, { css } from 'styled-components';\nimport { Dialog } from '@mui/material';\n\nexport const CustomDialog = styled(Dialog)({\n  '& .MuiPaper-root': {\n    backgroundColor: 'var(--themeListBgColor)',\n    maxWidth: '350px',\n    padding: '24px',\n    margin: '0px',\n    border: '1px solid var(--modalBorderColor)',\n    borderRadius: '8px',\n    overflow: 'hidden',\n  },\n\n  '& .MuiDialogContent-root': {\n    padding: '0px',\n  },\n});\n\nexport const WrapperPopUp = styled.div`\n  width: 100%;\n  min-height: 355px;\n  padding: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--modalBorderColor);\n  background: var(--themeListBgColor);\n  box-shadow: 0px 4px 16px 0px var(--boxShadowColor);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 340px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 400px;\n  }\n`;\n\nconst hoverFocusStyles = css`\n  border: 1px solid var(--greenGreenBlueColor);\n  opacity: 0.7;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 7px;\n  margin-right: 14px;\n  /* font-size: 10px; */\n  line-height: 0;\n  color: var(--primaryTextColor);\n  /* color: red; */\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  min-width: 302px;\n`;\nexport const FormText = styled.label`\n  color: var(--primaryTextColor);\n  text-align: start;\n  margin-bottom: 24px;\n  font-size: 18px;\n  font-weight: 500;\n`;\nexport const FromInput = styled.input`\n  background-color: var(--themeListBgColor);\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--passiveBorderColor);\n  outline: none;\n  transition: opacity var(--transition_data);\n  color: var(--primaryTextColor);\n  &:hover {\n    ${hoverFocusStyles};\n  }\n  &:focus {\n    ${hoverFocusStyles};\n  }\n  &:placeholder {\n    color: var(--calendarSecondTextColor);\n  }\n`;\n\nexport const FormTextarea = styled.textarea`\n  background-color: var(--themeListBgColor);\n  vertical-align: text-top;\n  resize: none;\n  min-height: 154px;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--passiveBorderColor);\n  outline: none;\n  transition: opacity var(--transition_data);\n  color: var(--primaryTextColor);\n  &::placeholder {\n  }\n  &:hover {\n    ${hoverFocusStyles};\n  }\n  &:focus {\n    ${hoverFocusStyles};\n  }\n  &:placeholder {\n    color: var(--calendarSecondTextColor);\n  }\n`;\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 14px;\n`;\n\nexport const RadioLabel = styled.label`\n  --radio-background-color: ${props => {\n    switch (props.value) {\n      case 'low':\n        return '#8FA1D0';\n      case 'medium':\n        return '#E09CB5';\n      case 'high':\n        return '#BEDBB0';\n      case 'without':\n        return ' var(--calendarWithoutColor)';\n      default:\n        return '#000000';\n    }\n  }};\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  cursor: pointer;\n  background-color: var(--radio-background-color);\n`;\n\nexport const RadioButton = styled.input`\n  display: none;\n  &:checked + ${RadioLabel} {\n    width: 8px;\n    height: 8px;\n    position: relative;\n    &:before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      width: 14px;\n      height: 14px;\n      background-color: transparent;\n      border: 1px solid var(--radio-background-color);\n      border-radius: 50%;\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 14px;\n  &:not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const Text = styled.span`\n  color: var(--calendarSecondTextColor);\n  font-size: 12px;\n  margin-bottom: 6px;\n`;\n\nexport const CalendarWrapp = styled.div`\n  display: flex;\n\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 40px;\n  transition: opacity var(--transition_data);\n  &:hover {\n    opacity: 0.7;\n  }\n  &:focus {\n    opacity: 0.7;\n  }\n`;\nexport const CalendarText = styled.span`\n  color: var(--greenGreenBlueColor);\n  margin-right: 4px;\n`;\n\nexport const CalendarArrow = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: var(--greenGreenBlueColor);\n`;\n\n// import styled, { css } from 'styled-components';\n// import { Dialog } from '@mui/material';\n\n// export const CustomDialog = styled(Dialog)({\n//   '& .MuiPaper-root': {\n//     backgroundColor: 'var(--themeListBgColor)',\n//     maxWidth: '350px',\n//     padding: '24px',\n//     margin: '0px',\n//     border: '1px solid var(--modalBorderColor)',\n//     borderRadius: '8px',\n//     overflow: 'hidden',\n//   },\n\n//   '& .MuiDialogContent-root': {\n//     padding: '0px',\n//   },\n// });\n\n// export const WrapperPopUp = styled.div`\n//   width: 100%;\n//   min-height: 355px;\n//   padding: 24px;\n//   border-radius: 8px;\n//   border: 1px solid var(--modalBorderColor);\n//   background: var(--themeListBgColor);\n//   box-shadow: 0px 4px 16px 0px var(--boxShadowColor);\n\n//   @media screen and (min-width: 375px) {\n//     width: 335px;\n//   }\n//   @media screen and (min-width: 768px) {\n//     width: 340px;\n//   }\n//   @media screen and (min-width: 1440px) {\n//     width: 400px;\n//   }\n// `;\n\n// const hoverFocusStyles = css`\n//   border: 1px solid var(--greenGreenBlueColor);\n//   opacity: 0.7;\n// `;\n\n// export const CloseButton = styled.button`\n//   position: absolute;\n//   top: 0;\n//   right: 0;\n//   padding: 7px;\n//   margin-right: 14px;\n//   /* font-size: 10px; */\n//   line-height: 0;\n//   color: var(--primaryTextColor);\n//   /* color: red; */\n//   border: none;\n//   background-color: transparent;\n//   cursor: pointer;\n// `;\n\n// export const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   min-width: 302px;\n// `;\n// export const FormText = styled.label`\n//   color: var(--primaryTextColor);\n//   text-align: start;\n//   margin-bottom: 24px;\n//   font-size: 18px;\n//   font-weight: 500;\n// `;\n// export const FromInput = styled.input`\n//   background-color: var(--themeListBgColor);\n//   padding: 14px 18px;\n//   margin-bottom: 24px;\n//   border-radius: 8px;\n//   border: 1px solid var(--passiveBorderColor);\n//   outline: none;\n//   transition: opacity var(--transition_data);\n//   &:hover {\n//     ${hoverFocusStyles};\n//   }\n//   &:focus {\n//     ${hoverFocusStyles};\n//   }\n//   &:placeholder {\n//     color: var(--calendarSecondTextColor);\n//   }\n// `;\n\n// export const FormTextarea = styled.textarea`\n//   background-color: var(--themeListBgColor);\n//   vertical-align: text-top;\n//   resize: none;\n//   min-height: 154px;\n//   padding: 14px 18px;\n//   margin-bottom: 24px;\n//   border-radius: 8px;\n//   border: 1px solid var(--passiveBorderColor);\n//   outline: none;\n//   transition: opacity var(--transition_data);\n//   &::placeholder {\n//   }\n//   &:hover {\n//     ${hoverFocusStyles};\n//   }\n//   &:focus {\n//     ${hoverFocusStyles};\n//   }\n//   &:placeholder {\n//     color: var(--calendarSecondTextColor);\n//   }\n// `;\n\n// export const RadioGroup = styled.div`\n//   display: flex;\n//   align-items: center;\n//   margin-bottom: 14px;\n// `;\n\n// export const RadioLabel = styled.label`\n//   --radio-background-color: ${props => {\n//     switch (props.value) {\n//       case 'low':\n//         return '#8FA1D0';\n//       case 'medium':\n//         return '#E09CB5';\n//       case 'high':\n//         return '#BEDBB0';\n//       case 'without':\n//         return ' var(--calendarWithoutColor)';\n//       default:\n//         return '#000000';\n//     }\n//   }};\n//   display: inline-block;\n//   width: 14px;\n//   height: 14px;\n//   border-radius: 50%;\n\n//   cursor: pointer;\n//   background-color: var(--radio-background-color);\n// `;\n\n// export const RadioButton = styled.input`\n//   display: none;\n//   &:checked + ${RadioLabel} {\n//     width: 8px;\n//     height: 8px;\n//     position: relative;\n//     &:before {\n//       content: '';\n//       position: absolute;\n//       top: 50%;\n//       left: 50%;\n//       transform: translate(-50%, -50%);\n//       width: 14px;\n//       height: 14px;\n//       background-color: transparent;\n//       border: 1px solid var(--radio-background-color);\n//       border-radius: 50%;\n//     }\n//   }\n// `;\n\n// export const Wrap = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 14px;\n//   &:not(:last-child) {\n//     margin-right: 8px;\n//   }\n// `;\n\n// export const Text = styled.span`\n//   color: var(--calendarSecondTextColor);\n//   font-size: 12px;\n//   margin-bottom: 6px;\n// `;\n\n// export const CalendarWrapp = styled.div`\n//   display: flex;\n\n//   cursor: pointer;\n//   font-size: 14px;\n//   font-weight: 500;\n//   margin-bottom: 40px;\n//   transition: opacity var(--transition_data);\n//   &:hover {\n//     opacity: 0.7;\n//   }\n//   &:focus {\n//     opacity: 0.7;\n//   }\n// `;\n// export const CalendarText = styled.span`\n//   color: var(--greenGreenBlueColor);\n//   margin-right: 4px;\n// `;\n\n// export const CalendarArrow = styled.svg`\n//   width: 18px;\n//   height: 18px;\n//   stroke: var(--greenGreenBlueColor);\n// `;\n","import { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport sprite from '../../images/sprite.svg';\nimport { formatDate } from 'utils.js/formatDate';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './calendar.css';\nimport {\n  Form,\n  FormText,\n  FromInput,\n  FormTextarea,\n  RadioGroup,\n  RadioButton,\n  RadioLabel,\n  Wrap,\n  Text,\n  CalendarWrapp,\n  CalendarText,\n  CalendarArrow,\n  CustomDialog,\n  CloseButton,\n} from './CardPopUp.styled';\n\nimport { CustomButton } from 'components/Button/CustomButton';\nimport { pureFinalPropsSelectorFactory } from 'react-redux/es/connect/selectorFactory';\n\nimport CloseIcon from '@mui/icons-material/Close';\nimport axios from 'axios';\n\nexport const CardPopUp = ({\n  isOpen,\n  onClose,\n  boardId,\n  columnId,\n  setTasks,\n  task: {\n    _id: taskId,\n    title = '',\n    description = '',\n    priority = 'without',\n    deadline = new Date(),\n  },\n}) => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    reset,\n    formState: { errors },\n  } = useForm({ defaultValues: { title, description, priority, deadline } });\n\n  const onSubmit = async data => {\n    const res = await axios.put(\n      `/boards/${boardId}/columns/${columnId}/tasks/${taskId} `,\n      data\n    );\n\n    setTasks(p => {\n      return p.map(task => {\n        if (task._id === res.data.task._id) {\n          return res.data.task;\n        }\n        return task;\n      });\n    });\n    reset();\n    onClose();\n  };\n  const [unixFromat, setUnixFormat] = useState(\n    // new Date(new Date().toUTCString()).getTime() / 1000\n    new Date(new Date().toUTCString()).getTime()\n  );\n  // const [dateBtn, setDateBtn] = useState(new Date());\n  const [dateBtn, setDateBtn] = useState(new Date(deadline));\n  const [showDatePicker, setShowDatePicker] = useState(false);\n\n  const handleDateInputChange = date => {\n    const UTC = date.toUTCString();\n    const UNIX = new Date(UTC).getTime();\n    setDateBtn(date);\n    setUnixFormat(UNIX);\n    setValue('deadline', UNIX.toString());\n    setShowDatePicker(false);\n  };\n  const toggleDatePicker = () => {\n    setShowDatePicker(prevState => !prevState);\n  };\n  return (\n    <CustomDialog open={isOpen} onClose={onClose}>\n      <CloseButton type=\"button\" onClick={onClose}>\n        <CloseIcon sx={{ fontSize: 'medium' }} style={{ marginTop: '14px' }} />\n      </CloseButton>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <FormText>{'Add card'}</FormText>\n        <FromInput\n          {...register('title', {\n            minLength: 3,\n            required: pureFinalPropsSelectorFactory,\n          })}\n          placeholder=\"Title\"\n        />\n        <FormTextarea\n          placeholder=\"Description\"\n          {...register('description', { minLength: 3, required: false })}\n        ></FormTextarea>\n        <Text>Label color</Text>\n        <RadioGroup>\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"low\"\n              {...register('priority')}\n              value=\"low\"\n            />\n            <RadioLabel\n              htmlFor=\"low\"\n              value=\"low\"\n              checked={register('priority').value === 'low'}\n            />\n          </Wrap>\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"medium\"\n              {...register('priority')}\n              value=\"medium\"\n            />\n            <RadioLabel\n              htmlFor=\"medium\"\n              value=\"medium\"\n              checked={register('priority').value === 'medium'}\n            />\n          </Wrap>\n\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"high\"\n              {...register('priority')}\n              value=\"high\"\n            />\n            <RadioLabel\n              htmlFor=\"high\"\n              value=\"high\"\n              checked={register('priority').value === 'high'}\n            />\n          </Wrap>\n\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"without\"\n              {...register('priority', { required: false })}\n              value=\"without\"\n              checked={true}\n            />\n            <RadioLabel\n              htmlFor=\"without\"\n              value=\"without\"\n              checked={register('priority').value === 'without'}\n            />\n          </Wrap>\n        </RadioGroup>\n        <Text>Deadline</Text>\n        <CalendarWrapp onClick={toggleDatePicker}>\n          <CalendarText>{formatDate(dateBtn)}</CalendarText>\n          <CalendarArrow\n            style={{ width: 18, height: 18 }}\n            aria-label=\"open theme select icon\"\n          >\n            <use href={sprite + '#icon-arrow-down'}></use>\n          </CalendarArrow>\n        </CalendarWrapp>\n        <input\n          {...register('deadline', { value: unixFromat.toString() })}\n          style={{ display: 'none' }}\n        />\n        {showDatePicker && (\n          <DatePicker\n            selected={new Date()}\n            onChange={handleDateInputChange}\n            dateFormat=\"dd/MM/yyyy\"\n            inline\n            minDate={new Date()}\n          />\n        )}\n        {errors.exampleRequired && <span>This field is required</span>}\n        <CustomButton type=\"submit\">{'Edit'}</CustomButton>\n      </Form>\n    </CustomDialog>\n  );\n};\n\n// import { useForm } from 'react-hook-form';\n// import { useState } from 'react';\n// import DatePicker from 'react-datepicker';\n// import sprite from '../../images/sprite.svg';\n// import { formatDate } from 'utils.js/formatDate';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import './calendar.css';\n// import {\n//   Form,\n//   FormText,\n//   FromInput,\n//   FormTextarea,\n//   RadioGroup,\n//   RadioButton,\n//   RadioLabel,\n//   Wrap,\n//   Text,\n//   CalendarWrapp,\n//   CalendarText,\n//   CalendarArrow,\n//   CustomDialog,\n//   CloseButton,\n// } from './CardPopUp.styled';\n\n// import { CustomButton } from 'components/Button/CustomButton';\n// import { pureFinalPropsSelectorFactory } from 'react-redux/es/connect/selectorFactory';\n\n// import CloseIcon from '@mui/icons-material/Close';\n\n// export const CardPopUp = ({ isOpen, onClose }) => {\n//   const {\n//     register,\n//     handleSubmit,\n//     setValue,\n//     reset,\n//     formState: { errors },\n//   } = useForm();\n//   const onSubmit = data => {\n//     console.log(data);\n//     reset();\n//   };\n//   const [unixFromat, setUnixFormat] = useState(\n//     new Date(new Date().toUTCString()).getTime() / 1000\n//   );\n//   const [dateBtn, setDateBtn] = useState(new Date());\n//   const [showDatePicker, setShowDatePicker] = useState(false);\n\n//   const handleDateInputChange = date => {\n//     const UTC = date.toUTCString();\n//     const UNIX = new Date(UTC).getTime() / 1000;\n//     setDateBtn(date);\n//     setUnixFormat(UNIX);\n//     setValue('deadline', UNIX.toString());\n//     setShowDatePicker(false);\n//   };\n//   const toggleDatePicker = () => {\n//     setShowDatePicker(prevState => !prevState);\n//   };\n//   return (\n//     <CustomDialog open={isOpen} onClose={onClose}>\n//       <CloseButton type=\"button\" onClick={onClose}>\n//         <CloseIcon sx={{ fontSize: 'medium' }} style={{ marginTop: '14px' }} />\n//       </CloseButton>\n//       <Form onSubmit={handleSubmit(onSubmit)}>\n//         <FormText>{'Add card'}</FormText>\n//         <FromInput\n//           {...register('title', {\n//             minLength: 3,\n//             required: pureFinalPropsSelectorFactory,\n//           })}\n//           placeholder=\"Title\"\n//         />\n//         <FormTextarea\n//           placeholder=\"Description\"\n//           {...register('description', { minLength: 3, required: false })}\n//         ></FormTextarea>\n//         <Text>Label color</Text>\n//         <RadioGroup>\n//           <Wrap>\n//             <RadioButton\n//               type=\"radio\"\n//               id=\"low\"\n//               {...register('priority')}\n//               value=\"low\"\n//             />\n//             <RadioLabel\n//               htmlFor=\"low\"\n//               value=\"low\"\n//               checked={register('priority').value === 'low'}\n//             />\n//           </Wrap>\n//           <Wrap>\n//             <RadioButton\n//               type=\"radio\"\n//               id=\"medium\"\n//               {...register('priority')}\n//               value=\"medium\"\n//             />\n//             <RadioLabel\n//               htmlFor=\"medium\"\n//               value=\"medium\"\n//               checked={register('priority').value === 'medium'}\n//             />\n//           </Wrap>\n\n//           <Wrap>\n//             <RadioButton\n//               type=\"radio\"\n//               id=\"high\"\n//               {...register('priority')}\n//               value=\"high\"\n//             />\n//             <RadioLabel\n//               htmlFor=\"high\"\n//               value=\"high\"\n//               checked={register('priority').value === 'high'}\n//             />\n//           </Wrap>\n\n//           <Wrap>\n//             <RadioButton\n//               type=\"radio\"\n//               id=\"without\"\n//               {...register('priority', { required: false })}\n//               value=\"without\"\n//               checked={true}\n//             />\n//             <RadioLabel\n//               htmlFor=\"without\"\n//               value=\"without\"\n//               checked={register('priority').value === 'without'}\n//             />\n//           </Wrap>\n//         </RadioGroup>\n//         <Text>Deadline</Text>\n//         <CalendarWrapp onClick={toggleDatePicker}>\n//           <CalendarText>{formatDate(dateBtn)}</CalendarText>\n//           <CalendarArrow\n//             style={{ width: 18, height: 18 }}\n//             aria-label=\"open theme select icon\"\n//           >\n//             <use href={sprite + '#icon-arrow-down'}></use>\n//           </CalendarArrow>\n//         </CalendarWrapp>\n//         <input\n//           {...register('deadline', { value: unixFromat.toString() })}\n//           style={{ display: 'none' }}\n//         />\n//         {showDatePicker && (\n//           <DatePicker\n//             selected={new Date()}\n//             onChange={handleDateInputChange}\n//             dateFormat=\"dd/MM/yyyy\"\n//             inline\n//             minDate={new Date()}\n//           />\n//         )}\n//         {errors.exampleRequired && <span>This field is required</span>}\n//         <CustomButton type=\"submit\">{'Edit'}</CustomButton>\n//       </Form>\n//     </CustomDialog>\n//   );\n// };\n","export const dateFormatDedline = deadline => {\n  const seconds = new Date(deadline);\n  const day = seconds.getDate();\n  const month = seconds.getMonth() + 1;\n  const monthFormat = month < 10 ? `0${month}` : `${month}`;\n\n  const year = seconds.getFullYear();\n  return `${day}/${monthFormat}/${year}`;\n};\n","import {\n  CardActionsStyled,\n  CardFooterStyled,\n  CardIconsWrapper,\n} from '../ProjectOfficeStyle';\nimport CardContent from '@mui/material/CardContent';\nimport { Button, CardActionArea } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\nimport {\n  CardStyled,\n  CardTitle,\n  CardText,\n  CardFooterTitle,\n  DividerStyled,\n  WrapperFooter,\n  WrapperText,\n  StatusWrapper,\n  StatusStyled,\n} from './ProjectOfficeCardItem.styled';\n\nimport { useState } from 'react';\nimport { CardPopUp } from 'components/CardPopUp/CardPopUp';\nimport axios from 'axios';\nimport { dateFormatDedline } from 'utils/dateFormatDedline';\n\nconst ProjectOfficeCardItem = ({ task, boardId, columnId, setTasks }) => {\n  const { _id: taskId, title, description, priority, deadline } = task;\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  const handleDeleteTask = async () => {\n    try {\n      await axios.delete(\n        `/boards/${boardId}/columns/${columnId}/tasks/${taskId}`\n      );\n      setTasks(p => {\n        return p.filter(task => task._id !== taskId);\n      });\n    } catch (e) {\n      console.log('e.message', e.message);\n    }\n  };\n\n  return (\n    <>\n      <CardStyled key={taskId} priority={priority}>\n        <CardActionArea>\n          <CardContent>\n            <CardTitle component=\"div\">{title}</CardTitle>\n\n            <CardText>{description}</CardText>\n          </CardContent>\n        </CardActionArea>\n        <CardActionsStyled>\n          <DividerStyled />\n        </CardActionsStyled>\n        <CardFooterStyled>\n          <CardFooterTitle>Priority</CardFooterTitle>\n          <CardFooterTitle>Deadline</CardFooterTitle>\n        </CardFooterStyled>\n\n        <WrapperFooter>\n          <CardFooterStyled>\n            <WrapperText>\n              <StatusWrapper>\n                <StatusStyled priority={priority} />\n                {priority}\n              </StatusWrapper>\n            </WrapperText>\n\n            <WrapperText>{dateFormatDedline(deadline)}</WrapperText>\n            {/* <WrapperText>{date}</WrapperText> */}\n          </CardFooterStyled>\n\n          <CardIconsWrapper>\n            <NotificationsNoneIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n\n            <Button sx={{ padding: 0, width: '20px', minWidth: '0' }}>\n              <ArrowCircleRightIcon\n                fontSize=\"small\"\n                sx={{ color: '#888888' }}\n              />\n            </Button>\n            <Button\n              onClick={handleToggleModal}\n              sx={{ padding: 0, width: '20px', minWidth: '0' }}\n            >\n              <EditIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n            </Button>\n            <Button\n              onClick={handleDeleteTask}\n              sx={{ padding: 0, width: '20px', minWidth: '0' }}\n            >\n              <DeleteOutlineIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n            </Button>\n          </CardIconsWrapper>\n        </WrapperFooter>\n      </CardStyled>\n      {isOpen && (\n        <CardPopUp\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          columnId={columnId}\n          boardId={boardId}\n          setTasks={setTasks}\n          task={task}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ProjectOfficeCardItem;\n\n// import {\n//   CardActionsStyled,\n//   CardFooterStyled,\n//   CardIconsWrapper,\n// } from '../ProjectOfficeStyle';\n// import CardContent from '@mui/material/CardContent';\n// import { Button, CardActionArea } from '@mui/material';\n// import EditIcon from '@mui/icons-material/Edit';\n// import DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\n// import ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\n// import NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\n// import {\n//   CardStyled,\n//   CardTitle,\n//   CardText,\n//   CardFooterTitle,\n//   DividerStyled,\n//   WrapperFooter,\n//   WrapperText,\n//   StatusWrapper,\n//   StatusStyled,\n// } from './ProjectOfficeCardItem.styled';\n\n// import { useState } from 'react';\n// import { CardPopUp } from 'components/CardPopUp/CardPopUp';\n\n// const ProjectOfficeCardItem = ({ task }) => {\n//   const { _id, title, description, priority, deadline } = task;\n\n//   const [isOpen, setIsOpen] = useState(false);\n\n//   const handleToggleModal = () => {\n//     setIsOpen(prevstate => !prevstate);\n//   };\n\n//   return (\n//     <>\n//       <CardStyled>\n//         <CardActionArea>\n//           <CardContent>\n//             <CardTitle>{title}</CardTitle>\n\n//             <CardText>{description}</CardText>\n//           </CardContent>\n//         </CardActionArea>\n//         <CardActionsStyled component={'div'}>\n//           <DividerStyled />\n//         </CardActionsStyled>\n//         <CardFooterStyled>\n//           <CardFooterTitle>Priority</CardFooterTitle>\n//           <CardFooterTitle>Deadline</CardFooterTitle>\n//         </CardFooterStyled>\n\n//         <WrapperFooter>\n//           <CardFooterStyled>\n//             <WrapperText>\n//               <StatusWrapper>\n//                 <StatusStyled />\n//                 {priority}\n//               </StatusWrapper>\n//             </WrapperText>\n\n//             <WrapperText>{deadline}</WrapperText>\n//           </CardFooterStyled>\n\n//           <CardIconsWrapper>\n//             <NotificationsNoneIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n//             <ArrowCircleRightIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n//             <Button onClick={handleToggleModal}>\n//               <EditIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n//             </Button>\n\n//             <DeleteOutlineIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n//           </CardIconsWrapper>\n//         </WrapperFooter>\n//       </CardStyled>\n//       {isOpen && <CardPopUp isOpen={isOpen} onClose={handleToggleModal} />}\n//     </>\n//   );\n// };\n\n// export default ProjectOfficeCardItem;\n","import styled from 'styled-components';\n\nexport const ActionsButton = styled.div`\n    background: var(--actionsButton);\n    width: 334px; \n    height: 56px;\n    border-radius: 8px;\n    padding: 20px;\n    display: flex; \n    justify-content: space-between;\n`;\n\nexport const StyledTitle = styled.p`\n    color: var(--primaryTextColor);\n    font-weight: 500; \n    font-size: 14px;\n    line-height: 21px;\n`;\n\n","import {\n  Wrapper,\n  ButtonStyled,\n  AddIconStyled,\n  CardButtonStyled,\n} from '../ProjectOfficeStyle';\n\nconst ProjectCardAddButton = () => {\n  return (\n    <>\n      <Wrapper>\n        {/* {Array.from(Array(3)).map((_, index) => ( */}\n        {/* <CardButtonStyled direction=\"row\" spacing={2} key={index}> */}\n        <CardButtonStyled direction=\"row\" spacing={2}>\n          <ButtonStyled startIcon={<AddIconStyled />}>\n            Add another card\n          </ButtonStyled>\n        </CardButtonStyled>\n        {/* ))} */}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default ProjectCardAddButton;\n","import { TextField, Dialog } from \"@mui/material\";\n// import { styled } from '@mui/system';\nimport styled from 'styled-components';\n\n\nexport const StyleInput = styled(TextField)`\n  /* background-color: var(--currentLinkBgColor); */\n  max-width: 302px;\n  margin-bottom: 24px;\n\n        & label.Mui-focused {\n          color: #fff;\n        };\n\n  & .MuiInputBase-input {\n          padding: 14px 16px;\n          color: var(--primaryTextColor);\n          background-color: var(--currentLinkBgColor);\n\n        };\n\n        & .MuiFormLabel-root {\n          color: #fff;\n        };\n\n  & .MuiInputBase-root {\n          opacity: 0.4;\n    border-radius: 8px;\n              margin-bottom: 24px;\n    & :hover {\n      opacity: 1.0;\n    };\n\n    & :focus {\n      opacity: 1.0;\n    }\n        };\n\n        & .MuiOutlinedInput-root {\n          & fieldset {\n            border-color: #BEDBB0;\n          };\n          & :hover fieldset {\n            border-color: #BEDBB0;\n          };\n          & .Mui-focused fieldset {\n            border-color: #BEDBB0;\n          };\n        };\n`\n\nexport const CustomDialog = styled(Dialog)`\n  \n  & .MuiPaper-root {\n    background-color: var(--themeListBgColor);\n    max-width: 350px;\n    padding: 24px;\n  margin: 0px;\n  };\n\n  & .MuiDialogContent-root {\n    padding: 0px;\n  }\n\n`","import { DialogTitle, Box, DialogContent } from \"@mui/material\";\nimport { CustomButton } from \"../../Button/CustomButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CustomDialog, StyleInput } from \"./ModalColumn.styled\";\nimport { useState } from \"react\";\n\nexport const ModalColumn = ({ isOpen, onClose, type = \"create\", initialState = '', onRemove, onUpdate }) => {\n  const [title, setTitle] = useState(initialState);\n\n  const reset = () => {\n    setTitle('');\n  }\n\n  const handleClose = () => { \n    reset();\n    onClose();\n  }\n\n  const handleChange = ({ target }) => { \n    setTitle(target.value);\n  }\n\n  const handleButtonClick = (title) => { \n    if (type === \"create\") { \n      onRemove(title);\n      handleClose();\n    }\n    if (type === \"edit\") {\n      console.log(title)\n      onUpdate(title);\n      handleClose();\n    }\n\n    \n  }\n\n\n  return (\n    <CustomDialog\n      open={isOpen}\n      fullWidth={true}\n      onClose={handleClose}\n      position=\"relative\"\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        marginBottom=\"24px\"\n      >\n        <DialogTitle\n          sx={{\n            color: \"var(--primaryTextColor)\",\n            padding: \"0\",\n            fontFamily: \"Poppins, sans-serif\",\n            fontSize: \"18px\",\n            lineHeight: \"1.5\",\n          }}\n        >\n          {type === 'create' ? 'Add Column' : 'Edit Column'}\n        </DialogTitle>\n        <CloseIcon\n          onClick={handleClose}\n          sx={{\n            color: \"var(--primaryTextColor)\",\n            position: \"absolute\",\n            top: \"14px\",\n            right: \"14px\",\n            height: \"18px\",\n            width: \"18px\",\n            cursor: \"pointer\",\n          }}\n        />\n      </Box>\n      <DialogContent>\n        <StyleInput\n          autoFocus\n          id=\"title\"\n          placeholder=\"Title\"\n          name=\"title\"\n          type=\"text\"\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: false }}\n          value={title}\n          onChange={handleChange}\n        />\n        <CustomButton onClick={() => handleButtonClick(title)} style={{height: '49px !important'}}>\n          {type === 'create' ? 'Add' : 'Edit'}\n        </CustomButton>\n      </DialogContent>\n    </CustomDialog>\n  );\n};","import { Wrapper, ActionsIconsButton } from '../ProjectOfficeStyle';\nimport ProjectOfficeCardItem from '../ProjectOfficeCardItem/ProjectOfficeCardItem';\nimport { ActionsButton, StyledTitle } from './OfficeItemStyle.styled';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { useEffect, useState } from 'react';\n\nimport ProjectCardAddButton from '../ProjectCardAddButton/ProjectCardAddButton';\nimport axios from 'axios';\n// import { useDispatch } from 'react-redux';\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\n\nconst ProjectOfficeItem = ({\n  column: { title, _id: columnId },\n  boardId,\n  onDelete,\n  handleEditColumnName,\n}) => {\n  const [tasks, setTasks] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  // const dispatch = useDispatch();\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleUpdate = newName => {\n    console.log(boardId);\n    console.log(columnId);\n    console.log(newName);\n    handleEditColumnName({ boardId, columnId, title: newName });\n  };\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const { data } = await axios.get(\n        `/boards/${boardId}/columns/${columnId}/tasks`\n      );\n\n      setTasks(data.tasks);\n    };\n    fetchTasks();\n  }, [boardId, columnId]);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <Wrapper>\n        <ActionsButton key={Date.now()}>\n          <StyledTitle>{title}</StyledTitle>\n          <ActionsIconsButton>\n            <button type=\"button\" onClick={handleToggle}>\n              <EditIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n            </button>\n            <button type=\"button\" onClick={() => onDelete(boardId, columnId)}>\n              <DeleteOutlineIcon fontSize=\"small\" sx={{ color: '#888888' }} />\n            </button>\n          </ActionsIconsButton>\n        </ActionsButton>\n      </Wrapper>\n      {tasks &&\n        tasks.map(task => (\n          <ProjectOfficeCardItem\n            key={task._id}\n            task={task}\n            columnId={columnId}\n            boardId={boardId}\n            setTasks={setTasks}\n          />\n        ))}\n      <ProjectCardAddButton />\n      <ModalColumn\n        isOpen={isOpen}\n        onClose={handleToggle}\n        type=\"edit\"\n        onUpdate={handleUpdate}\n      />\n    </div>\n  );\n};\n\nexport default ProjectOfficeItem;\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 20px;\n  margin-bottom: 10px;\n`;\n\n// export const FilterText = styled.button`\n//   color: var(--cardHeaderText);\n//   font-weight: 500;\n//   font-size: 14px;\n//   line-height: 21px;\n// `;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--primaryTextColor);\n`;\n\nexport const BtnFilter = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n\n  width: 64px;\n  height: 20px;\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  border: none;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nexport const PopUpFilterWrapper = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  z-index: 999;\n`;\n\nexport const PopUpFilterContent = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background: #fff;\n  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n  padding: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const BgContainer = styled.div``;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0;\n`;\n\nexport const ButtonContainer = styled.div`\n  max-width: 252px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n\n  box-sizing: border-box;\n  padding: 14px 0;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  img {\n    display: block;\n    max-width: 100%;\n    max-height: 100%;\n    border-radius: 6px;\n  }\n\n  &.active {\n    border: 2px solid rgba(190, 219, 176, 1);\n    /* transform: scale(0.95); */\n  }\n`;\n\nexport const ButtonNoneBg = styled.button`\n  width: 28px;\n  height: 28px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 6px;\n  background-color: var(--defaultAvatarBgColor);\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-image: url();\n  background-size: cover;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--defaultImgColor);\n  fill: none;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  getColumnsForBoard,\n  updateUserBoard,\n} from 'redux/dashboards/operation';\n\nimport sprite from '../../../images/sprite.svg';\nimport {\n  Button,\n  ButtonNoneBg,\n  ButtonContainer,\n  Title,\n  SvgIcons,\n  BgContainer,\n} from './BgChange.styled';\nimport { images } from '../../../utils/bgImgPreview';\n\nconst buttonsImg = images;\n\nexport const BgChange = React.memo(() => {\n  const [loadedImages, setLoadedImages] = useState([]);\n\n  const dispatch = useDispatch();\n  const { boardName } = useParams();\n\n  const board = useSelector(state =>\n    state.dashboard.dashboards.find(item => item._id === boardName)\n  );\n\n  const backgroundId = board.background.toString();\n\n  useEffect(() => {\n    const loadImage = async imageUrl => {\n      try {\n        const response = await fetch(imageUrl);\n        if (response.ok) {\n          return await response.blob();\n        }\n        throw new Error('Image loading failed.');\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const loadImages = async () => {\n      const promises = buttonsImg.map(button =>\n        loadImage(button.backgroundImage)\n      );\n\n      try {\n        const results = await Promise.allSettled(promises);\n        const images = results\n          .filter(result => result.status === 'fulfilled')\n          .map(result => result.value);\n        setLoadedImages(images);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    loadImages();\n  }, []);\n\n  const handleButtonClick = async id => {\n    const data = {\n      title: board.title,\n      dashboardIcon: board.dashboardIcon,\n      background: `${id}`,\n    };\n\n    await dispatch(updateUserBoard({ boardId: board._id, board: data }));\n    await dispatch(getColumnsForBoard(boardName));\n  };\n\n  return (\n    <BgContainer>\n      <Title>Background</Title>\n      <ButtonContainer>\n        <ButtonNoneBg type=\"button\" onClick={() => handleButtonClick(0)}>\n          <SvgIcons width={18} height={18}>\n            <use href={sprite + '#icon-bg-default'} />\n          </SvgIcons>\n        </ButtonNoneBg>\n        {buttonsImg.map(button => (\n          <Button\n            key={button.id}\n            type=\"button\"\n            style={{\n              backgroundImage: `url(${button.backgroundImage})`,\n              backgroundSize: 'cover',\n            }}\n            onClick={() => handleButtonClick(button.id)}\n            className={\n              backgroundId.toString() === button.id.toString() ? 'active' : ''\n            }\n          >\n            {loadedImages[button.id] && (\n              <img\n                srcSet={`${button.backgroundImage} 1x, ${button.retinaBackgroundImage} 2x`}\n                alt=\"\"\n              />\n            )}\n          </Button>\n        ))}\n      </ButtonContainer>\n    </BgContainer>\n  );\n});\n","import styled from 'styled-components';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nexport const RadioGr = styled(RadioGroup)`\n  margin: 8px 0 0 32px;\n`;\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding-top: 14px;\n  border-top: 1px solid var(--modalGorizontalBorderColor);\n`;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const BtnShowAll = styled.button`\n  border: none;\n  background: inherit;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  text-decoration-line: underline;\n\n  color: var(--popupTextColor);\n`;\n\nexport const radioButtons = [\n  {\n    value: 'withoutPriority',\n    label: 'Without priority',\n    color: '#5B5B5B',\n    checkedColor: '#5B5B5B',\n    buttonColor: '#5B5B5B',\n  },\n  {\n    value: 'low',\n    label: 'Low',\n    color: '#5B5B5B',\n    checkedColor: '#8FA1D0',\n    buttonColor: '#8FA1D0',\n  },\n  {\n    value: 'medium',\n    label: 'Medium',\n    color: '#5B5B5B',\n    checkedColor: '#E09CB5',\n    buttonColor: '#E09CB5',\n  },\n  {\n    value: 'high',\n    label: 'High',\n    color: '#5B5B5B',\n    checkedColor: '#BEDBB0',\n    buttonColor: '#BEDBB0',\n  },\n];\n","import React, { useState } from 'react';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport {\n  Title,\n  FilterContainer,\n  BtnShowAll,\n  RadioGr,\n  radioButtons,\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const [selectedValue, setSelectedValue] = useState('');\n\n  const primaryTextColor = `var(--primaryTextColor)`;\n\n  // const handleChange = event => {\n  //   setSelectedValue(event.target.value);\n  // };\n\n  const handleReset = () => {\n    setSelectedValue('');\n  };\n\n  const handleShowAll = () => {\n    console.log('Show all selected');\n    handleReset();\n  };\n\n  const handleRadioButtonChange = event => {\n    console.log(`Selected priority: ${event.target.value}`);\n    setSelectedValue(event.target.value);\n  };\n\n  return (\n    <>\n      <FilterContainer>\n        <Title>Label color</Title>\n        <BtnShowAll type=\"button\" onClick={handleShowAll}>\n          Show all\n        </BtnShowAll>\n      </FilterContainer>\n      <FormControl>\n        <RadioGr\n          aria-labelledby=\"priority\"\n          name=\"radio-buttons-group\"\n          value={selectedValue}\n          onChange={handleRadioButtonChange}\n        >\n          {radioButtons.map(button => (\n            <FormControlLabel\n              key={button.value}\n              sx={{\n                color: button.color,\n                '& .Mui-checked.MuiRadio-root': {\n                  color: button.checkedColor,\n                },\n                '& .MuiSvgIcon-root': {\n                  fontSize: 14,\n                },\n                '& .MuiFormControlLabel-label': {\n                  fontSize: 12,\n                },\n                '& .MuiButtonBase-root.MuiRadio-root': {\n                  color: button.checkedColor,\n                  padding: 0,\n                  backgroundColor:\n                    selectedValue === button.value\n                      ? 'transparent'\n                      : button.buttonColor,\n                },\n                '& .MuiTypography-root': {\n                  marginLeft: 1,\n                  color:\n                    selectedValue === button.value\n                      ? primaryTextColor\n                      : 'inherit',\n                },\n              }}\n              value={button.value}\n              control={<Radio />}\n              label={button.label}\n            />\n          ))}\n        </RadioGr>\n      </FormControl>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  position: relative;\n\n  width: 302px;\n  height: auto;\n\n  box-sizing: border-box;\n\n  border-radius: 8px;\n  border: 1px solid var(--modalBorderColor);\n  background: var(--themeListBgColor);\n  padding: 24px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.05);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  right: 14px;\n  top: 14px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 16px;\n  height: 16px;\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  border: none;\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--primaryTextColor);\n`;\n\nexport const ModalHeader = styled.h4`\n  color: var(--primaryTextColor);\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  padding-bottom: 14px;\n  border-bottom: 1px solid var(--modalGorizontalBorderColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const Wraper = styled.div`\n  position: absolute;\n  z-index: 999;\n  top: 32px;\n  right: 0;\n`;\n","import React, { useRef } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport { BgChange } from './BgChange/BgChange';\nimport { Filter } from './Filter/Filter';\nimport {\n  ModalContainer,\n  ModalHeader,\n  CloseButton,\n  SvgIcons,\n  Wraper,\n} from './PopUpFilter.styled';\n\nexport const PopUpFilter = ({ onClose }) => {\n  const modalRef = useRef(null);\n\n  const handleClickOutside = event => {\n    if (modalRef.current && !modalRef.current.contains(event.target)) {\n      onClose();\n    }\n  };\n\n  return (\n    <Wraper onClick={handleClickOutside}>\n      <ModalContainer ref={modalRef}>\n        <CloseButton type=\"button\" onClick={onClose}>\n          <SvgIcons aria-label=\"close modal select icon\" width={18} height={18}>\n            <use href={`${sprite}#icon-x-close`}></use>\n          </SvgIcons>\n        </CloseButton>\n        <ModalHeader>Filters</ModalHeader>\n        <BgChange />\n        <Filter />\n      </ModalContainer>\n    </Wraper>\n  );\n};\n","import React, { useState } from 'react';\nimport { Wrapper } from '../ProjectOfficeStyle';\nimport { BtnFilter, Title, SvgIcons } from './ProjectOfficeHeaderStyle';\nimport sprite from '../../../images/sprite.svg';\nimport { PopUpFilter } from 'components/PopUpFilter/PopUpFilter';\n\nconst ProjectOfficeHeader = () => {\n  const [isPopUpVisible, setPopUpVisible] = useState(false);\n\n  const togglePopUp = () => {\n    setPopUpVisible(!isPopUpVisible);\n  };\n\n  const handleClosePopUp = () => {\n    setPopUpVisible(false);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Title>Project</Title>\n\n        <BtnFilter type=\"button\" onClick={togglePopUp}>\n          <SvgIcons aria-label=\"filter icon\" width={18} height={18}>\n            <svg>\n              <use xlinkHref={`${sprite}#icon-filter`} />\n            </svg>\n          </SvgIcons>\n          <span>Filter</span>\n        </BtnFilter>\n        {isPopUpVisible && <PopUpFilter onClose={handleClosePopUp} />}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default ProjectOfficeHeader;\n","import { CustomButton } from 'components/Button/CustomButton';\nimport { useState } from 'react';\n\nimport { StackWrapper } from '../ProjectOfficeStyle';\n\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\n// import { useParams } from 'react-router-dom';\n\nconst AddColumnButton = ({ handleAddColumn }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  // const columns = [\n  //   { columnName: 'one', id: 1 },\n  //   { columnName: 'two', id: 2 },\n  // ];\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  // const handleCreateColumn = (columnName) => {\n  //   //   const newArr = [...columns, { id: 4, columnName: columnName }];\n  //     console.log(columns)\n  // }\n\n  return (\n    <>\n      <StackWrapper direction=\"row\" spacing={2}>\n        <CustomButton isWhiteBackground={true} onClick={handleToggleModal}>\n          Add\n        </CustomButton>\n        <ModalColumn\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          onRemove={handleAddColumn}\n        />\n        {/* <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another column\n            </ButtonStyled> */}\n      </StackWrapper>\n    </>\n  );\n};\n\nexport default AddColumnButton;\n","import styled from 'styled-components';\n\nconst baseBgUrl =\n  'https://res.cloudinary.com/dxhypjavs/image/upload/v1687378707/command_project_task_pro_images/';\n\nexport const BackgroundContainer = styled.div`\n  /* background-color: red; */\n\n  height: 100%;\n  background-size: cover;\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-color: ${props => (props.bgnumber ? 'initial' : 'transparent')};\n\n\n  @media screen and (max-width: 374px) {\n    background-image: ${props =>\n      `url(${baseBgUrl}mobile/bg-image-${props.bgnumber}.jpg)`};\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (max-width: 374px),\n    screen and (min-resolution: 192dpi) and (max-width: 374px),\n    screen and (min-resolution: 2dppx) and (max-width: 374px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}mobile/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n\n  @media screen and (min-width: 375px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}tablet/bg-image-${props.bgnumber}.jpg)`};\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 375px),\n    screen and (min-resolution: 192dpi) and (min-width: 375px),\n    screen and (min-resolution: 2dppx) and (min-width: 375px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}tablet/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n\n  @media screen and (min-width: 768px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}desktop/bg-image-${props.bgnumber}.jpg)`};\n  }\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 768px),\n    screen and (min-resolution: 192dpi) and (min-width: 768px),\n    screen and (min-resolution: 2dppx) and (min-width: 768px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}desktop/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n`;","// import { useState } from 'react';\n\nimport ProjectOfficeItem from './ProjectOfficeItem/ProjectOfficeItem';\nimport { useEffect } from 'react';\n// import { getColumns } from 'services/fetchColumn';\nimport ProjectOfficeHeader from './ProjectOfficeHeader/ProjectOfficeHeader';\nimport AddColumnButton from './AddColumnsButton/AddColumnsButton';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addColumn, deleteColumn, getColumnsForBoard, updateColumn } from 'redux/dashboards/operation';\nimport {\n  selectColumnsForBoard,\n  selectDashboards,\n} from 'redux/dashboards/selectors';\nimport { Box } from '@mui/material';\nimport { BackgroundContainer } from './ProjectOfficeBgContainer';\n\n\nconst ProjectOffice = () => {\n  const isLoading = useSelector(state => state.dashboard.isLoading);\n  const { boardName } = useParams();\n  const columns = useSelector(state => selectColumnsForBoard(state, boardName));\n  const dashboards = useSelector(selectDashboards);\n  const currentBoard = dashboards.find(board => board._id === boardName);\n  const dispatch = useDispatch();\n  \n  const handleDeletecolumn = async (boardId, columnId) => {\n    await dispatch(deleteColumn({ boardId, columnId }));\n    dispatch(getColumnsForBoard(boardName));\n  };\n\n\n  const handleEditColumnName = async ({ boardId, columnId, title }) => {\n    await dispatch(updateColumn({ boardId, columnId, title }));\n    console.log('UPADATE NAME NEW')\n    dispatch(getColumnsForBoard(boardName));\n    \n  };\n\n\n\n  const handleAddColumn = columnName => {\n    dispatch(addColumn({ title: columnName, boardId: boardName }));\n  };\n\n  useEffect(() => {\n    dispatch(getColumnsForBoard(boardName));\n  }, [dispatch, boardName]);\n\n\n\n\n\n  return (\n    // <Box sx={{ marginLeft: '20%' }}>\n    <BackgroundContainer bgnumber={currentBoard ? currentBoard.background : ''}>\n      <Box sx={{ marginLeft: 3 }}>\n        <ProjectOfficeHeader />\n        {!isLoading && <AddColumnButton handleAddColumn={handleAddColumn} />}\n        {/* <div style={{ display: 'flex', flexDirection: 'row' }}> */}\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\n          {columns ? (\n            columns.map(column => (\n              <ProjectOfficeItem\n                column={column}\n                boardId={boardName}\n                key={column._id}\n                onDelete={handleDeletecolumn}\n                handleEditColumnName={handleEditColumnName}\n              />\n            ))\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n        {/* </div> */}\n        {/* <ProjectOfficeItem column={columns} /> */}\n      </Box>\n    </BackgroundContainer>\n  );\n};\n\nexport default ProjectOffice;\n","import { useEffect } from \"react\";\nimport ProjectOffice from \"../components/ProjectOffice/ProjectOffice\";\nimport { useSelector } from \"react-redux\";\nimport { selectDashboards } from \"redux/dashboards/selectors\";\nimport { DefaultScreen } from \"components/DefaultScreen/DefaultScreen\";\n\nconst ScreensPage = () => {\n  const dashboards = useSelector(selectDashboards);\n\n  useEffect(() => {\n  }, [dashboards]);\n\n\n  console.log(dashboards);\n  return (\n    <>\n      {dashboards && dashboards.length > 0 ? <ProjectOffice /> : <DefaultScreen />} \n    </>\n  );\n};\n\nexport default ScreensPage;\n","export const selectDashboards = state => state.dashboard.dashboards;\n\nexport const selectColumnsForBoard = (state, boardId) => {\n  const board = state.dashboard.dashboards.find(board => board._id === boardId);\n  return board ? board.columns : [];\n};\n\nexport const selectCurrentDashboard = state => state.dashboard.currentDashboard;","export const images = [\n  {\n    id: 1,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-1.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-1_2x.jpg',\n  },\n  {\n    id: 2,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-2.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-2_2x.jpg',\n  },\n  {\n    id: 3,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-3.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-3_2x.jpg',\n  },\n  {\n    id: 4,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-4.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-4_2x.jpg',\n  },\n  {\n    id: 5,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-5.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-5_2x.jpg',\n  },\n  {\n    id: 6,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-6.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-6_2x.jpg',\n  },\n  {\n    id: 7,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-7.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-7_2x.jpg',\n  },\n  {\n    id: 8,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-8.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-8_2x.jpg',\n  },\n  {\n    id: 9,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-9.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-9_2x.jpg',\n  },\n  {\n    id: 10,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-10.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-10_2x.jpg',\n  },\n  {\n    id: 11,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-11.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-11_2x.jpg',\n  },\n\n  {\n    id: 12,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-12.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-12_2x.jpg',\n  },\n  {\n    id: 13,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-13.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-13_2x.jpg',\n  },\n  {\n    id: 14,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-14.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-14_2x.jpg',\n  },\n  {\n    id: 15,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-15.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-15_2x.jpg',\n  },\n];"],"names":["DefaultWrapper","styled","_templateObject","_taggedTemplateLiteral","DefaultText","_templateObject2","AccentText","_templateObject3","DefaultScreen","_jsx","children","_jsxs","Wrapper","position","display","alignItems","justifyContent","marginTop","marginRight","gap","ActionsIconsButton","flexDirection","CardFooterStyled","flexWrap","height","overflow","paddingRight","paddingLeft","CardIconsWrapper","CardActionsStyled","CardActions","StackWrapper","Stack","width","background","borderRadius","CardButtonStyled","marginBottom","ButtonStyled","Button","color","fontSize","textTransform","AddIconStyled","AddIcon","CardStyled","props","priority","CardTitle","CardText","CardFooterTitle","_templateObject4","DividerStyled","_templateObject5","WrapperFooter","_templateObject6","WrapperText","_templateObject7","StatusWrapper","_templateObject8","StatusStyled","_templateObject9","isSameDay","date1","date2","getDate","getMonth","getFullYear","formatDate","date","today","Date","tomorrow","optionsAllDays","toLocaleDateString","weekday","optionsNearestDays","month","setDate","concat","CustomDialog","Dialog","backgroundColor","maxWidth","padding","margin","border","hoverFocusStyles","css","CloseButton","Form","FormText","FromInput","FormTextarea","RadioGroup","RadioLabel","value","RadioButton","_templateObject10","Wrap","_templateObject11","Text","_templateObject12","CalendarWrapp","_templateObject13","CalendarText","_templateObject14","CalendarArrow","_templateObject15","CardPopUp","_ref","isOpen","onClose","boardId","columnId","setTasks","_ref$task","task","taskId","_id","_ref$task$title","title","_ref$task$description","description","_ref$task$priority","_ref$task$deadline","deadline","_useForm","useForm","defaultValues","register","handleSubmit","setValue","reset","errors","formState","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","res","wrap","_context","prev","next","axios","sent","p","map","stop","_x","apply","arguments","_useState","useState","toUTCString","getTime","_useState2","_slicedToArray","unixFromat","setUnixFormat","_useState3","_useState4","dateBtn","setDateBtn","_useState5","_useState6","showDatePicker","setShowDatePicker","open","type","onClick","CloseIcon","sx","style","_objectSpread","minLength","required","pureFinalPropsSelectorFactory","placeholder","id","htmlFor","checked","prevState","href","sprite","toString","DatePicker","selected","onChange","UTC","UNIX","dateFormat","inline","minDate","exampleRequired","CustomButton","dateFormatDedline","seconds","day","monthFormat","year","setIsOpen","handleToggleModal","prevstate","handleDeleteTask","filter","t0","console","log","message","_Fragment","CardActionArea","CardContent","component","NotificationsNoneIcon","minWidth","ArrowCircleRightIcon","EditIcon","DeleteOutlineIcon","ActionsButton","StyledTitle","direction","spacing","startIcon","StyleInput","TextField","ModalColumn","_ref$type","_ref$initialState","initialState","onRemove","onUpdate","setTitle","handleClose","fullWidth","Box","DialogTitle","fontFamily","lineHeight","top","right","cursor","DialogContent","autoFocus","name","variant","InputLabelProps","shrink","target","handleButtonClick","_ref$column","column","onDelete","handleEditColumnName","tasks","handleToggle","useEffect","fetchTasks","_yield$axios$get","now","ProjectOfficeCardItem","ProjectCardAddButton","newName","Title","SvgIcons","BtnFilter","BgContainer","ButtonContainer","ButtonNoneBg","buttonsImg","images","BgChange","React","loadedImages","setLoadedImages","dispatch","useDispatch","boardName","useParams","board","useSelector","state","dashboard","dashboards","find","item","backgroundId","loadImage","imageUrl","response","fetch","ok","blob","abrupt","Error","error","loadImages","_callee2","promises","results","_images","_context2","button","backgroundImage","Promise","allSettled","result","status","_ref3","_callee3","_context3","dashboardIcon","updateUserBoard","getColumnsForBoard","_x2","backgroundSize","className","srcSet","retinaBackgroundImage","alt","RadioGr","FilterContainer","BtnShowAll","radioButtons","label","checkedColor","buttonColor","Filter","selectedValue","setSelectedValue","FormControl","event","FormControlLabel","marginLeft","control","Radio","ModalContainer","ModalHeader","Wraper","PopUpFilter","modalRef","useRef","current","contains","ref","isPopUpVisible","setPopUpVisible","xlinkHref","handleAddColumn","isWhiteBackground","baseBgUrl","BackgroundContainer","bgnumber","isLoading","columns","selectColumnsForBoard","currentBoard","selectDashboards","handleDeletecolumn","deleteColumn","updateColumn","_x3","ProjectOfficeHeader","AddColumnButton","columnName","addColumn","ProjectOfficeItem","length","ProjectOffice"],"sourceRoot":""}