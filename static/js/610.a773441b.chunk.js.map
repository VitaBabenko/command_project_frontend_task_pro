{"version":3,"file":"static/js/610.a773441b.chunk.js","mappings":"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","sources":["components/ProjectOffice/ProjectOfficeStyle.jsx","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.styled.jsx","utils.js/formatDate.js","components/CardPopUp/CardPopUp.styled.jsx","taskServices/updateTask.js","taskServices/addTask.js","components/CardPopUp/CardPopUp.jsx","utils/dateFormatDedline.js","taskServices/deleteTask.js","components/ProjectOffice/ProjectOfficePopUpCardColumn/ProjectOfficePopUpCardColumn.styled.js","taskServices/changeOwnerTask.js","taskServices/fetchTask.js","components/ProjectOffice/ProjectOfficePopUpCardColumn/ProjectOfficePopUpCardColumn.js","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.jsx","components/ProjectOffice/ProjectOfficeItem/OfficeItemStyle.styled.jsx","components/ProjectOffice/ProjectCardAddButton/ProjectCardAddButton.jsx","components/Modal/ModalColumn/ModalColumn.styled.jsx","components/Modal/ModalColumn/ModalColumn.jsx","components/ProjectOffice/ProjectOfficeItem/ProjectOfficeItem.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeaderStyle.jsx","components/PopUpFilter/BgChange/BgChange.styled.jsx","components/PopUpFilter/BgChange/BgChange.jsx","components/PopUpFilter/Filter/Filter.styled.jsx","components/PopUpFilter/Filter/Filter.jsx","components/PopUpFilter/PopUpFilter.styled.jsx","components/PopUpFilter/PopUpFilter.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeader.jsx","components/ProjectOffice/AddColumnsButton/AddColumnsButton.jsx","components/ProjectOffice/ProjectOfficeBgContainer.styled.js","components/ProjectOffice/ProjectOffice.jsx","components/DefaultScreen/DefaultScreen.styled.js","components/DefaultScreen/DefaultScreen.jsx","pages/ScreensPage.jsx","redux/dashboards/selectors.js","utils/bgImgPreview.js"],"sourcesContent":["import { styled } from '@mui/system';\nimport { Button, CardActions } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const Wrapper = styled('div')({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  paddingTop: '5px',\n  marginRight: '10px',\n  gap: '5px',\n});\n\nexport const FilterWrapper = styled('div')({\n  marginRight: '10px',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n});\n\nexport const ActionsIconsButton = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n});\n\nexport const CardWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  flexWrap: 'wrap',\n  height: '600px',\n  overflow: 'scroll',\n});\n\nexport const CardFooterStyled = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  paddingRight: '20px',\n  paddingLeft: '20px',\n  gap: '15px',\n});\n\nexport const CardIconsWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  paddingRight: '20px',\n  gap: '8px',\n  marginTop: '2px',\n});\n\nexport const CardActionsStyled = styled(CardActions)({\n  paddingRight: '20px',\n  paddingLeft: '20px',\n});\n\nexport const StackWrapper = styled(Stack)({\n  width: '330px',\n  height: '56px',\n  background: '#F6F6F7',\n  borderRadius: '8px',\n  marginBottom: '5px',\n});\n\nexport const CardButtonStyled = styled(Stack)({\n  width: '330px',\n  height: '56px',\n  background: '#BEDBB0',\n  borderRadius: '8px',\n  marginBottom: '20px',\n});\n\nexport const ButtonStyled = styled(Button)({\n  paddingLeft: '80px',\n  color: '#161616',\n  fontSize: '14px',\n  textTransform: 'none',\n});\n\nexport const AddIconStyled = styled(AddIcon)({\n  width: '28px',\n  height: '28px',\n  borderRadius: '8px',\n});\n","import styled from 'styled-components';\n\nexport const CardStyled = styled.p`\n  background: var(--cardItem);\n  max-width: 334px;\n  min-height: 154px;\n  border-radius: 8px;\n  margin-top: 15px;\n  margin-right: 10px;\n  margin-bottom: -10px;\n  border-left: 4px solid #8fa1d0;\n  border-left: 4px solid\n    ${props => {\n      switch (props.priority) {\n        case 'low':\n          return '#8FA1D0';\n        case 'medium':\n          return '#E09CB5';\n        case 'high':\n          return '#BEDBB0';\n        case 'without':\n          return ' var(--calendarWithoutColor)';\n        default:\n          return '#000000';\n      }\n    }};\n`;\n\nexport const CardTitle = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n  margin-bottom: 7px;\n`;\n\nexport const CardText = styled.p`\n  color: var(--cardItemText);\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 300px;\n`;\n\nexport const CardFooterTitle = styled.p`\n  color: var(--cardItemText);\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 12px;\n  padding-top: 5px;\n`;\n\nexport const DividerStyled = styled.div`\n  background: var(--cardItemText);\n  width: 300px;\n  height: 1px;\n`;\n\nexport const WrapperFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const WrapperText = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 15px;\n  padding-top: 8px;\n`;\n\nexport const StatusWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const StatusStyled = styled.div`\n  width: 12px;\n  height: 12px;\n  background: ${props => {\n    switch (props.priority) {\n      case 'low':\n        return '#8FA1D0';\n      case 'medium':\n        return '#E09CB5';\n      case 'high':\n        return '#BEDBB0';\n      case 'without':\n        return ' var(--calendarWithoutColor)';\n      default:\n        return '#000000';\n    }\n  }};\n  border-radius: 50%;\n`;\n\nexport const SvgIconsStyled = styled.svg`\n  stroke: var(--iconCardColor);\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n    box-shadow: 0px 0px 0px 0px #87d3ae;\n  }\n`;\n\nexport const ScrollStyled = styled.div`\ndisplay: flex;\nflex-direction: column;\n`;\n","function isSameDay(date1, date2) {\n  return (\n    date1.getDate() === date2.getDate() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getFullYear() === date2.getFullYear()\n  );\n}\n\nexport const formatDate = date => {\n  const today = new Date();\n  const tomorrow = new Date(today);\n  const optionsAllDays = date.toLocaleDateString('en-US', {\n    weekday: 'long',\n  });\n  const optionsNearestDays = date.toLocaleDateString('en-US', {\n    month: 'long',\n  });\n\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  if (isSameDay(date, today)) {\n    return `Today, ${optionsNearestDays} ${date.getDate()}`;\n  } else if (isSameDay(date, tomorrow)) {\n    return `Tomorrow, ${optionsNearestDays} ${date.getDate()}`;\n  } else {\n    const formattedDate = `${optionsAllDays} ${date.getDate()}`;\n    return formattedDate;\n  }\n};\n","import styled, { css } from 'styled-components';\nimport { Dialog } from '@mui/material';\n\nexport const CustomDialog = styled(Dialog)({\n  '& .MuiPaper-root': {\n    backgroundColor: 'var(--themeListBgColor)',\n    maxWidth: '350px',\n    padding: '24px',\n    margin: '0px',\n    border: '1px solid var(--modalBorderColor)',\n    borderRadius: '8px',\n    overflow: 'hidden',\n  },\n\n  '& .MuiDialogContent-root': {\n    padding: '0px',\n  },\n});\n\nexport const WrapperPopUp = styled.div`\n  width: 100%;\n  min-height: 355px;\n  padding: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--modalBorderColor);\n  background: var(--themeListBgColor);\n  box-shadow: 0px 4px 16px 0px var(--boxShadowColor);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 340px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 400px;\n  }\n`;\n\nconst hoverFocusStyles = css`\n  border: 1px solid var(--greenGreenBlueColor);\n  opacity: 0.7;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 7px;\n  margin-right: 14px;\n  /* font-size: 10px; */\n  line-height: 0;\n  color: var(--primaryTextColor);\n  /* color: red; */\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  min-width: 302px;\n`;\nexport const FormText = styled.label`\n  color: var(--primaryTextColor);\n  text-align: start;\n  margin-bottom: 24px;\n  font-size: 18px;\n  font-weight: 500;\n`;\nexport const FromInput = styled.input`\n  background-color: var(--themeListBgColor);\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--passiveBorderColor);\n  outline: none;\n  transition: opacity var(--transition_data);\n  color: var(--primaryTextColor);\n  &:hover {\n    ${hoverFocusStyles};\n  }\n  &:focus {\n    ${hoverFocusStyles};\n  }\n  &:placeholder {\n    color: var(--calendarSecondTextColor);\n  }\n`;\n\nexport const FormTextarea = styled.textarea`\n  background-color: var(--themeListBgColor);\n  vertical-align: text-top;\n  resize: none;\n  min-height: 154px;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--passiveBorderColor);\n  outline: none;\n  transition: opacity var(--transition_data);\n  color: var(--primaryTextColor);\n  &::placeholder {\n  }\n  &:hover {\n    ${hoverFocusStyles};\n  }\n  &:focus {\n    ${hoverFocusStyles};\n  }\n  &:placeholder {\n    color: var(--calendarSecondTextColor);\n  }\n`;\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 14px;\n`;\n\nexport const RadioLabel = styled.label`\n  --radio-background-color: ${props => {\n    switch (props.value) {\n      case 'low':\n        return '#8FA1D0';\n      case 'medium':\n        return '#E09CB5';\n      case 'high':\n        return '#BEDBB0';\n      case 'without':\n        return ' var(--calendarWithoutColor)';\n      default:\n        return '#000000';\n    }\n  }};\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  cursor: pointer;\n  background-color: var(--radio-background-color);\n`;\n\nexport const RadioButton = styled.input`\n  display: none;\n  &:checked + ${RadioLabel} {\n    width: 8px;\n    height: 8px;\n    position: relative;\n    &:before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      width: 14px;\n      height: 14px;\n      background-color: transparent;\n      border: 1px solid var(--radio-background-color);\n      border-radius: 50%;\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 14px;\n  &:not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const Text = styled.span`\n  color: var(--calendarSecondTextColor);\n  font-size: 12px;\n  margin-bottom: 6px;\n`;\n\nexport const CalendarWrapp = styled.div`\n  display: flex;\n\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 40px;\n  transition: opacity var(--transition_data);\n  &:hover {\n    opacity: 0.7;\n  }\n  &:focus {\n    opacity: 0.7;\n  }\n`;\nexport const CalendarText = styled.span`\n  color: var(--greenGreenBlueColor);\n  margin-right: 4px;\n`;\n\nexport const CalendarArrow = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: var(--greenGreenBlueColor);\n`;\n","import axios from 'axios';\n\nexport const updateTask = async (boardId, columnId, taskId, data) => {\n  try {\n    const res = await axios.put(\n      `/boards/${boardId}/columns/${columnId}/tasks/${taskId} `,\n      data\n    );\n    return res;\n  } catch (e) {\n    console.log('e.message', e.message);\n  }\n};\n","import axios from 'axios';\n\nexport const addTask = async (data, boardId, columnId) => {\n  try {\n    const res = await axios.post(\n      `/boards/${boardId}/columns/${columnId}/tasks`,\n      data\n    );\n\n    return res;\n  } catch (e) {\n    console.log('e.message', e.message);\n  }\n};\n","import { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport sprite from '../../images/sprite.svg';\nimport { formatDate } from 'utils.js/formatDate';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './calendar.css';\nimport {\n  Form,\n  FormText,\n  FromInput,\n  FormTextarea,\n  RadioGroup,\n  RadioButton,\n  RadioLabel,\n  Wrap,\n  Text,\n  CalendarWrapp,\n  CalendarText,\n  CalendarArrow,\n  CustomDialog,\n  CloseButton,\n} from './CardPopUp.styled';\n\nimport { CustomButton } from 'components/Button/CustomButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { updateTask } from 'taskServices/updateTask';\nimport { addTask } from 'taskServices/addTask';\n\nexport const CardPopUp = ({\n  isOpen,\n  onClose,\n  boardId,\n  columnId,\n  setTasks,\n  task,\n}) => {\n  const {\n    _id: taskId,\n    title,\n    description,\n    priority,\n    deadline,\n  } = task\n    ? { ...task }\n    : {\n        _id: null,\n        title: '',\n        description: '',\n        priority: 'without',\n        deadline: new Date(),\n      };\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    reset,\n    formState: { errors },\n  } = useForm({ defaultValues: { title, description, priority, deadline } });\n\n  const onSubmit = async data => {\n    if (task) {\n      const res = await updateTask(boardId, columnId, taskId, data);\n\n      setTasks(p => {\n        return p.map(task => {\n          if (task._id === res.data.task._id) {\n            return res.data.task;\n          }\n          return task;\n        });\n      });\n    } else {\n      const res = await addTask(data, boardId, columnId);\n\n      setTasks(s => {\n        return [...s, res.data.task];\n      });\n    }\n    reset();\n    onClose();\n  };\n  const [unixFromat, setUnixFormat] = useState(\n    new Date(new Date().toUTCString()).getTime()\n  );\n\n  const [dateBtn, setDateBtn] = useState(new Date(deadline));\n  const [showDatePicker, setShowDatePicker] = useState(false);\n\n  const handleDateInputChange = date => {\n    const UTC = date.toUTCString();\n    const UNIX = new Date(UTC).getTime();\n    setDateBtn(date);\n    setUnixFormat(UNIX);\n    setValue('deadline', UNIX.toString());\n    setShowDatePicker(false);\n  };\n  const toggleDatePicker = () => {\n    setShowDatePicker(prevState => !prevState);\n  };\n  return (\n    <CustomDialog open={isOpen} onClose={onClose}>\n      <CloseButton type=\"button\" onClick={onClose}>\n        <CloseIcon sx={{ fontSize: 'medium' }} style={{ marginTop: '14px' }} />\n      </CloseButton>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        {!task && <FormText>{'Add card'}</FormText>}\n        {task && <FormText>{'Edit card'}</FormText>}\n        {errors?.title && (\n          <p style={{ color: 'red' }}>{errors?.title.message}</p>\n        )}\n        <FromInput\n          {...register('title', {\n            minLength: 3,\n            required: 'This field is required, at least 3 characters!',\n          })}\n          placeholder=\"Title\"\n        />\n\n        {errors?.description && (\n          <p style={{ color: 'red' }}>{errors?.description.message}</p>\n        )}\n        <FormTextarea\n          placeholder=\"Description\"\n          {...register('description', {\n            minLength: 3,\n            required: 'This field is required, at least 3 characters!',\n          })}\n        ></FormTextarea>\n\n        <Text>Label color</Text>\n        <RadioGroup>\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"low\"\n              {...register('priority')}\n              value=\"low\"\n            />\n            <RadioLabel\n              htmlFor=\"low\"\n              value=\"low\"\n              checked={register('priority').value === 'low'}\n            />\n          </Wrap>\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"medium\"\n              {...register('priority')}\n              value=\"medium\"\n            />\n            <RadioLabel\n              htmlFor=\"medium\"\n              value=\"medium\"\n              checked={register('priority').value === 'medium'}\n            />\n          </Wrap>\n\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"high\"\n              {...register('priority')}\n              value=\"high\"\n            />\n            <RadioLabel\n              htmlFor=\"high\"\n              value=\"high\"\n              checked={register('priority').value === 'high'}\n            />\n          </Wrap>\n\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"without\"\n              {...register('priority', { required: false })}\n              value=\"without\"\n              checked={true}\n            />\n            <RadioLabel\n              htmlFor=\"without\"\n              value=\"without\"\n              checked={register('priority').value === 'without'}\n            />\n          </Wrap>\n        </RadioGroup>\n        <Text>Deadline</Text>\n        <CalendarWrapp onClick={toggleDatePicker}>\n          <CalendarText>{formatDate(dateBtn)}</CalendarText>\n          <CalendarArrow\n            style={{ width: 18, height: 18 }}\n            aria-label=\"open theme select icon\"\n          >\n            <use href={sprite + '#icon-arrow-down'}></use>\n          </CalendarArrow>\n        </CalendarWrapp>\n        <input\n          {...register('deadline', { value: unixFromat.toString() })}\n          style={{ display: 'none' }}\n        />\n        {showDatePicker && (\n          <DatePicker\n            selected={new Date()}\n            onChange={handleDateInputChange}\n            dateFormat=\"dd/MM/yyyy\"\n            inline\n            minDate={new Date()}\n          />\n        )}\n\n        {task && <CustomButton type=\"submit\">{'Edit'}</CustomButton>}\n        {!task && <CustomButton type=\"submit\">{'Add'}</CustomButton>}\n      </Form>\n    </CustomDialog>\n  );\n};\n","export const dateFormatDedline = deadline => {\n  const seconds = new Date(deadline);\n  const day = seconds.getDate();\n  const month = seconds.getMonth() + 1;\n  const monthFormat = month < 10 ? `0${month}` : `${month}`;\n\n  const year = seconds.getFullYear();\n  return `${day}/${monthFormat}/${year}`;\n};\n","import axios from 'axios';\n\nexport const deleteTask = async (boardId, columnId, taskId) => {\n  try {\n    await axios.delete(\n      `/boards/${boardId}/columns/${columnId}/tasks/${taskId}`\n    );\n    return true;\n  } catch (e) {\n    console.log('e.message', e.message);\n  }\n};\n","import styled from 'styled-components';\n\n// import { Dialog } from '@mui/material';\n\n// export const CustomDialog = styled(Dialog)({\n//   '& .MuiPaper-root': {\n//     backgroundColor: 'var(--themeListBgColor)',\n//     maxWidth: '350px',\n//     padding: '24px',\n//     margin: '0px',\n//     border: '1px solid var(--modalBorderColor)',\n//     borderRadius: '8px',\n//     overflow: 'hidden',\n//   },\n\n//   '& .MuiDialogContent-root': {\n//     padding: '0px',\n//   },\n// });\n\n// export const CloseButton = styled.button`\n//   position: absolute;\n//   top: 0;\n//   right: 0;\n//   padding: 7px;\n//   margin-right: 14px;\n//   /* font-size: 10px; */\n//   line-height: 0;\n//   color: var(--primaryTextColor);\n//   /* color: red; */\n//   border: none;\n//   background-color: transparent;\n//   cursor: pointer;\n// `;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding-top: 14px;\n  border-top: 1px solid var(--modalGorizontalBorderColor);\n`;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  /* color: var(--primaryTextColor); */\n  color: red;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background: inherit;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  text-decoration-line: underline;\n\n  /* color: var(--popupTextColor); */\n  color: red;\n\n  cursor: pointer;\n`;\n","import axios from 'axios';\n\nexport const changeOwnerTask = async (boardId, columnId, taskId, data) => {\n  try {\n    const res = await axios.put(\n      `/boards/${boardId}/columns/${columnId}/tasks/${taskId} `,\n      data\n    );\n    return res;\n  } catch (e) {\n    console.log('e.message', e.message);\n  }\n};\n","import axios from 'axios';\n\nexport const fetchTasks = async (boardId, columnId) => {\n  try {\n    const { data } = await axios.get(\n      `/boards/${boardId}/columns/${columnId}/tasks`\n    );\n    return data;\n  } catch (e) {\n    console.log('e.message', e.message);\n  }\n};\n","import { useDispatch } from 'react-redux';\nimport {\n  Title,\n  Container,\n  Button,\n  //   CustomDialog,\n} from './ProjectOfficePopUpCardColumn.styled';\nimport { changeOwnerTask } from 'taskServices/changeOwnerTask';\nimport { getColumnsForBoard } from 'redux/dashboards/operation';\nimport { fetchTasks } from 'taskServices/fetchTask';\n\nexport const ProjectOfficePopUpCardColumn = ({\n  columns,\n  isOpenPopUp,\n  handleTogglePopUp,\n  task,\n  columnId,\n  boardId,\n  setTasks,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleChangeOnerTask = async newOwner => {\n    const { deadline, description, priority, title } = task;\n    await changeOwnerTask(boardId, columnId, task._id.toString(), {\n      deadline,\n      description,\n      priority,\n      title,\n      owner: newOwner,\n    });\n\n    await dispatch(getColumnsForBoard(boardId));\n    const { tasks } = await fetchTasks(boardId, columnId);\n    setTasks(tasks);\n  };\n\n  return (\n    <>\n      {/* <CustomDialog open={isOpenPopUp} onClose={handleTogglePopUp}> */}\n      <Container>\n        <ul>\n          {columns.map(column => {\n            if (column._id === columnId) {\n              return null;\n            }\n            return (\n              <li key={column._id}>\n                <Container>\n                  <Title>{column.title}</Title>\n                  <Button\n                    type=\"button\"\n                    onClick={() => handleChangeOnerTask(column._id)}\n                  >\n                    Click me\n                  </Button>\n                </Container>\n              </li>\n            );\n          })}\n        </ul>\n      </Container>\n      {/* </CustomDialog> */}\n    </>\n  );\n};\n","import {\n  CardActionsStyled,\n  CardFooterStyled,\n  CardIconsWrapper,\n} from '../ProjectOfficeStyle';\nimport CardContent from '@mui/material/CardContent';\nimport { Button, CardActionArea } from '@mui/material';\nimport {\n  CardStyled,\n  CardTitle,\n  CardText,\n  CardFooterTitle,\n  DividerStyled,\n  WrapperFooter,\n  WrapperText,\n  StatusWrapper,\n  StatusStyled,\n  SvgIconsStyled,\n} from './ProjectOfficeCardItem.styled';\n\nimport { useState } from 'react';\nimport { CardPopUp } from 'components/CardPopUp/CardPopUp';\n\nimport { dateFormatDedline } from 'utils/dateFormatDedline';\nimport { deleteTask } from 'taskServices/deleteTask';\nimport sprite from '../../../images/sprite.svg';\nimport { ProjectOfficePopUpCardColumn } from '../ProjectOfficePopUpCardColumn/ProjectOfficePopUpCardColumn';\nimport { useSelector } from 'react-redux';\nimport { selectColumnsForBoard } from 'redux/dashboards/selectors';\n\nconst ProjectOfficeCardItem = ({ task, boardId, columnId, setTasks }) => {\n  const { _id: taskId, title, description, priority, deadline } = task;\n  console.log(deadline)\n\n  const columns = useSelector(state => selectColumnsForBoard(state, boardId));\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenPopUp, setIsOpenPopUp] = useState(false);\n\n\n  const isDeadLine = () => { \n    const currentTime = new Date();\n    const deadlineTime = new Date(deadline);\n\n    const timeLeft = deadlineTime.getTime() - currentTime.getTime();\n    const hoursLeft = Math.floor(timeLeft / (1000 * 60 * 60));\n\n    return hoursLeft < 24;\n  }\n\n  const isDeadlineTime = isDeadLine();\n\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  const handleTogglePopUp = () => {\n    setIsOpenPopUp(prevstate => !prevstate);\n  };\n\n  const handleDeleteTask = async () => {\n    await deleteTask(boardId, columnId, taskId.toString());\n    setTasks(p => {\n      return p.filter(task => task._id !== taskId);\n    });\n  };\n\n  return (\n    <>\n      <CardStyled key={taskId} priority={priority}>\n        <CardActionArea>\n          <CardContent>\n            <CardTitle component=\"div\">{title}</CardTitle>\n                <CardText>{description}</CardText>\n          </CardContent>\n        </CardActionArea>\n        <CardActionsStyled>\n          <DividerStyled />\n        </CardActionsStyled>\n        <CardFooterStyled>\n          <CardFooterTitle>Priority</CardFooterTitle>\n          <CardFooterTitle>Deadline</CardFooterTitle>\n        </CardFooterStyled>\n\n        <WrapperFooter>\n          <CardFooterStyled>\n            <WrapperText>\n              <StatusWrapper>\n                <StatusStyled priority={priority} />\n                {priority}\n              </StatusWrapper>\n            </WrapperText>\n\n            <WrapperText>{dateFormatDedline(deadline)}</WrapperText>\n          </CardFooterStyled>\n\n          <CardIconsWrapper>\n            {isDeadlineTime && <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-bell`}></use>\n            </SvgIconsStyled>}\n          \n            <Button\n              sx={{ padding: 0, width: '20px', minWidth: '0' }}\n              onClick={handleTogglePopUp}\n            >\n            <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-arrow-circle-broken-right`}></use>\n            </SvgIconsStyled>\n            </Button>\n            <Button\n            onClick={handleToggleModal}\n              sx={{ padding: 0, width: '20px', minWidth: '0', '&.MuiButtonBase-root.MuiButton-root:hover': { backgroundColor: '#121212'} }}\n            >\n            <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-pencil`}></use>\n            </SvgIconsStyled>\n            </Button>\n            <Button\n              onClick={handleDeleteTask}\n              sx={{ padding: 0, width: '20px', minWidth: '0', '&.MuiButtonBase-root.MuiButton-root:hover': { backgroundColor: '#121212'}  }}\n            >\n            <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-trash`}></use>\n            </SvgIconsStyled>\n            </Button>\n          </CardIconsWrapper>\n        </WrapperFooter>\n      </CardStyled>\n      {isOpen && (\n        <CardPopUp\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          columnId={columnId}\n          boardId={boardId}\n          setTasks={setTasks}\n          task={task}\n        />\n      )}\n      {isOpenPopUp && (\n        <ProjectOfficePopUpCardColumn\n          isOpenPopUp={isOpenPopUp}\n          onClose={handleTogglePopUp}\n          columns={columns}\n          columnId={columnId}\n          boardId={boardId}\n          setTasks={setTasks}\n          task={task}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ProjectOfficeCardItem;\n","import styled from 'styled-components';\n\nexport const ActionsButton = styled.div`\n    background: var(--actionsButton);\n    width: 334px; \n    height: 56px;\n    border-radius: 8px;\n    padding: 20px;\n    display: flex; \n    justify-content: space-between;\n`;\n\nexport const StyledTitle = styled.p`\n    color: var(--primaryTextColor);\n    font-weight: 500; \n    font-size: 14px;\n    line-height: 21px;\n`;\n\nexport const IconButtonWrapper = styled.button`\n    background: inherit;\n    border: none;\n    margin-right: -8px;\n    cursor: pointer;\n`;\n\n","import { useState } from 'react';\nimport {\n  Wrapper,\n  CardButtonStyled,\n} from '../ProjectOfficeStyle';\nimport { CardPopUp } from 'components/CardPopUp/CardPopUp';\nimport { CustomButton } from 'components/Button/CustomButton';\n\nconst ProjectCardAddButton = ({ columnId, boardId, setTasks, task }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        {/* {Array.from(Array(3)).map((_, index) => ( */}\n        {/* <CardButtonStyled direction=\"row\" spacing={2} key={index}> */}\n        <CardButtonStyled direction=\"row\" spacing={2}>\n            <CustomButton isWhiteBackground={false} onClick={handleToggleModal}>\n            Add another card\n            </CustomButton>\n          {/* <ButtonStyled\n            startIcon={<AddIconStyled />}\n            onClick={handleToggleModal}\n          >\n            Add another card\n          </ButtonStyled> */}\n        </CardButtonStyled>\n        {/* ))} */}\n      </Wrapper>\n      {isOpen && (\n        <CardPopUp\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          columnId={columnId}\n          boardId={boardId}\n          setTasks={setTasks}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ProjectCardAddButton;\n","import { TextField, Dialog } from \"@mui/material\";\n// import { styled } from '@mui/system';\nimport styled from 'styled-components';\n\n\nexport const StyleInput = styled(TextField)`\n  /* background-color: var(--currentLinkBgColor); */\n  max-width: 302px;\n  margin-bottom: 24px;\n\n        & label.Mui-focused {\n          color: #fff;\n        };\n\n  & .MuiInputBase-input {\n          padding: 14px 16px;\n          color: var(--primaryTextColor);\n          background-color: var(--currentLinkBgColor);\n\n        };\n\n        & .MuiFormLabel-root {\n          color: #fff;\n        };\n\n  & .MuiInputBase-root {\n          opacity: 0.4;\n    border-radius: 8px;\n              margin-bottom: 24px;\n    & :hover {\n      opacity: 1.0;\n    };\n\n    & :focus {\n      opacity: 1.0;\n    }\n        };\n\n        & .MuiOutlinedInput-root {\n          & fieldset {\n            border-color: #BEDBB0;\n          };\n          & :hover fieldset {\n            border-color: #BEDBB0;\n          };\n          & .Mui-focused fieldset {\n            border-color: #BEDBB0;\n          };\n        };\n`\n\nexport const CustomDialog = styled(Dialog)`\n  \n  & .MuiPaper-root {\n    background-color: var(--themeListBgColor);\n    max-width: 350px;\n    padding: 24px;\n  margin: 0px;\n  };\n\n  & .MuiDialogContent-root {\n    padding: 0px;\n  }\n\n`","import { DialogTitle, Box, DialogContent } from \"@mui/material\";\nimport { CustomButton } from \"../../Button/CustomButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CustomDialog, StyleInput } from \"./ModalColumn.styled\";\nimport { useState } from \"react\";\n\nexport const ModalColumn = ({ isOpen, onClose, type = \"create\", initialState = '', onRemove, onUpdate }) => {\n  const [title, setTitle] = useState(initialState);\n\n  const reset = () => {\n    setTitle('');\n  }\n\n  const handleClose = () => { \n    reset();\n    onClose();\n  }\n\n  const handleChange = ({ target }) => { \n    setTitle(target.value);\n  }\n\n  const handleButtonClick = (title) => { \n    if (type === \"create\") { \n      onRemove(title);\n      handleClose();\n    }\n    if (type === \"edit\") {\n      console.log(title)\n      onUpdate(title);\n      handleClose();\n    }\n\n    \n  }\n\n\n  return (\n    <CustomDialog\n      open={isOpen}\n      fullWidth={true}\n      onClose={handleClose}\n      position=\"relative\"\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        marginBottom=\"24px\"\n      >\n        <DialogTitle\n          sx={{\n            color: \"var(--primaryTextColor)\",\n            padding: \"0\",\n            fontFamily: \"Poppins, sans-serif\",\n            fontSize: \"18px\",\n            lineHeight: \"1.5\",\n          }}\n        >\n          {type === 'create' ? 'Add Column' : 'Edit Column'}\n        </DialogTitle>\n        <CloseIcon\n          onClick={handleClose}\n          sx={{\n            color: \"var(--primaryTextColor)\",\n            position: \"absolute\",\n            top: \"14px\",\n            right: \"14px\",\n            height: \"18px\",\n            width: \"18px\",\n            cursor: \"pointer\",\n          }}\n        />\n      </Box>\n      <DialogContent>\n        <StyleInput\n          autoFocus\n          id=\"title\"\n          placeholder=\"Title\"\n          name=\"title\"\n          type=\"text\"\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: false }}\n          value={title}\n          onChange={handleChange}\n        />\n        <CustomButton onClick={() => handleButtonClick(title)} style={{height: '49px !important'}}>\n          {type === 'create' ? 'Add' : 'Edit'}\n        </CustomButton>\n      </DialogContent>\n    </CustomDialog>\n  );\n};","import { Wrapper, ActionsIconsButton } from '../ProjectOfficeStyle';\nimport ProjectOfficeCardItem from '../ProjectOfficeCardItem/ProjectOfficeCardItem';\nimport {\n  ActionsButton,\n  IconButtonWrapper,\n  StyledTitle,\n} from './OfficeItemStyle.styled';\nimport { useEffect, useState } from 'react';\n\nimport ProjectCardAddButton from '../ProjectCardAddButton/ProjectCardAddButton';\n\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\nimport { fetchTasks } from 'taskServices/fetchTask';\nimport sprite from '../../../images/sprite.svg';\nimport {\n  ScrollStyled,\n  SvgIconsStyled,\n} from '../ProjectOfficeCardItem/ProjectOfficeCardItem.styled';\n\nimport { useSelector } from 'react-redux';\n\nconst ProjectOfficeItem = ({\n  column,\n  boardId,\n  onDelete,\n  handleEditColumnName,\n}) => {\n  const { title, _id: columnId } = column;\n\n  const [tasks, setTasks] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const filter = useSelector(state => state.filter);\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleUpdate = newName => {\n    console.log(boardId);\n    console.log(columnId);\n    console.log(newName);\n    handleEditColumnName({ boardId, columnId, title: newName });\n  };\n\n  useEffect(() => {\n    const fetchTasksApi = async (boardId, columnId) => {\n      const data = await fetchTasks(boardId, columnId);\n\n      const filteredTasks = data.tasks.filter(task => {\n        if (filter) {\n          return task.priority === filter;\n        }\n        return true;\n      });\n      setTasks(filteredTasks);\n    };\n    fetchTasksApi(boardId, columnId);\n  }, [boardId, columnId, column, filter]);\n\n  return (\n    <ScrollStyled>\n      <Wrapper>\n        <ActionsButton key={Date.now()}>\n          <StyledTitle>{title}</StyledTitle>\n          <ActionsIconsButton>\n            <IconButtonWrapper type=\"button\" onClick={handleToggle}>\n              <SvgIconsStyled\n                aria-label=\"close modal select icon\"\n                width={16}\n                height={16}\n              >\n                <use href={`${sprite}#icon-pencil`}></use>\n              </SvgIconsStyled>\n            </IconButtonWrapper>\n            <IconButtonWrapper\n              type=\"button\"\n              onClick={() => onDelete(boardId, columnId)}\n            >\n              <SvgIconsStyled\n                aria-label=\"close modal select icon\"\n                width={16}\n                height={16}\n              >\n                <use href={`${sprite}#icon-trash`}></use>\n              </SvgIconsStyled>\n            </IconButtonWrapper>\n          </ActionsIconsButton>\n        </ActionsButton>\n      </Wrapper>\n      <div style={{ overflow: 'auto' }}>\n        {tasks &&\n          tasks.map(task => (\n            <ProjectOfficeCardItem\n              key={task._id}\n              task={task}\n              columnId={columnId}\n              boardId={boardId}\n              setTasks={setTasks}\n            />\n          ))}\n      </div>\n      <div style={{ marginTop: '10px' }}>\n        <ProjectCardAddButton\n          columnId={columnId}\n          boardId={boardId}\n          setTasks={setTasks}\n        />\n      </div>\n      <ModalColumn\n        isOpen={isOpen}\n        onClose={handleToggle}\n        type=\"edit\"\n        onUpdate={handleUpdate}\n      />\n    </ScrollStyled>\n  );\n};\n\nexport default ProjectOfficeItem;\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 20px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nexport const FilterText = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  cursor: pointer;\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--primaryTextColor);\n`;\n\nexport const BtnFilter = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n\n  width: 64px;\n  height: 20px;\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  border: none;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nexport const PopUpFilterWrapper = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  z-index: 999;\n`;\n\nexport const PopUpFilterContent = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background: #fff;\n  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n  padding: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const BgContainer = styled.div``;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0;\n`;\n\nexport const ButtonContainer = styled.div`\n  max-width: 252px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n\n  box-sizing: border-box;\n  padding: 14px 0;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  img {\n    display: block;\n    max-width: 100%;\n    max-height: 100%;\n    border-radius: 6px;\n  }\n\n  &.active {\n    border: 2px solid rgba(190, 219, 176, 1);\n    /* transform: scale(0.95); */\n  }\n`;\n\nexport const ButtonNoneBg = styled.button`\n  width: 28px;\n  height: 28px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 6px;\n  background-color: var(--defaultAvatarBgColor);\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-image: url();\n  background-size: cover;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--defaultImgColor);\n  fill: none;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  getColumnsForBoard,\n  updateUserBoard,\n} from 'redux/dashboards/operation';\n\nimport sprite from '../../../images/sprite.svg';\nimport {\n  Button,\n  ButtonNoneBg,\n  ButtonContainer,\n  Title,\n  SvgIcons,\n  BgContainer,\n} from './BgChange.styled';\nimport { images } from '../../../utils/bgImgPreview';\n\nconst buttonsImg = images;\n\nexport const BgChange = React.memo(() => {\n  const [loadedImages, setLoadedImages] = useState([]);\n\n  const dispatch = useDispatch();\n  const { boardName } = useParams();\n\n  const board = useSelector(state =>\n    state.dashboard.dashboards.find(item => item._id === boardName)\n  );\n\n  const backgroundId = board.background.toString();\n\n  useEffect(() => {\n    const loadImage = async imageUrl => {\n      try {\n        const response = await fetch(imageUrl);\n        if (response.ok) {\n          return await response.blob();\n        }\n        throw new Error('Image loading failed.');\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const loadImages = async () => {\n      const promises = buttonsImg.map(button =>\n        loadImage(button.backgroundImage)\n      );\n\n      try {\n        const results = await Promise.allSettled(promises);\n        const images = results\n          .filter(result => result.status === 'fulfilled')\n          .map(result => result.value);\n        setLoadedImages(images);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    loadImages();\n  }, []);\n\n  const handleButtonClick = async id => {\n    const data = {\n      title: board.title,\n      dashboardIcon: board.dashboardIcon,\n      background: `${id}`,\n    };\n\n    await dispatch(updateUserBoard({ boardId: board._id, board: data }));\n    await dispatch(getColumnsForBoard(boardName));\n  };\n\n  return (\n    <BgContainer>\n      <Title>Background</Title>\n      <ButtonContainer>\n        <ButtonNoneBg type=\"button\" onClick={() => handleButtonClick(0)}>\n          <SvgIcons width={18} height={18}>\n            <use href={sprite + '#icon-bg-default'} />\n          </SvgIcons>\n        </ButtonNoneBg>\n        {buttonsImg.map(button => (\n          <Button\n            key={button.id}\n            type=\"button\"\n            style={{\n              backgroundImage: `url(${button.backgroundImage})`,\n              backgroundSize: 'cover',\n            }}\n            onClick={() => handleButtonClick(button.id)}\n            className={\n              backgroundId.toString() === button.id.toString() ? 'active' : ''\n            }\n          >\n            {loadedImages[button.id] && (\n              <img\n                srcSet={`${button.backgroundImage} 1x, ${button.retinaBackgroundImage} 2x`}\n                alt=\"\"\n              />\n            )}\n          </Button>\n        ))}\n      </ButtonContainer>\n    </BgContainer>\n  );\n});\n","import styled from 'styled-components';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nexport const RadioGr = styled(RadioGroup)`\n  margin: 8px 0 0 32px;\n`;\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding-top: 14px;\n  border-top: 1px solid var(--modalGorizontalBorderColor);\n`;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const BtnShowAll = styled.button`\n  border: none;\n  background: inherit;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  text-decoration-line: underline;\n\n  color: var(--popupTextColor);\n`;\n\nexport const radioButtons = [\n  {\n    value: 'without',\n    label: 'Without priority',\n    color: '#5B5B5B',\n    checkedColor: '#5B5B5B',\n    buttonColor: '#5B5B5B',\n  },\n  {\n    value: 'low',\n    label: 'Low',\n    color: '#5B5B5B',\n    checkedColor: '#8FA1D0',\n    buttonColor: '#8FA1D0',\n  },\n  {\n    value: 'medium',\n    label: 'Medium',\n    color: '#5B5B5B',\n    checkedColor: '#E09CB5',\n    buttonColor: '#E09CB5',\n  },\n  {\n    value: 'high',\n    label: 'High',\n    color: '#5B5B5B',\n    checkedColor: '#BEDBB0',\n    buttonColor: '#BEDBB0',\n  },\n];\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../../redux/filter/filterSlice';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport {\n  Title,\n  FilterContainer,\n  BtnShowAll,\n  RadioGr,\n  radioButtons,\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const [selectedValue, setSelectedValue] = useState('');\n  const dispatch = useDispatch();\n\n  const primaryTextColor = `var(--primaryTextColor)`;\n\n  const handleReset = () => {\n    setSelectedValue('');\n  };\n\n  const handleShowAll = () => {\n    console.log('Show all selected');\n    dispatch(setFilter(null));\n    handleReset();\n  };\n\n  const handleFilterChange = event => {\n    const { value } = event.target;\n    console.log('Selected filter:', value);\n    setSelectedValue(value);\n    dispatch(setFilter(value));\n  };\n\n  const handleRadioButtonChange = event => {\n    const { value } = event.target;\n    console.log(`Selected priority: ${value}`);\n    setSelectedValue(value);\n  };\n\n  return (\n    <>\n      <FilterContainer>\n        <Title>Label color</Title>\n        <BtnShowAll type=\"button\" onClick={handleShowAll}>\n          Show all\n        </BtnShowAll>\n      </FilterContainer>\n      <FormControl>\n        <RadioGr\n          aria-labelledby=\"priority\"\n          name=\"radio-buttons-group\"\n          value={selectedValue}\n          onChange={handleRadioButtonChange}\n        >\n          {radioButtons.map(button => (\n            <FormControlLabel\n              key={button.value}\n              sx={{\n                color: button.color,\n                '& .Mui-checked.MuiRadio-root': {\n                  color: button.checkedColor,\n                },\n                '& .MuiSvgIcon-root': {\n                  fontSize: 14,\n                },\n                '& .MuiFormControlLabel-label': {\n                  fontSize: 12,\n                },\n                '& .MuiButtonBase-root.MuiRadio-root': {\n                  color: button.checkedColor,\n                  padding: 0,\n                  backgroundColor:\n                    selectedValue === button.value\n                      ? 'transparent'\n                      : button.buttonColor,\n                },\n                '& .MuiTypography-root': {\n                  marginLeft: 1,\n                  color:\n                    selectedValue === button.value\n                      ? primaryTextColor\n                      : 'inherit',\n                },\n              }}\n              value={button.value}\n              control={<Radio />}\n              label={button.label}\n              onChange={handleFilterChange}\n            />\n          ))}\n        </RadioGr>\n      </FormControl>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  position: relative;\n\n  width: 302px;\n  height: auto;\n\n  box-sizing: border-box;\n\n  border-radius: 8px;\n  border: 1px solid var(--modalBorderColor);\n  background: var(--themeListBgColor);\n  padding: 24px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.05);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  right: 14px;\n  top: 14px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 16px;\n  height: 16px;\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  border: none;\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--primaryTextColor);\n`;\n\nexport const ModalHeader = styled.h4`\n  color: var(--primaryTextColor);\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  padding-bottom: 14px;\n  border-bottom: 1px solid var(--modalGorizontalBorderColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const Wraper = styled.div`\n  position: absolute;\n  z-index: 999;\n  top: 32px;\n  right: 0;\n`;\n","import React, { useRef } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport { BgChange } from './BgChange/BgChange';\nimport { Filter } from './Filter/Filter';\nimport {\n  ModalContainer,\n  ModalHeader,\n  CloseButton,\n  SvgIcons,\n  Wraper,\n} from './PopUpFilter.styled';\n\nexport const PopUpFilter = ({ onClose }) => {\n  const modalRef = useRef(null);\n\n  const handleClickOutside = event => {\n    if (modalRef.current && !modalRef.current.contains(event.target)) {\n      onClose();\n    }\n  };\n\n  return (\n    <Wraper onClick={handleClickOutside}>\n      <ModalContainer ref={modalRef}>\n        <CloseButton type=\"button\" onClick={onClose}>\n          <SvgIcons aria-label=\"close modal select icon\" width={18} height={18}>\n            <use href={`${sprite}#icon-x-close`}></use>\n          </SvgIcons>\n        </CloseButton>\n        <ModalHeader>Filters</ModalHeader>\n        <BgChange />\n        <Filter />\n      </ModalContainer>\n    </Wraper>\n  );\n};\n","import React, { useState } from 'react';\nimport { Wrapper } from '../ProjectOfficeStyle';\nimport { BtnFilter, Title, SvgIcons, FilterText } from './ProjectOfficeHeaderStyle';\nimport sprite from '../../../images/sprite.svg';\nimport { PopUpFilter } from 'components/PopUpFilter/PopUpFilter';\n\nconst ProjectOfficeHeader = () => {\n  const [isPopUpVisible, setPopUpVisible] = useState(false);\n\n  const togglePopUp = () => {\n    setPopUpVisible(!isPopUpVisible);\n  };\n\n  const handleClosePopUp = () => {\n    setPopUpVisible(false);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Title>Project office</Title>\n\n        <BtnFilter type=\"button\" onClick={togglePopUp}>\n          <SvgIcons aria-label=\"filter icon\" width={18} height={18}>\n            <svg>\n              <use xlinkHref={`${sprite}#icon-filter`} />\n            </svg>\n          </SvgIcons>\n          <FilterText>Filters</FilterText>\n        </BtnFilter>\n        {isPopUpVisible && <PopUpFilter onClose={handleClosePopUp} />}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default ProjectOfficeHeader;\n","import { CustomButton } from 'components/Button/CustomButton';\nimport { useState } from 'react';\n\nimport { StackWrapper } from '../ProjectOfficeStyle';\n\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\n// import { useParams } from 'react-router-dom';\n\nconst AddColumnButton = ({ handleAddColumn }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  // const columns = [\n  //   { columnName: 'one', id: 1 },\n  //   { columnName: 'two', id: 2 },\n  // ];\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  // const handleCreateColumn = (columnName) => {\n  //   //   const newArr = [...columns, { id: 4, columnName: columnName }];\n  //     console.log(columns)\n  // }\n\n  return (\n    <>\n      <StackWrapper direction=\"row\" spacing={2}>\n        <CustomButton isWhiteBackground={true} onClick={handleToggleModal}>\n        Add another column\n        </CustomButton>\n        <ModalColumn\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          onRemove={handleAddColumn}\n        />\n        {/* <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another column\n            </ButtonStyled> */}\n      </StackWrapper>\n    </>\n  );\n};\n\nexport default AddColumnButton;\n","import styled from 'styled-components';\n\nconst baseBgUrl =\n  'https://res.cloudinary.com/dxhypjavs/image/upload/v1687378707/command_project_task_pro_images/';\n\nexport const BackgroundContainer = styled.div`\n  /* background-color: red; */\n\n  height: calc(100% - 68px);\n\n  @media screen and (max-width: 768px) {\n    min-height: 956px;\n  }\n  @media screen and (max-width: 375px) {\n    min-height: 752px;\n  }\n\n  background-size: cover;\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-color: ${props => (props.bgnumber ? 'initial' : 'transparent')};\n\n  @media screen and (max-width: 374px) {\n    background-image: ${props =>\n      `url(${baseBgUrl}mobile/bg-image-${props.bgnumber}.jpg)`};\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (max-width: 374px),\n    screen and (min-resolution: 192dpi) and (max-width: 374px),\n    screen and (min-resolution: 2dppx) and (max-width: 374px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}mobile/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n\n  @media screen and (min-width: 375px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}tablet/bg-image-${props.bgnumber}.jpg)`};\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 375px),\n    screen and (min-resolution: 192dpi) and (min-width: 375px),\n    screen and (min-resolution: 2dppx) and (min-width: 375px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}tablet/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n\n  @media screen and (min-width: 768px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}desktop/bg-image-${props.bgnumber}.jpg)`};\n  }\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 768px),\n    screen and (min-resolution: 192dpi) and (min-width: 768px),\n    screen and (min-resolution: 2dppx) and (min-width: 768px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}desktop/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n`;\n","// import { useState } from 'react';\n\nimport ProjectOfficeItem from './ProjectOfficeItem/ProjectOfficeItem';\nimport { useEffect } from 'react';\n// import { getColumns } from 'services/fetchColumn';\nimport ProjectOfficeHeader from './ProjectOfficeHeader/ProjectOfficeHeader';\nimport AddColumnButton from './AddColumnsButton/AddColumnsButton';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addColumn,\n  deleteColumn,\n  getColumnsForBoard,\n  updateColumn,\n} from 'redux/dashboards/operation';\nimport {\n  selectColumnsForBoard,\n  selectDashboards,\n} from 'redux/dashboards/selectors';\nimport { Box } from '@mui/material';\nimport { BackgroundContainer } from './ProjectOfficeBgContainer.styled';\n\nconst ProjectOffice = () => {\n  const isLoading = useSelector(state => state.dashboard.isLoading);\n  const { boardName } = useParams();\n  const columns = useSelector(state => selectColumnsForBoard(state, boardName));\n  const dashboards = useSelector(selectDashboards);\n  const currentBoard = dashboards.find(board => board._id === boardName);\n  const dispatch = useDispatch();\n\n  const handleDeletecolumn = async (boardId, columnId) => {\n    await dispatch(deleteColumn({ boardId, columnId }));\n    dispatch(getColumnsForBoard(boardName));\n  };\n\n  const handleEditColumnName = async ({ boardId, columnId, title }) => {\n    await dispatch(updateColumn({ boardId, columnId, title }));\n    console.log('UPADATE NAME NEW');\n    dispatch(getColumnsForBoard(boardName));\n  };\n\n  const handleAddColumn = columnName => {\n    dispatch(addColumn({ title: columnName, boardId: boardName }));\n  };\n\n  useEffect(() => {\n    dispatch(getColumnsForBoard(boardName));\n  }, [dispatch, boardName]);\n\n  return (\n    // <Box sx={{ marginLeft: '20%' }}>\n    <BackgroundContainer bgnumber={currentBoard ? currentBoard.background : ''}>\n      <Box sx={{ marginLeft: 3 }}>\n        <ProjectOfficeHeader />\n        {!isLoading && <AddColumnButton handleAddColumn={handleAddColumn} />}\n        {/* <div style={{ display: 'flex', flexDirection: 'row' }}> */}\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            gap: '10px',\n          }}\n        >\n          {/* {columns ? (\n            columns.map(column => (\n              <ProjectOfficeItem\n                column={column}\n                boardId={boardName}\n                key={column._id}\n                onDelete={handleDeletecolumn}\n                handleEditColumnName={handleEditColumnName}\n              />\n            ))\n          ) : (\n            <p>Loading...</p>\n          )} */}\n\n          {columns &&\n            columns.map(column => (\n              <ProjectOfficeItem\n                column={column}\n                boardId={boardName}\n                key={column._id}\n                onDelete={handleDeletecolumn}\n                handleEditColumnName={handleEditColumnName}\n              />\n            ))}\n        </div>\n        {/* </div> */}\n        {/* <ProjectOfficeItem column={columns} /> */}\n      </Box>\n    </BackgroundContainer>\n  );\n};\n\nexport default ProjectOffice;\n","import styled from 'styled-components';\n\nexport const DefaultWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 200px;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  @media (min-width: 375px) {\n    min-width: 335px;\n    max-width: 486px;\n  }\n`;\n\nexport const DefaultText = styled.p`\n  font-size: 14px;\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n  text-align: center;\n  color: var(--primaryTextColor);\n`;\n\nexport const AccentText = styled.span`\n  color: var(--greenGreenBlueColor);\n`;\n","import { AccentText, DefaultText, DefaultWrapper } from \"./DefaultScreen.styled\"\n\nexport const DefaultScreen = () => {\n\n    return (\n        \n        <DefaultWrapper>\n            <DefaultText>Before starting your project, it is essential <AccentText>to create a board</AccentText> to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.</DefaultText>\n        </DefaultWrapper>\n    )\n}","import { useEffect } from 'react';\nimport ProjectOffice from '../components/ProjectOffice/ProjectOffice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectDashboards } from 'redux/dashboards/selectors';\nimport { fetchUserDashboards } from 'redux/dashboards/operation';\nimport { DefaultScreen } from 'components/DefaultScreen/DefaultScreen';\n\nconst ScreensPage = () => {\n  const dashboards = useSelector(selectDashboards);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchDashboards = async () => {\n      dispatch(fetchUserDashboards());\n    };\n    fetchDashboards();\n  }, [dispatch]);\n\n  console.log(dashboards);\n  return (\n    <>\n      {dashboards && dashboards.length > 0 ? (\n        <ProjectOffice />\n      ) : (\n        <DefaultScreen />\n      )}\n    </>\n  );\n};\n\nexport default ScreensPage;\n","export const selectDashboards = state => state.dashboard.dashboards;\n\nexport const selectColumnsForBoard = (state, boardId) => {\n  const board = state.dashboard.dashboards.find(board => board._id === boardId);\n  return board ? board.columns : [];\n};\n\nexport const selectCurrentDashboard = state => state.dashboard.currentDashboard;","export const images = [\n  {\n    id: 1,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-1.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-1_2x.jpg',\n  },\n  {\n    id: 2,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-2.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-2_2x.jpg',\n  },\n  {\n    id: 3,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-3.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-3_2x.jpg',\n  },\n  {\n    id: 4,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-4.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-4_2x.jpg',\n  },\n  {\n    id: 5,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-5.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-5_2x.jpg',\n  },\n  {\n    id: 6,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-6.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-6_2x.jpg',\n  },\n  {\n    id: 7,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-7.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-7_2x.jpg',\n  },\n  {\n    id: 8,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-8.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-8_2x.jpg',\n  },\n  {\n    id: 9,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-9.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-9_2x.jpg',\n  },\n  {\n    id: 10,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-10.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-10_2x.jpg',\n  },\n  {\n    id: 11,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-11.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-11_2x.jpg',\n  },\n\n  {\n    id: 12,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-12.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-12_2x.jpg',\n  },\n  {\n    id: 13,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-13.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-13_2x.jpg',\n  },\n  {\n    id: 14,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-14.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-14_2x.jpg',\n  },\n  {\n    id: 15,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-15.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-15_2x.jpg',\n  },\n];"],"names":["Wrapper","styled","position","display","alignItems","justifyContent","paddingTop","marginRight","gap","ActionsIconsButton","flexDirection","CardFooterStyled","flexWrap","height","overflow","paddingRight","paddingLeft","CardIconsWrapper","marginTop","CardActionsStyled","CardActions","StackWrapper","Stack","width","background","borderRadius","marginBottom","CardButtonStyled","Button","color","fontSize","textTransform","AddIcon","CardStyled","_templateObject","_taggedTemplateLiteral","props","priority","CardTitle","_templateObject2","CardText","_templateObject3","CardFooterTitle","_templateObject4","DividerStyled","_templateObject5","WrapperFooter","_templateObject6","WrapperText","_templateObject7","StatusWrapper","_templateObject8","StatusStyled","_templateObject9","SvgIconsStyled","_templateObject10","ScrollStyled","_templateObject11","isSameDay","date1","date2","getDate","getMonth","getFullYear","formatDate","date","today","Date","tomorrow","optionsAllDays","toLocaleDateString","weekday","optionsNearestDays","month","setDate","concat","CustomDialog","Dialog","backgroundColor","maxWidth","padding","margin","border","hoverFocusStyles","css","CloseButton","Form","FormText","FromInput","FormTextarea","RadioGroup","RadioLabel","value","RadioButton","Wrap","Text","_templateObject12","CalendarWrapp","_templateObject13","CalendarText","_templateObject14","CalendarArrow","_templateObject15","updateTask","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","boardId","columnId","taskId","data","res","wrap","_context","prev","next","axios","sent","abrupt","t0","console","log","message","stop","_x","_x2","_x3","_x4","apply","arguments","addTask","CardPopUp","isOpen","onClose","setTasks","task","_ref2","_objectSpread","_id","title","description","deadline","_useForm","useForm","defaultValues","register","handleSubmit","setValue","reset","errors","formState","onSubmit","_ref3","_res","p","map","s","_toConsumableArray","_useState","useState","toUTCString","getTime","_useState2","_slicedToArray","unixFromat","setUnixFormat","_useState3","_useState4","dateBtn","setDateBtn","_useState5","_useState6","showDatePicker","setShowDatePicker","_jsxs","open","children","_jsx","type","onClick","CloseIcon","sx","style","minLength","required","placeholder","id","htmlFor","checked","prevState","href","sprite","toString","DatePicker","selected","onChange","UTC","UNIX","dateFormat","inline","minDate","CustomButton","dateFormatDedline","seconds","day","monthFormat","year","deleteTask","Container","Title","changeOwnerTask","fetchTasks","_yield$axios$get","ProjectOfficePopUpCardColumn","columns","isOpenPopUp","handleTogglePopUp","dispatch","useDispatch","handleChangeOnerTask","newOwner","_yield$fetchTasks","tasks","owner","getColumnsForBoard","_Fragment","column","useSelector","state","selectColumnsForBoard","setIsOpen","setIsOpenPopUp","isDeadlineTime","currentTime","timeLeft","Math","floor","isDeadLine","handleToggleModal","prevstate","handleDeleteTask","filter","CardActionArea","CardContent","component","minWidth","ActionsButton","StyledTitle","IconButtonWrapper","direction","spacing","isWhiteBackground","StyleInput","TextField","ModalColumn","_ref$type","_ref$initialState","initialState","onRemove","onUpdate","setTitle","handleClose","fullWidth","Box","DialogTitle","fontFamily","lineHeight","top","right","cursor","DialogContent","autoFocus","name","variant","InputLabelProps","shrink","target","handleButtonClick","onDelete","handleEditColumnName","handleToggle","useEffect","fetchTasksApi","filteredTasks","now","ProjectOfficeCardItem","ProjectCardAddButton","newName","FilterText","SvgIcons","BtnFilter","BgContainer","ButtonContainer","ButtonNoneBg","buttonsImg","images","BgChange","React","loadedImages","setLoadedImages","boardName","useParams","board","dashboard","dashboards","find","item","backgroundId","loadImage","imageUrl","response","fetch","ok","blob","Error","error","loadImages","_callee2","promises","results","_images","_context2","button","backgroundImage","Promise","allSettled","result","status","_callee3","_context3","dashboardIcon","updateUserBoard","backgroundSize","className","srcSet","retinaBackgroundImage","alt","RadioGr","FilterContainer","BtnShowAll","radioButtons","label","checkedColor","buttonColor","Filter","selectedValue","setSelectedValue","handleFilterChange","event","setFilter","FormControl","FormControlLabel","marginLeft","control","Radio","ModalContainer","ModalHeader","Wraper","PopUpFilter","modalRef","useRef","current","contains","ref","isPopUpVisible","setPopUpVisible","xlinkHref","handleAddColumn","baseBgUrl","BackgroundContainer","bgnumber","isLoading","currentBoard","selectDashboards","handleDeletecolumn","deleteColumn","updateColumn","ProjectOfficeHeader","AddColumnButton","columnName","addColumn","ProjectOfficeItem","DefaultWrapper","DefaultText","AccentText","DefaultScreen","fetchDashboards","fetchUserDashboards","length","ProjectOffice"],"sourceRoot":""}