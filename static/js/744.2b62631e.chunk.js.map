{"version":3,"file":"static/js/744.2b62631e.chunk.js","mappings":"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","sources":["components/Header.jsx","utils.js/regex.js","components/EditProfile/util.js","components/EditProfile/index.jsx","components/Modal/ModalBodyWrapper/index.jsx","components/Modal/ModalHeader/index.jsx","components/Modal/index.jsx","components/NeedHelp/NeedHelp.jsx","components/SideBar.jsx","pages/HomePage.jsx"],"sourcesContent":["import ThemeSelect from './ThemeSelect/ThemeSelect';\n\nexport const Header = () => {\n  return (\n    <div>\n      Header\n      <ThemeSelect />\n    </div>\n  );\n};\n","export const regExpEmail = /^(?=.{1,64}@)[A-Za-z0-9_+-]+(\\.[A-Za-z0-9_+-]+)*@[^-.][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$/;","export const ERegisterFieldName = 'ERegisterFieldName';\nexport const ERegisterFieldEmail = 'ERegisterFieldEmail';\nexport const ERegisterFieldPassword = 'ERegisterFieldPassword';\n\nexport const getDefaultValuesForm = (name, email, password) => {\n  return {\n    [ERegisterFieldName]: name ?? '',\n    [ERegisterFieldEmail]: email ?? '',\n    [ERegisterFieldPassword]: password ?? '',\n  }\n};\n\nconst checkedField = [ERegisterFieldName, ERegisterFieldEmail, ERegisterFieldPassword];\nexport const isAllRequiredFieldsDirty = (dirtyFields) => {\n  return checkedField.every((el) => !!dirtyFields?.[el]);\n};\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { regExpEmail } from '../../utils.js/regex';\nimport {\n  ERegisterFieldEmail,\n  ERegisterFieldName,\n  ERegisterFieldPassword,\n  getDefaultValuesForm,\n  isAllRequiredFieldsDirty,\n} from './util';\nimport './style.css';\n// import { useEffect } from \"react\";\n\nexport const EditProfile = ({ toggle, open, HeaderRender }) => {\n  const [isShowPassword, setIsShowPassword] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, dirtyFields },\n  } = useForm({\n    shouldUnregister: true,\n    mode: 'onChange',\n    defaultValues: getDefaultValuesForm(),\n  });\n\n  const isFetching = false;\n  const isDisabledSubmitBtn =\n    !isAllRequiredFieldsDirty(dirtyFields) ||\n    !!Object.keys(errors).length ||\n    isFetching;\n\n  const togglePass = () => {\n    setIsShowPassword(prev => !prev);\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return (\n    <div className=\"edit-profile-wrapper\">\n      {HeaderRender('Edit profile')}\n      {/* <img></img> */}\n\n      <div className=\"wrapper-input\">\n        <input\n          autoComplete=\"off\"\n          disabled={isFetching}\n          className={errors?.ERegisterFieldName && 'error'}\n          type=\"text\"\n          {...register(ERegisterFieldName, {\n            required: 'This input is required.',\n            maxLength: {\n              value: 255,\n              message: 'This input must not exceed 255 characters',\n            },\n          })}\n        />\n        {errors?.ERegisterFieldName && (\n          <span className=\"error\">{errors.ERegisterFieldName.message}</span>\n        )}\n      </div>\n\n      <div className=\"wrapper-input\">\n        <input\n          autoComplete=\"off\"\n          disabled={isFetching}\n          className={errors?.ERegisterFieldEmail && 'error'}\n          type=\"text\"\n          {...register(ERegisterFieldEmail, {\n            required: 'This input is required.',\n            pattern: {\n              value: regExpEmail,\n              message: 'Invalid email address',\n            },\n            maxLength: {\n              value: 255,\n              message: 'This input must not exceed 255 characters',\n            },\n          })}\n        />\n        {errors?.ERegisterFieldEmail && (\n          <span className=\"error\">{errors.ERegisterFieldEmail.message}</span>\n        )}\n      </div>\n\n      <div className=\"wrapper-input\">\n        <div className=\"toggle_pass\">\n          <input\n            autoComplete=\"off\"\n            disabled={isFetching}\n            className={errors?.ERegisterFieldPassword && 'error'}\n            type={isShowPassword ? 'text' : 'password'}\n            {...register(ERegisterFieldPassword, {\n              required: 'This input is required.',\n              maxLength: {\n                value: 255,\n                message: 'This input must not exceed 255 characters',\n              },\n            })}\n          />\n          <span className=\"eye\" onClick={togglePass}></span>\n        </div>\n        {errors?.ERegisterFieldPassword && (\n          <span className=\"error\">{errors.ERegisterFieldPassword.message}</span>\n        )}\n      </div>\n\n      <button disabled={isDisabledSubmitBtn} onClick={handleSubmit(onSubmit)}>\n        Save\n      </button>\n    </div>\n  );\n};\n","export const ModalBodyWrapper = ({ children, manualControlBody }) => {\n  return (\n    <div className={!manualControlBody ? 'modal-body-wrapper' : ''}>\n      {children}\n    </div>\n  );\n};","import spriteIcon from '../../../images/sprite.svg'\nimport './style.css';\n\nexport const ModalHeader = ({ headerTitle, toggle }) => {\n  return (\n    <div className='modal-header'>\n      <div className='modal-header__title-wrapper'>\n        <span className='modal-header__title'>{headerTitle}</span>\n        <button className='modal-header__close' onClick={toggle}>\n          <svg className='modal-header__icon-close' aria-label=\"icon close\" width=\"18\" height=\"18\">\n          <use href={spriteIcon + '#icon-x-close'}></use>\n        </svg></button>\n      </div>\n    </div>\n  );\n};","import React, { Children } from 'react';\nimport { ModalBodyWrapper } from './ModalBodyWrapper';\nimport { ModalHeader } from './ModalHeader';\nimport './style.css';\n\nexport const Modal = ({\n  children,\n  open,\n  toggle,\n  manualControlBody = false,\n  ...props }) => {\n\n  const childrenWithProps = Children.map(children, (child) => {\n    return React.cloneElement(child, { toggle, open, HeaderRender: (headerTitle) => <ModalHeader {...{ headerTitle, toggle }} /> });\n  });\n\n  const activeClass = open ? 'active' : '';\n  return (\n    <>\n      {\n        (<div className={`modal ${activeClass}`} onClick={toggle} {...props} >\n          <div className={`modal__content ${activeClass}`} onClick={(e) => e.stopPropagation()}>\n            <ModalBodyWrapper {...{ manualControlBody }}>\n              {childrenWithProps}\n            </ModalBodyWrapper>\n          </div>\n        </div>)\n      }\n    </>\n  );\n};\n\n","import spriteIcon from '../../images/sprite.svg';\nimport './style.css';\nimport { Modal } from '../Modal';\nimport { EditProfile } from '../EditProfile';\nimport { useState } from 'react';\n\nexport const NeedHelp = () => {\n  const [open, setIsOpen] = useState(false);\n  const toggle = () => {\n    setIsOpen(prev => !prev);\n  };\n  return (\n    <div className=\"need-help__wrapper\">\n      <img\n        className=\"need-help__img\"\n        src=\"https://res.cloudinary.com/dxhypjavs/image/upload/v1687412198/command_project_task_pro_images/additionally/flowerpot.png\"\n        alt=\"\"\n      />\n      <p className=\"need-help__text\">\n        If you need help with <a href=\"*\">TaskPro</a>, check out our support\n        resources or reach out to our customer support team.\n      </p>\n      <button className=\"need-help__btn\" onClick={toggle}>\n        <svg\n          className=\"modal-header__icon-help-circle\"\n          aria-label=\"icon close\"\n          width=\"18\"\n          height=\"18\"\n        >\n          <use href={spriteIcon + '#icon-help-circle'}></use>\n        </svg>\n        <span className=\"need-help__btn-title\">Need help?</span>\n      </button>\n\n      {open && (\n        <Modal {...{ open, toggle }}>\n          <EditProfile />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { EditProfile } from \"./EditProfile\";\nimport { Modal } from \"./Modal\";\nimport { NeedHelp } from \"./NeedHelp/NeedHelp\";\nimport \"../assets/index.css\";\n\nexport const SideBar = () => {\n  const [open, setIsOpen] = useState(false);\n  const toggle = () => {\n    setIsOpen((prev) => !prev);\n  };\n\n  return (\n    <>\n      <button onClick={toggle}>open modal</button>\n      <h1>TaskPro</h1>\n      <NeedHelp></NeedHelp>\n\n      {open && (\n        <Modal {...{ open, toggle }}>\n          <EditProfile />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import { Header } from \"../components/Header\";\nimport { SideBar } from \"../components/SideBar\";\n\nconst HomePage = () => {\n\n  return (\n    <>\n      <Header />\n      <SideBar />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["Header","_jsxs","children","_jsx","ThemeSelect","regExpEmail","ERegisterFieldName","ERegisterFieldEmail","ERegisterFieldPassword","getDefaultValuesForm","name","email","password","_ref","_defineProperty","checkedField","EditProfile","toggle","open","HeaderRender","_useState","useState","_useState2","_slicedToArray","isShowPassword","setIsShowPassword","_useForm","useForm","shouldUnregister","mode","defaultValues","register","handleSubmit","_useForm$formState","formState","errors","isFetching","isDisabledSubmitBtn","dirtyFields","every","el","isAllRequiredFieldsDirty","Object","keys","length","className","_objectSpread","autoComplete","disabled","type","required","maxLength","value","message","pattern","onClick","prev","data","console","log","ModalBodyWrapper","manualControlBody","ModalHeader","headerTitle","width","height","href","spriteIcon","Modal","_ref$manualControlBod","props","_objectWithoutProperties","_excluded","childrenWithProps","Children","child","React","activeClass","_Fragment","concat","e","stopPropagation","NeedHelp","setIsOpen","src","alt","SideBar"],"sourceRoot":""}