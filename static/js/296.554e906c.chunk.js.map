{"version":3,"file":"static/js/296.554e906c.chunk.js","mappings":"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","sources":["components/ProjectOffice/ProjectOfficeStyle.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeader.jsx","components/Modal/ModalColumn/ModalColumn.styled.jsx","components/Modal/ModalColumn/ModalColumn.jsx","components/ProjectOffice/AddColumnsButton/AddColumnsButton.jsx","components/ProjectOffice/ProjectOffice.jsx","pages/ScreensPage.jsx"],"sourcesContent":["import { styled } from '@mui/system';\nimport { Typography, Button, Card, CardActions, Divider } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const Wrapper = styled('div')({\n    margin: '20px', \n    display: 'flex', \n    justifyContent: 'space-between'\n});\n\nexport const FilterWrapper = styled('div')({\n    marginRight: '10px', \n    display: 'flex', \n    flexDirection: 'row', \n    alignItems: 'center' \n});\n\nexport const ActionsButton = styled('div')({\n    background: 'beige', \n    width: \"334px\", \n    height: '56px', \n    borderRadius: '8px', \n    padding: '20px',\n    display: 'flex', \n    justifyContent: 'space-between', \n});\n\nexport const ActionsIconsButton = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-end', \n    alignItems: 'center', \n    gap: '8px'\n});\n\nexport const CardWrapper = styled('div')({\n    display: 'flex', \n    justifyContent: 'space-between', \n    flexWrap: 'wrap'\n});\n\nexport const CardFooterStyled = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-start', \n    paddingRight: '20px', \n    paddingLeft: '20px', \n    gap: '15px'\n});\n\nexport const CardIconsWrapper = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-end',\n    paddingRight: '20px', \n    gap: '8px'\n});\n\nexport const CardStyled = styled(Card)({\n    maxWidth: '334px', \n    minHeight: '154px', \n    borderRadius: '8px', \n    margin: '20px'\n});\n\nexport const CardTitle = styled(Typography)({\n    fontWeight: '600', \n    fontSize: '14px', \n    lineHeight: '21px'\n});\n\nexport const CardFooterTitle = styled(Typography)({\n    fontWeight: '400', \n    fontSize: '10px', \n    lineHeight: '12px', \n    color: '#16161680'\n});\n\nexport const CardText= styled(Typography)({\n    fontWeight: '400', \n    fontSize: '12px', \n    lineHeight: '16px' \n});\n\nexport const CardActionsStyled= styled(CardActions)({\n    paddingRight: '20px', \n    paddingLeft: '20px'\n});\n\nexport const DividerStyled= styled(Divider)({\n    background: '#1616160', \n    width: '300px', \n    height: '1px'\n});\n\nexport const StackWrapper = styled(Stack)({\n    width: '330px', \n    height: '56px', \n    background: '#F6F6F7', \n    borderRadius: '8px' \n});\n\nexport const CardButtonStyled = styled(Stack)({\n    width: '330px', \n    height: '56px', \n    background: '#BEDBB0', \n    borderRadius: '8px' \n});\n\nexport const ButtonStyled = styled(Button)({\n    paddingLeft: '80px', \n    color: '#161616', \n    fontSize: '14px', \n    textTransform: 'none'\n});\n\nexport const AddIconStyled = styled(AddIcon)({\n    background: '#161616', \n    width: '28px', \n    height: '28px', \n    color: '#ffff', \n    borderRadius: '8px' \n});\n\nexport const Title = styled(Typography)({\n    fontWeight: 500, \n    fontSize: '18px', \n    lineHeight: '27px', \n    marginBottom: '5px' \n});\n\nexport const Text = styled(Typography)({\n    fontWeight: 500, \n    fontSize: '14px', \n    lineHeight: '21px'\n});\n\n","import FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport { FilterWrapper, Title, Wrapper, Text } from '../ProjectOfficeStyle';\n\n\nconst ProjectOfficeHeader = () => {\n  return (\n    <>\n        <Wrapper>\n            <Title>Project</Title>\n            <FilterWrapper>\n                <FilterAltIcon />\n                <Text>Filters</Text>\n            </FilterWrapper>\n        </Wrapper>\n    </> \n  );\n};\n\nexport default ProjectOfficeHeader;\n\n","import { TextField, Dialog } from \"@mui/material\";\nimport { styled } from '@mui/system';\n\n\nexport const StyleInput = styled(TextField)({\n  backgroundColor: \"#1F1F1F\",\n  maxWidth: \"302px\",\n   marginBottom: '24px',\n\n        \"& label.Mui-focused\": {\n          color: \"#fff\",\n        },\n\n  \"& .MuiInputBase-input\": {\n          padding: \"14px 16px\",\n          color: \"#fff\",\n          fontFamily: \"Poppins, sans-serif\",\n        },\n        \"& .MuiFormLabel-root\": {\n          color: \"#fff\",\n          fontFamily: \"Poppins, sans-serif\",\n        },\n\n  \"& .MuiInputBase-root\": {\n          opacity: '0.4',\n    borderRadius: \"8px\",\n    '&:hover': {\n      opacity: '1.0',\n    },\n\n    '&:focus': {\n      opacity: '1.0',\n    }\n        },\n\n        \"& .MuiOutlinedInput-root\": {\n          \"& fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n          \"&:hover fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n          \"&.Mui-focused fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n        },\n\n});\n\nexport const CustomDialog = styled(Dialog)({\n  \n  '& .MuiPaper-root': {\n    backgroundColor: 'black',\n    maxWidth: '350px',\n    padding: '24px',\n  margin: '0px',\n  },\n\n  '& .MuiDialogContent-root': {\n    padding: '0px',\n  }\n});","import { DialogTitle, Box, DialogContent } from \"@mui/material\";\nimport { CustomButton } from \"../../Button/CustomButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CustomDialog, StyleInput } from \"./ModalColumn.styled\";\nimport { useState } from \"react\";\n\nexport const ModalColumn = ({ isOpen, onClose, type = \"create\", initialState = '', onRemove }) => {\n  const [columnName, setColumnName] = useState(initialState);\n\n  const reset = () => {\n    setColumnName('');\n  }\n\n  const handleClose = () => { \n    reset();\n    onClose();\n  }\n\n  const handleChange = ({ target }) => { \n    setColumnName(target.value);\n  }\n\n  return (\n    <CustomDialog\n      open={isOpen}\n      fullWidth={true}\n      onClose={handleClose}\n      position=\"relative\"\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        marginBottom=\"24px\"\n      >\n        <DialogTitle\n          sx={{\n            color: \"white\",\n            padding: \"0\",\n            fontFamily: \"Poppins, sans-serif\",\n            fontSize: \"18px\",\n            lineHeight: \"1.5\",\n          }}\n        >\n          {type === 'create' ? 'Add Column' : 'Edit Column'}\n        </DialogTitle>\n        <CloseIcon\n          onClick={handleClose}\n          sx={{\n            color: \"white\",\n            position: \"absolute\",\n            top: \"14px\",\n            right: \"14px\",\n            height: \"18px\",\n            width: \"18px\",\n            cursor: \"pointer\",\n          }}\n        />\n      </Box>\n      <DialogContent>\n        <StyleInput\n          autoFocus\n          id=\"title\"\n          placeholder=\"Title\"\n          name=\"title\"\n          type=\"text\"\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: false }}\n          value={columnName}\n          onChange={handleChange}\n        />\n        <CustomButton onClick={() => { onRemove(columnName);  handleClose()}}>\n                  Add\n        </CustomButton>\n      </DialogContent>\n    </CustomDialog>\n  );\n};","import { CustomButton } from 'components/Button/CustomButton';\nimport { useState } from 'react';\n\nimport { StackWrapper } from '../ProjectOfficeStyle';\n\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\n\nconst AddColumnButton = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const columns = [{columnName: 'one', id: 1}, {columnName: 'two', id: 2}];\n\n  const handleToggleModal = () => {\n      setIsOpen((prevstate) => !prevstate )\n  }\n\n  const handleCreateColumn = (columnName) => {\n    //   const newArr = [...columns, { id: 4, columnName: columnName }];\n      console.log(columns)\n  }\n\n  return (\n    <>\n      <StackWrapper direction=\"row\" spacing={2}>\n        <CustomButton isWhiteBackground={true} onClick={handleToggleModal}>\n          Add\n        </CustomButton>\n        <ModalColumn\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          onRemove={handleCreateColumn}\n        />\n        {/* <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another column\n            </ButtonStyled> */}\n      </StackWrapper>\n    </>\n  );\n};\n\nexport default AddColumnButton;\n","// import { useState } from 'react';\n\n// import ProjectOfficeItem from './ProjectOfficeItem';\n// import { useEffect } from 'react';\n// import { getColumns } from 'services/fetchColumn';\nimport ProjectOfficeHeader from './ProjectOfficeHeader/ProjectOfficeHeader';\nimport AddColumnButton from './AddColumnsButton/AddColumnsButton';\n\nconst ProjectOffice = () => {\n  // const [columns, setColumns] = useState([]);\n  // const id = '9a5c9bf5-64d7-42dc-9279-d22fde663db5';\n\n  // useEffect(() => {\n  //   const getBoardColumn = async () => {\n  //     try {\n  //       const boardColumns = await getColumns(id);\n  //       setColumns(boardColumns);\n  //     } catch (error) {\n  //       console.log(error.message);\n  //     }\n  //   };\n  //   getBoardColumn();\n  // }, [id]);\n\n  // console.log(columns);\n\n  return (\n    <>\n      <ProjectOfficeHeader />\n      <AddColumnButton />\n      {/* {columns.map(column => {\n        return (\n          <ProjectOfficeItem\n          column={column} key={column.id}\n          />\n        );\n      })} */}\n      {/* <ProjectOfficeItem column={columns} /> */}\n    </>\n  );\n};\n\nexport default ProjectOffice;\n","import ProjectOffice from \"../components/ProjectOffice/ProjectOffice\";\n\nconst ScreensPage = () => {\n  return (\n    <>\n      <ProjectOffice />\n    </>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["Wrapper","styled","margin","display","justifyContent","FilterWrapper","marginRight","flexDirection","alignItems","StackWrapper","background","width","height","borderRadius","padding","gap","flexWrap","paddingRight","paddingLeft","Card","maxWidth","minHeight","Typography","fontWeight","fontSize","lineHeight","color","CardActions","Divider","Stack","Title","Button","textTransform","AddIcon","marginBottom","Text","_jsx","_Fragment","children","_jsxs","FilterAltIcon","StyleInput","TextField","backgroundColor","fontFamily","opacity","borderColor","CustomDialog","Dialog","ModalColumn","_ref","isOpen","onClose","_ref$type","type","_ref$initialState","initialState","onRemove","_useState","useState","_useState2","_slicedToArray","columnName","setColumnName","handleClose","open","fullWidth","position","Box","DialogTitle","sx","CloseIcon","onClick","top","right","cursor","DialogContent","autoFocus","id","placeholder","name","variant","InputLabelProps","shrink","value","onChange","_ref2","target","CustomButton","setIsOpen","columns","handleToggleModal","prevstate","direction","spacing","isWhiteBackground","console","log","ProjectOfficeHeader","AddColumnButton","ProjectOffice"],"sourceRoot":""}