{"version":3,"file":"static/js/296.2d7a4d16.chunk.js","mappings":"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","sources":["components/Button/CustomButton.jsx","components/Modal/ModalColumn/ModalColumn.styled.jsx","components/Modal/ModalColumn/ModalColumn.jsx","components/ProjectOffice/ProjectOfficeStyle.jsx","components/ProjectOffice/ProjectOfficeItem.jsx","services/fetchColumn.js","components/ProjectOffice/ProjectOffice.jsx","pages/ScreensPage.jsx"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\n\n\nexport const CustomButton = ({\n  children,\n  onClick,\n  styleOptions = {},\n    type = \"button\",\n  isWhiteBackground = false,\n}) => {\n    const iconStyle = {\n    width: 28,\n        height: 28,\n    size: 14,\n    backgroundColor: isWhiteBackground ? \"#FFFFFF\" : \"#121212\",\n    color: isWhiteBackground ? '#121212' : \"#FFFFFF\",\n    borderRadius: \"6px\",\n    };\n    \n  return (\n    <Button\n          startIcon={\n        <AddIcon\n          fontSize=\"small\"\n          sx={iconStyle}\n        />\n      }\n      variant=\"contained\"\n      onClick={onClick}\n      fullWidth\n      type={type}\n      sx={{\n          height: \"49px\",\n          maxWidth: \"352px\",\n          fontFamily: \"Poppins, sans-serif\",\n          fontWeight: \"500\",\n          fontSize: \"14px\",\n          lineHeight: \"1.5\",\n        letterSpacing: \"-0.02em\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: isWhiteBackground? \"#121212\" : \"#BEDBB0\",\n        borderRadius: \"8px\",\n        color: isWhiteBackground? \"#FFFFFF\" : \"#161616\",\n        textTransform: \"none\",\n        \"&:hover\": {\n          background: isWhiteBackground ? \"#121212\" : \"#BEDBB0\",\n        },\n        ...styleOptions,\n      }}\n    >\n      {children}\n    </Button>\n  );\n};\n","import { TextField, Dialog } from \"@mui/material\";\nimport { styled } from '@mui/system';\n\n\nexport const StyleInput = styled(TextField)({\n  backgroundColor: \"#1F1F1F\",\n  maxWidth: \"302px\",\n   marginBottom: '24px',\n\n        \"& label.Mui-focused\": {\n          color: \"#fff\",\n        },\n\n  \"& .MuiInputBase-input\": {\n          padding: \"14px 16px\",\n          color: \"#fff\",\n          fontFamily: \"Poppins, sans-serif\",\n        },\n        \"& .MuiFormLabel-root\": {\n          color: \"#fff\",\n          fontFamily: \"Poppins, sans-serif\",\n        },\n\n  \"& .MuiInputBase-root\": {\n          opacity: '0.4',\n    borderRadius: \"8px\",\n    '&:hover': {\n      opacity: '1.0',\n    },\n\n    '&:focus': {\n      opacity: '1.0',\n    }\n        },\n\n        \"& .MuiOutlinedInput-root\": {\n          \"& fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n          \"&:hover fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n          \"&.Mui-focused fieldset\": {\n            borderColor: \"#BEDBB0\",\n          },\n        },\n\n});\n\nexport const CustomDialog = styled(Dialog)({\n  \n  '& .MuiPaper-root': {\n    backgroundColor: 'black',\n    maxWidth: '350px',\n    padding: '24px',\n  margin: '0px',\n  },\n\n  '& .MuiDialogContent-root': {\n    padding: '0px',\n  }\n});","import { DialogTitle, Box, DialogContent } from \"@mui/material\";\nimport { CustomButton } from \"../../Button/CustomButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CustomDialog, StyleInput } from \"./ModalColumn.styled\";\nimport { useState } from \"react\";\n\nexport const ModalColumn = ({ isOpen, onClose, type = \"create\", initialState = '', onRemove }) => {\n  const [columnName, setColumnName] = useState(initialState);\n\n  const reset = () => {\n    setColumnName('');\n  }\n\n  const handleClose = () => { \n    reset();\n    onClose();\n  }\n\n  const handleChange = ({ target }) => { \n    setColumnName(target.value);\n  }\n\n  return (\n    <CustomDialog\n      open={isOpen}\n      fullWidth={true}\n      onClose={handleClose}\n      position=\"relative\"\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        marginBottom=\"24px\"\n      >\n        <DialogTitle\n          sx={{\n            color: \"white\",\n            padding: \"0\",\n            fontFamily: \"Poppins, sans-serif\",\n            fontSize: \"18px\",\n            lineHeight: \"1.5\",\n          }}\n        >\n          {type === 'create' ? 'Add Column' : 'Edit Column'}\n        </DialogTitle>\n        <CloseIcon\n          onClick={handleClose}\n          sx={{\n            color: \"white\",\n            position: \"absolute\",\n            top: \"14px\",\n            right: \"14px\",\n            height: \"18px\",\n            width: \"18px\",\n            cursor: \"pointer\",\n          }}\n        />\n      </Box>\n      <DialogContent>\n        <StyleInput\n          autoFocus\n          id=\"title\"\n          placeholder=\"Title\"\n          name=\"title\"\n          type=\"text\"\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: false }}\n          value={columnName}\n          onChange={handleChange}\n        />\n        <CustomButton onClick={() => { onRemove(columnName);  handleClose()}}>\n                  Add\n        </CustomButton>\n      </DialogContent>\n    </CustomDialog>\n  );\n};","import { styled } from '@mui/system';\nimport { Typography, Button, Card, CardActions, Divider } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const Wrapper = styled('div')({\n    margin: '20px', \n    display: 'flex', \n    justifyContent: 'space-between'\n});\n\nexport const FilterWrapper = styled('div')({\n    marginRight: '10px', \n    display: 'flex', \n    flexDirection: 'row', \n    alignItems: 'center' \n});\n\nexport const ActionsButton = styled('div')({\n    background: 'beige', \n    width: \"334px\", \n    height: '56px', \n    borderRadius: '8px', \n    padding: '20px',\n    display: 'flex', \n    justifyContent: 'space-between', \n});\n\nexport const ActionsIconsButton = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-end', \n    alignItems: 'center', \n    gap: '8px'\n});\n\nexport const CardWrapper = styled('div')({\n    display: 'flex', \n    justifyContent: 'space-between', \n    flexWrap: 'wrap'\n});\n\nexport const CardFooterStyled = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-start', \n    paddingRight: '20px', \n    paddingLeft: '20px', \n    gap: '15px'\n});\n\nexport const CardIconsWrapper = styled('div')({\n    display: 'flex', \n    justifyContent: 'flex-end',\n    paddingRight: '20px', \n    gap: '8px'\n});\n\nexport const CardStyled = styled(Card)({\n    maxWidth: '334px', \n    minHeight: '154px', \n    borderRadius: '8px', \n    margin: '20px'\n});\n\nexport const CardTitle = styled(Typography)({\n    fontWeight: '600', \n    fontSize: '14px', \n    lineHeight: '21px'\n});\n\nexport const CardFooterTitle = styled(Typography)({\n    fontWeight: '400', \n    fontSize: '10px', \n    lineHeight: '12px', \n    color: '#16161680'\n});\n\nexport const CardText= styled(Typography)({\n    fontWeight: '400', \n    fontSize: '12px', \n    lineHeight: '16px' \n});\n\nexport const CardActionsStyled= styled(CardActions)({\n    paddingRight: '20px', \n    paddingLeft: '20px'\n});\n\nexport const DividerStyled= styled(Divider)({\n    background: '#1616160', \n    width: '300px', \n    height: '1px'\n});\n\nexport const StackWrapper = styled(Stack)({\n    width: '330px', \n    height: '56px', \n    background: '#F6F6F7', \n    borderRadius: '8px' \n});\n\nexport const CardButtonStyled = styled(Stack)({\n    width: '330px', \n    height: '56px', \n    background: '#BEDBB0', \n    borderRadius: '8px' \n});\n\nexport const ButtonStyled = styled(Button)({\n    paddingLeft: '80px', \n    color: '#161616', \n    fontSize: '14px', \n    textTransform: 'none'\n});\n\nexport const AddIconStyled = styled(AddIcon)({\n    background: '#161616', \n    width: '28px', \n    height: '28px', \n    color: '#ffff', \n    borderRadius: '8px' \n});\n\nexport const Title = styled(Typography)({\n    fontWeight: 500, \n    fontSize: '18px', \n    lineHeight: '27px', \n    marginBottom: '5px' \n});\n\nexport const Text = styled(Typography)({\n    fontWeight: 500, \n    fontSize: '14px', \n    lineHeight: '21px'\n});\n\n","import FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport { FilterWrapper, Title, Wrapper, Text, ButtonStyled, AddIconStyled, ActionsButton, CardWrapper, CardStyled, CardTitle, CardText, CardActionsStyled, DividerStyled, CardFooterStyled, CardFooterTitle, CardIconsWrapper, CardButtonStyled, ActionsIconsButton} from './ProjectOfficeStyle';\nimport CardContent from '@mui/material/CardContent';\nimport { CardActionArea } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\n\nconst ProjectOfficeItem = ({ column: { title } }) => {\n  return (\n    <>\n        <Wrapper>\n            <Title>Project</Title>\n            <FilterWrapper>\n                <FilterAltIcon />\n                <Text>Filters</Text>\n            </FilterWrapper>\n        </Wrapper>\n        <Wrapper>\n            <ActionsButton>\n                  { title}\n                <ActionsIconsButton>\n                    <EditIcon fontSize='small'  /> \n                    <DeleteOutlineIcon fontSize='small' />\n                </ActionsIconsButton>\n            </ActionsButton>\n            <ActionsButton>\n                In progress\n                <ActionsIconsButton>\n                    <EditIcon fontSize='small'  /> \n                    <DeleteOutlineIcon fontSize='small' />\n                </ActionsIconsButton>\n            </ActionsButton>\n            <ActionsButton>\n                Done\n                <ActionsIconsButton>\n                    <EditIcon fontSize='small'  /> \n                    <DeleteOutlineIcon fontSize='small' />\n                </ActionsIconsButton>\n            </ActionsButton>\n        </Wrapper>\n        <CardWrapper>\n            {Array.from(Array(9)).map((_, index) => (\n                <CardStyled key={index}>\n                    <CardActionArea>\n                        <CardContent>\n                            <CardTitle variant=\"h5\" component=\"div\">\n                                The Watch Spot Design\n                            </CardTitle>\n                            <CardText color=\"text.secondary\">\n                                Create a visually stunning and eye-catching watch dial design that embodies our brand's...\n                            </CardText>\n                        </CardContent>\n                    </CardActionArea>\n                    <CardActionsStyled>\n                        <DividerStyled />\n                    </CardActionsStyled>\n                    <CardFooterStyled>\n                        <CardFooterTitle>\n                            Priority\n                        </CardFooterTitle>\n                        <CardFooterTitle>\n                            Deadline\n                        </CardFooterTitle>\n                    </CardFooterStyled>\n                    <CardIconsWrapper>\n                        <NotificationsNoneIcon fontSize='small' />\n                        <ArrowCircleRightIcon fontSize='small' />\n                        <EditIcon fontSize='small' />\n                        <DeleteOutlineIcon fontSize='small' />\n                    </CardIconsWrapper>\n                </CardStyled>\n            ))}\n    </CardWrapper>\n    <Wrapper>\n        {Array.from(Array(3)).map((_, index) => (\n            <CardButtonStyled direction=\"row\" spacing={2} key={index}>\n            <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another card\n            </ButtonStyled>\n            </CardButtonStyled>\n        ))}\n    </Wrapper>\n\n\n    </> \n  );\n};\n\nexport default ProjectOfficeItem;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://64975d0e83d4c69925a39dad.mockapi.io';\n\nexport const getColumns = async (id) => { \n    const resp = await axios.get('/columns' , {\n        params: {\n            owner: id\n        }});\n    console.log(resp)\n    const data = resp.data;\n    console.log(data)\n\n    return data;\n}","import FilterAltIcon from '@mui/icons-material/FilterAlt';\nimport { CustomButton } from 'components/Button/CustomButton';\nimport { useState } from 'react';\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\nimport {\n  FilterWrapper,\n  Title,\n  Wrapper,\n  Text,\n  StackWrapper,\n  // ButtonStyled,\n  // AddIconStyled,\n} from './ProjectOfficeStyle';\n// import { CustomButton } from 'components/Button/CustomButton';\n// import { useState } from 'react';\n// import { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\nimport ProjectOfficeItem from './ProjectOfficeItem';\nimport { useEffect } from 'react';\nimport { getColumns } from 'services/fetchColumn';\n\nconst ProjectOffice = () => {\n  // const [isOpen, setIsOpen] = useState(false);\n  // const columns = [{columnName: 'one', id: 1}, {columnName: 'two', id: 2}];\n\n  // const handleToggleModal = () => {\n  //     setIsOpen((prevstate) => !prevstate )\n  // }\n\n  // const [isOpen, setIsOpen] = useState(false);\n  const [columns, setColumns] = useState([]);\n  const id = '9a5c9bf5-64d7-42dc-9279-d22fde663db5';\n\n  useEffect(() => {\n    const getBoardColumn = async () => {\n      try {\n        const boardColumns = await getColumns(id);\n        setColumns(boardColumns);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getBoardColumn();\n  }, [id]);\n\n  console.log(columns);\n\n  // const [isOpen, setIsOpen] = useState(false);\n  // const columns = [{columnName: 'one', id: 1}, {columnName: 'two', id: 2}];\n\n  const handleToggleModal = () => {\n    // setIsOpen((prevstate) => !prevstate )\n  };\n\n  const handleCreateColumn = columnName => {\n    // const newArr = [...columns, { id: 4, columnName: columnName }];\n    console.log(columns);\n  };\n  // const handleCreateColumn = (columnName) => {\n  //     const newArr = [...columns, { id: 4, columnName: columnName }];\n  //     console.log(columns)\n  // }\n\n  return (\n    <>\n      <Wrapper>\n        <Title>Project office</Title>\n        <FilterWrapper>\n          <FilterAltIcon />\n          <Text>Filters</Text>\n        </FilterWrapper>\n      </Wrapper>\n      <StackWrapper direction=\"row\" spacing={2}>\n        <CustomButton isWhiteBackground={true} onClick={handleToggleModal}>\n          Add\n        </CustomButton>\n        <ModalColumn\n          // isOpen={isOpen}\n          onClose={handleToggleModal}\n          onRemove={handleCreateColumn}\n        />\n        {/* <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another column\n            </ButtonStyled> */}\n      </StackWrapper>\n      {columns.map(column => {\n        return <ProjectOfficeItem column={column} key={column.id} />;\n      })}\n      {/* <ProjectOfficeItem /> */}\n    </>\n  );\n};\n\nexport default ProjectOffice;\n","import ProjectOffice from \"../components/ProjectOffice/ProjectOffice\";\n\nconst ScreensPage = () => {\n  return (\n    <>\n      <ProjectOffice />\n    </>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["CustomButton","_ref","children","onClick","_ref$styleOptions","styleOptions","_ref$type","type","_ref$isWhiteBackgroun","isWhiteBackground","iconStyle","width","height","size","backgroundColor","color","borderRadius","_jsx","Button","startIcon","AddIcon","fontSize","sx","variant","fullWidth","_objectSpread","maxWidth","fontFamily","fontWeight","lineHeight","letterSpacing","display","alignItems","background","textTransform","StyleInput","styled","TextField","marginBottom","padding","opacity","borderColor","CustomDialog","Dialog","margin","ModalColumn","isOpen","onClose","_ref$initialState","initialState","onRemove","_useState","useState","_useState2","_slicedToArray","columnName","setColumnName","handleClose","_jsxs","open","position","Box","justifyContent","DialogTitle","CloseIcon","top","right","cursor","DialogContent","autoFocus","id","placeholder","name","InputLabelProps","shrink","value","onChange","_ref2","target","Wrapper","FilterWrapper","marginRight","flexDirection","ActionsButton","ActionsIconsButton","gap","CardWrapper","flexWrap","CardFooterStyled","paddingRight","paddingLeft","CardIconsWrapper","CardStyled","Card","minHeight","CardTitle","Typography","CardFooterTitle","CardText","CardActionsStyled","CardActions","DividerStyled","Divider","StackWrapper","Stack","CardButtonStyled","ButtonStyled","AddIconStyled","Title","Text","title","column","_Fragment","FilterAltIcon","EditIcon","DeleteOutlineIcon","Array","from","map","_","index","CardActionArea","CardContent","component","NotificationsNoneIcon","ArrowCircleRightIcon","direction","spacing","axios","getColumns","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","data","wrap","_context","prev","next","params","owner","sent","console","log","abrupt","stop","_x","apply","arguments","columns","setColumns","useEffect","getBoardColumn","boardColumns","t0","message","handleToggleModal","ProjectOfficeItem","ProjectOffice"],"sourceRoot":""}