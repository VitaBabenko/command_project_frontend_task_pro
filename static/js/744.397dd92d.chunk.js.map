{"version":3,"file":"static/js/744.397dd92d.chunk.js","mappings":"uPAEaA,EAAmBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2RAgB7BC,EAAqBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gVAc9BG,EAAeL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sJAK7B,SAAAK,GAAK,OAAKA,EAAMC,QAAUD,EAAME,SAASC,cAAgB,sBAAwB,gBAAgB,IAQ5FC,EAAkBX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,4H,SCezC,EAhDoB,WAClB,IAAAW,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA0CL,EAAAA,EAAAA,UAAS,SAAQM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,IAEtCG,EAAAA,EAAAA,YAAU,WAERC,SAASC,KAAKC,aAAa,aAAcL,EAC3C,GAAG,CAACA,IAEJ,IAAMM,EAAoB,SAAAnB,GACxBc,EAAiBd,GACjBU,GAAc,EAChB,EAEA,OACEU,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAApB,SAAA,EACEmB,EAAAA,EAAAA,MAAC7B,EAAgB,CAAC+B,QAAS,kBAAMZ,GAAeD,EAAW,EAACR,SAAA,CAAC,SAE3DsB,EAAAA,EAAAA,KAACpB,EAAe,CAAC,aAAW,oBAAmBF,UAC7CsB,EAAAA,EAAAA,KAAA,OAAKC,KAAMC,EAAAA,EAAS,0BAGvBhB,IACCW,EAAAA,EAAAA,MAACzB,EAAkB,CAAAM,SAAA,EACjBsB,EAAAA,EAAAA,KAAC1B,EAAY,CACXG,MAAOa,EACPS,QAAS,kBAAMH,EAAkB,QAAQ,EAAClB,SAC3C,WAGDsB,EAAAA,EAAAA,KAAC1B,EAAY,CACXG,MAAOa,EACPS,QAAS,kBAAMH,EAAkB,OAAO,EAAClB,SAC1C,UAGDsB,EAAAA,EAAAA,KAAC1B,EAAY,CACXG,MAAOa,EACPS,QAAS,kBAAMH,EAAkB,SAAS,EAAClB,SAC5C,gBAOX,C,2FCxDayB,EAAS,WACpB,OACEN,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,CAAK,UAEHsB,EAAAA,EAAAA,KAACI,EAAAA,EAAW,MAGlB,E,wCCTaC,EAAc,yG,UCAdC,EAAqB,qBACrBC,EAAsB,sBACtBC,EAAyB,yBAEzBC,EAAuB,SAACC,EAAMC,EAAOC,GAAc,IAADC,EAC7D,OAAAA,EAAA,IAAAC,EAAAA,EAAAA,GAAAD,EACGP,EAAyB,OAAJI,QAAI,IAAJA,EAAAA,EAAQ,KAAEI,EAAAA,EAAAA,GAAAD,EAC/BN,EAA2B,OAALI,QAAK,IAALA,EAAAA,EAAS,KAAEG,EAAAA,EAAAA,GAAAD,EACjCL,EAAiC,OAARI,QAAQ,IAARA,EAAAA,EAAY,IAAEC,CAE5C,EAEME,EAAe,CAACT,EAAoBC,EAAqBC,GCClDQ,EAAc,SAAHH,GAAYA,EAANI,OAAYJ,EAAJK,KAA0B,IAApBC,EAAYN,EAAZM,aAC1CrC,GAA4CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDsC,EAAcpC,EAAA,GAAEqC,EAAiBrC,EAAA,GACxCsC,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,kBAAkB,EAClBC,KAAM,WACNC,cAAejB,MANfkB,EAAQL,EAARK,SACAC,EAAYN,EAAZM,aAAYC,EAAAP,EACZQ,UAAaC,EAAMF,EAANE,OAOTC,GAAa,EACbC,GDbgC,SAACC,GACvC,OAAOnB,EAAaoB,OAAM,SAACC,GAAE,QAAkB,OAAXF,QAAW,IAAXA,IAAAA,EAAcE,GAAK,GACzD,CCYKC,CAT+BR,EAAXK,gBAUnBI,OAAOC,KAAKR,GAAQS,QACtBR,EAUF,OACEnC,EAAAA,EAAAA,MAAA,OAAK4C,UAAU,uBAAsB/D,SAAA,CAClCyC,EAAa,iBAGdtB,EAAAA,EAAAA,MAAA,OAAK4C,UAAU,gBAAe/D,SAAA,EAC5BsB,EAAAA,EAAAA,KAAA,SAAA0C,EAAAA,EAAAA,GAAA,CACEC,aAAa,MACbC,SAAUZ,EACVS,WAAiB,OAANV,QAAM,IAANA,OAAM,EAANA,EAAQzB,qBAAsB,QACzCuC,KAAK,QACDlB,EAASrB,EAAoB,CAC/BwC,SAAU,0BACVC,UAAW,CACTC,MAAO,IACPC,QAAS,kDAIR,OAANlB,QAAM,IAANA,OAAM,EAANA,EAAQzB,sBACPN,EAAAA,EAAAA,KAAA,QAAMyC,UAAU,QAAO/D,SAAEqD,EAAOzB,mBAAmB2C,cAIvDpD,EAAAA,EAAAA,MAAA,OAAK4C,UAAU,gBAAe/D,SAAA,EAC5BsB,EAAAA,EAAAA,KAAA,SAAA0C,EAAAA,EAAAA,GAAA,CACEC,aAAa,MACbC,SAAUZ,EACVS,WAAiB,OAANV,QAAM,IAANA,OAAM,EAANA,EAAQxB,sBAAuB,QAC1CsC,KAAK,QACDlB,EAASpB,EAAqB,CAChCuC,SAAU,0BACVI,QAAS,CACPF,MAAO3C,EACP4C,QAAS,yBAEXF,UAAW,CACTC,MAAO,IACPC,QAAS,kDAIR,OAANlB,QAAM,IAANA,OAAM,EAANA,EAAQxB,uBACPP,EAAAA,EAAAA,KAAA,QAAMyC,UAAU,QAAO/D,SAAEqD,EAAOxB,oBAAoB0C,cAIxDpD,EAAAA,EAAAA,MAAA,OAAK4C,UAAU,gBAAe/D,SAAA,EAC5BmB,EAAAA,EAAAA,MAAA,OAAK4C,UAAU,cAAa/D,SAAA,EAC1BsB,EAAAA,EAAAA,KAAA,SAAA0C,EAAAA,EAAAA,GAAA,CACEC,aAAa,MACbC,SAAUZ,EACVS,WAAiB,OAANV,QAAM,IAANA,OAAM,EAANA,EAAQvB,yBAA0B,QAC7CqC,KAAMzB,EAAiB,OAAS,YAC5BO,EAASnB,EAAwB,CACnCsC,SAAU,0BACVC,UAAW,CACTC,MAAO,IACPC,QAAS,kDAIfjD,EAAAA,EAAAA,KAAA,QAAMyC,UAAU,MAAM1C,QAtEX,WACjBsB,GAAkB,SAAA8B,GAAI,OAAKA,CAAI,GACjC,QAsEa,OAANpB,QAAM,IAANA,OAAM,EAANA,EAAQvB,0BACPR,EAAAA,EAAAA,KAAA,QAAMyC,UAAU,QAAO/D,SAAEqD,EAAOvB,uBAAuByC,cAI3DjD,EAAAA,EAAAA,KAAA,UAAQ4C,SAAUX,EAAqBlC,QAAS6B,GAzEnC,SAAAwB,GACfC,QAAQC,IAAIF,EACd,IAuE2E1E,SAAC,WAK9E,E,UCjHa6E,EAAmB,SAAH1C,GAAyC,IAAnCnC,EAAQmC,EAARnC,SAAU8E,EAAiB3C,EAAjB2C,kBAC3C,OACExD,EAAAA,EAAAA,KAAA,OAAKyC,UAAYe,EAA2C,GAAvB,qBAA0B9E,SAC5DA,GAGP,E,UCHa+E,EAAc,SAAH5C,GAAiC,IAA3B6C,EAAW7C,EAAX6C,YAAazC,EAAMJ,EAANI,OACzC,OACEjB,EAAAA,EAAAA,KAAA,OAAKyC,UAAU,eAAc/D,UAC3BmB,EAAAA,EAAAA,MAAA,OAAK4C,UAAU,8BAA6B/D,SAAA,EAC1CsB,EAAAA,EAAAA,KAAA,QAAMyC,UAAU,sBAAqB/D,SAAEgF,KACvC1D,EAAAA,EAAAA,KAAA,UAAQyC,UAAU,sBAAsB1C,QAASkB,EAAOvC,UACtDsB,EAAAA,EAAAA,KAAA,OAAKyC,UAAU,2BAA2B,aAAW,aAAakB,MAAM,KAAKC,OAAO,KAAIlF,UACxFsB,EAAAA,EAAAA,KAAA,OAAKC,KAAM4D,EAAAA,EAAa,0BAKlC,E,mDCVaC,EAAQ,SAAHjD,GAKA,IAJhBnC,EAAQmC,EAARnC,SACAwC,EAAIL,EAAJK,KACAD,EAAMJ,EAANI,OAAM8C,EAAAlD,EACN2C,kBAAAA,OAAiB,IAAAO,GAAQA,EACtBvF,GAAKwF,EAAAA,EAAAA,GAAAnD,EAAAoD,GAEFC,EAAoBC,EAAAA,SAAAA,IAAazF,GAAU,SAAC0F,GAChD,OAAOC,EAAAA,aAAmBD,EAAO,CAAEnD,OAAAA,EAAQC,KAAAA,EAAMC,aAAc,SAACuC,GAAW,OAAK1D,EAAAA,EAAAA,KAACyD,EAAW,CAAOC,YAAAA,EAAazC,OAAAA,GAAY,GAC9H,IAEMqD,EAAcpD,EAAO,SAAW,GACtC,OACElB,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAApB,UAEKsB,EAAAA,EAAAA,KAAA,OAAA0C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAKD,UAAS,SAAA8B,OAAWD,GAAevE,QAASkB,GAAYzC,GAAK,IAAAE,UACjEsB,EAAAA,EAAAA,KAAA,OAAKyC,UAAS,kBAAA8B,OAAoBD,GAAevE,QAAS,SAACyE,GAAC,OAAKA,EAAEC,iBAAiB,EAAC/F,UACnFsB,EAAAA,EAAAA,KAACuD,EAAgB,CAAOC,kBAAAA,EAAiB9E,SACtCwF,UAOf,ECxBaQ,EAAW,WACtB,IAAA5F,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCoC,EAAIlC,EAAA,GAAE2F,EAAS3F,EAAA,GAChBiC,EAAS,WACb0D,GAAU,SAAAxB,GAAI,OAAKA,CAAI,GACzB,EACA,OACEtD,EAAAA,EAAAA,MAAA,OAAK4C,UAAU,qBAAoB/D,SAAA,EACjCsB,EAAAA,EAAAA,KAAA,OACEyC,UAAU,iBACVmC,IAAI,2HACJC,IAAI,MAENhF,EAAAA,EAAAA,MAAA,KAAG4C,UAAU,kBAAiB/D,SAAA,CAAC,0BACPsB,EAAAA,EAAAA,KAAA,KAAGC,KAAK,IAAGvB,SAAC,YAAY,mFAGhDmB,EAAAA,EAAAA,MAAA,UAAQ4C,UAAU,iBAAiB1C,QAASkB,EAAOvC,SAAA,EACjDsB,EAAAA,EAAAA,KAAA,OACEyC,UAAU,iCACV,aAAW,aACXkB,MAAM,KACNC,OAAO,KAAIlF,UAEXsB,EAAAA,EAAAA,KAAA,OAAKC,KAAM4D,EAAAA,EAAa,yBAE1B7D,EAAAA,EAAAA,KAAA,QAAMyC,UAAU,uBAAsB/D,SAAC,kBAGxCwC,IACClB,EAAAA,EAAAA,KAAC8D,EAAK,CAAO5C,KAAAA,EAAMD,OAAAA,EAAMvC,UACvBsB,EAAAA,EAAAA,KAACgB,EAAW,QAKtB,ECnCa8D,EAAU,WACrB,IAAAhG,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCoC,EAAIlC,EAAA,GAAE2F,EAAS3F,EAAA,GAChBiC,EAAS,WACb0D,GAAU,SAACxB,GAAI,OAAMA,CAAI,GAC3B,EAEA,OACEtD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAApB,SAAA,EACEsB,EAAAA,EAAAA,KAAA,UAAQD,QAASkB,EAAOvC,SAAC,gBACzBsB,EAAAA,EAAAA,KAAA,MAAAtB,SAAI,aACJsB,EAAAA,EAAAA,KAAC0E,EAAQ,IAERxD,IACClB,EAAAA,EAAAA,KAAC8D,EAAK,CAAO5C,KAAAA,EAAMD,OAAAA,EAAMvC,UACvBsB,EAAAA,EAAAA,KAACgB,EAAW,QAKtB,ECZA,EAViB,WAEf,OACEnB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAApB,SAAA,EACEsB,EAAAA,EAAAA,KAACG,EAAM,KACPH,EAAAA,EAAAA,KAAC8E,EAAO,MAGd,C","sources":["components/ThemeSelect/ThemeSelect.styled.js","components/ThemeSelect/ThemeSelect.jsx","components/Header.jsx","utils.js/regex.js","components/EditProfile/util.js","components/EditProfile/index.jsx","components/Modal/ModalBodyWrapper/index.jsx","components/Modal/ModalHeader/index.jsx","components/Modal/index.jsx","components/NeedHelp/NeedHelp.jsx","components/SideBar.jsx","pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ThemeSelectTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* background-color: red; */\n\n  width: 68px;\n  height: 21px;\n\n  color: var(--themeTitleTextColor);\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n`;\n\nexport const ThemeSelectWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100px;\n  height: 107px;\n  box-sizing: border-box;\n  padding: 18px 44px 18px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--greenGreenBlueColor);\n  background-color: var(--themeListBgColor);\n  box-shadow: var(--boxShadow);\n`;\n\nexport const ThemeSelects = styled.li`\n  font-size: 14px;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n  color: var(\n    --${props => (props.theme === props.children.toLowerCase() ? 'greenGreenBlueColor' : 'popupTextColor')}\n  );\n\n  &:hover {\n    color: orange;\n  }\n`;\n\nexport const ThemeSelectIcon = styled.svg`\n  /* margin-left: 4px; */\n  width: 16px;\n  height: 16px;\n  stroke: var(--themeTitleTextColor);\n  fill: none;\n`;\n","import { useState, useEffect } from 'react';\n\nimport sprite from '../../images/sprite.svg';\n// console.log(\"sprite: \", Sprite);\n\nimport {\n  ThemeSelectWrapper,\n  ThemeSelects,\n  ThemeSelectIcon,\n  ThemeSelectTitle,\n} from './ThemeSelect.styled';\n\nconst ThemeSelect = () => {\n  const [isListOpen, setIsListOpen] = useState(false);\n  const [selectedTheme, setSelectedTheme] = useState('light');\n\n  useEffect(() => {\n    // console.log(\"useEffect\", selectedTheme);\n    document.body.setAttribute('data-theme', selectedTheme);\n  }, [selectedTheme]);\n\n  const handleThemeToggle = theme => {\n    setSelectedTheme(theme);\n    setIsListOpen(false);\n  };\n\n  return (\n    <>\n      <ThemeSelectTitle onClick={() => setIsListOpen(!isListOpen)}>\n        Theme\n        <ThemeSelectIcon aria-label=\"theme-select icon\">\n          <use href={sprite + '#icon-arrow-down'}></use>\n        </ThemeSelectIcon>\n      </ThemeSelectTitle>\n      {isListOpen && (\n        <ThemeSelectWrapper>\n          <ThemeSelects\n            theme={selectedTheme}\n            onClick={() => handleThemeToggle('light')}\n          >\n            Light\n          </ThemeSelects>\n          <ThemeSelects\n            theme={selectedTheme}\n            onClick={() => handleThemeToggle('dark')}\n          >\n            Dark\n          </ThemeSelects>\n          <ThemeSelects\n            theme={selectedTheme}\n            onClick={() => handleThemeToggle('violet')}\n          >\n            Violet\n          </ThemeSelects>\n        </ThemeSelectWrapper>\n      )}\n    </>\n  );\n};\n\nexport default ThemeSelect;\n","import ThemeSelect from './ThemeSelect/ThemeSelect';\n\nexport const Header = () => {\n  return (\n    <div>\n      Header\n      <ThemeSelect />\n    </div>\n  );\n};\n","export const regExpEmail = /^(?=.{1,64}@)[A-Za-z0-9_+-]+(\\.[A-Za-z0-9_+-]+)*@[^-.][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$/;","export const ERegisterFieldName = 'ERegisterFieldName';\nexport const ERegisterFieldEmail = 'ERegisterFieldEmail';\nexport const ERegisterFieldPassword = 'ERegisterFieldPassword';\n\nexport const getDefaultValuesForm = (name, email, password) => {\n  return {\n    [ERegisterFieldName]: name ?? '',\n    [ERegisterFieldEmail]: email ?? '',\n    [ERegisterFieldPassword]: password ?? '',\n  }\n};\n\nconst checkedField = [ERegisterFieldName, ERegisterFieldEmail, ERegisterFieldPassword];\nexport const isAllRequiredFieldsDirty = (dirtyFields) => {\n  return checkedField.every((el) => !!dirtyFields?.[el]);\n};\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { regExpEmail } from '../../utils.js/regex';\nimport {\n  ERegisterFieldEmail,\n  ERegisterFieldName,\n  ERegisterFieldPassword,\n  getDefaultValuesForm,\n  isAllRequiredFieldsDirty,\n} from './util';\nimport './style.css';\n// import { useEffect } from \"react\";\n\nexport const EditProfile = ({ toggle, open, HeaderRender }) => {\n  const [isShowPassword, setIsShowPassword] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, dirtyFields },\n  } = useForm({\n    shouldUnregister: true,\n    mode: 'onChange',\n    defaultValues: getDefaultValuesForm(),\n  });\n\n  const isFetching = false;\n  const isDisabledSubmitBtn =\n    !isAllRequiredFieldsDirty(dirtyFields) ||\n    !!Object.keys(errors).length ||\n    isFetching;\n\n  const togglePass = () => {\n    setIsShowPassword(prev => !prev);\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return (\n    <div className=\"edit-profile-wrapper\">\n      {HeaderRender('Edit profile')}\n      {/* <img></img> */}\n\n      <div className=\"wrapper-input\">\n        <input\n          autoComplete=\"off\"\n          disabled={isFetching}\n          className={errors?.ERegisterFieldName && 'error'}\n          type=\"text\"\n          {...register(ERegisterFieldName, {\n            required: 'This input is required.',\n            maxLength: {\n              value: 255,\n              message: 'This input must not exceed 255 characters',\n            },\n          })}\n        />\n        {errors?.ERegisterFieldName && (\n          <span className=\"error\">{errors.ERegisterFieldName.message}</span>\n        )}\n      </div>\n\n      <div className=\"wrapper-input\">\n        <input\n          autoComplete=\"off\"\n          disabled={isFetching}\n          className={errors?.ERegisterFieldEmail && 'error'}\n          type=\"text\"\n          {...register(ERegisterFieldEmail, {\n            required: 'This input is required.',\n            pattern: {\n              value: regExpEmail,\n              message: 'Invalid email address',\n            },\n            maxLength: {\n              value: 255,\n              message: 'This input must not exceed 255 characters',\n            },\n          })}\n        />\n        {errors?.ERegisterFieldEmail && (\n          <span className=\"error\">{errors.ERegisterFieldEmail.message}</span>\n        )}\n      </div>\n\n      <div className=\"wrapper-input\">\n        <div className=\"toggle_pass\">\n          <input\n            autoComplete=\"off\"\n            disabled={isFetching}\n            className={errors?.ERegisterFieldPassword && 'error'}\n            type={isShowPassword ? 'text' : 'password'}\n            {...register(ERegisterFieldPassword, {\n              required: 'This input is required.',\n              maxLength: {\n                value: 255,\n                message: 'This input must not exceed 255 characters',\n              },\n            })}\n          />\n          <span className=\"eye\" onClick={togglePass}></span>\n        </div>\n        {errors?.ERegisterFieldPassword && (\n          <span className=\"error\">{errors.ERegisterFieldPassword.message}</span>\n        )}\n      </div>\n\n      <button disabled={isDisabledSubmitBtn} onClick={handleSubmit(onSubmit)}>\n        Save\n      </button>\n    </div>\n  );\n};\n","export const ModalBodyWrapper = ({ children, manualControlBody }) => {\n  return (\n    <div className={!manualControlBody ? 'modal-body-wrapper' : ''}>\n      {children}\n    </div>\n  );\n};","import spriteIcon from '../../../images/sprite.svg'\nimport './style.css';\n\nexport const ModalHeader = ({ headerTitle, toggle }) => {\n  return (\n    <div className='modal-header'>\n      <div className='modal-header__title-wrapper'>\n        <span className='modal-header__title'>{headerTitle}</span>\n        <button className='modal-header__close' onClick={toggle}>\n          <svg className='modal-header__icon-close' aria-label=\"icon close\" width=\"18\" height=\"18\">\n          <use href={spriteIcon + '#icon-x-close'}></use>\n        </svg></button>\n      </div>\n    </div>\n  );\n};","import React, { Children } from 'react';\nimport { ModalBodyWrapper } from './ModalBodyWrapper';\nimport { ModalHeader } from './ModalHeader';\nimport './style.css';\n\nexport const Modal = ({\n  children,\n  open,\n  toggle,\n  manualControlBody = false,\n  ...props }) => {\n\n  const childrenWithProps = Children.map(children, (child) => {\n    return React.cloneElement(child, { toggle, open, HeaderRender: (headerTitle) => <ModalHeader {...{ headerTitle, toggle }} /> });\n  });\n\n  const activeClass = open ? 'active' : '';\n  return (\n    <>\n      {\n        (<div className={`modal ${activeClass}`} onClick={toggle} {...props} >\n          <div className={`modal__content ${activeClass}`} onClick={(e) => e.stopPropagation()}>\n            <ModalBodyWrapper {...{ manualControlBody }}>\n              {childrenWithProps}\n            </ModalBodyWrapper>\n          </div>\n        </div>)\n      }\n    </>\n  );\n};\n\n","import spriteIcon from '../../images/sprite.svg';\nimport './style.css';\nimport { Modal } from '../Modal';\nimport { EditProfile } from '../EditProfile';\nimport { useState } from 'react';\n\nexport const NeedHelp = () => {\n  const [open, setIsOpen] = useState(false);\n  const toggle = () => {\n    setIsOpen(prev => !prev);\n  };\n  return (\n    <div className=\"need-help__wrapper\">\n      <img\n        className=\"need-help__img\"\n        src=\"https://res.cloudinary.com/dxhypjavs/image/upload/v1687412198/command_project_task_pro_images/additionally/flowerpot.png\"\n        alt=\"\"\n      />\n      <p className=\"need-help__text\">\n        If you need help with <a href=\"*\">TaskPro</a>, check out our support\n        resources or reach out to our customer support team.\n      </p>\n      <button className=\"need-help__btn\" onClick={toggle}>\n        <svg\n          className=\"modal-header__icon-help-circle\"\n          aria-label=\"icon close\"\n          width=\"18\"\n          height=\"18\"\n        >\n          <use href={spriteIcon + '#icon-help-circle'}></use>\n        </svg>\n        <span className=\"need-help__btn-title\">Need help?</span>\n      </button>\n\n      {open && (\n        <Modal {...{ open, toggle }}>\n          <EditProfile />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { EditProfile } from \"./EditProfile\";\nimport { Modal } from \"./Modal\";\nimport { NeedHelp } from \"./NeedHelp/NeedHelp\";\nimport \"../assets/index.css\";\n\nexport const SideBar = () => {\n  const [open, setIsOpen] = useState(false);\n  const toggle = () => {\n    setIsOpen((prev) => !prev);\n  };\n\n  return (\n    <>\n      <button onClick={toggle}>open modal</button>\n      <h1>TaskPro</h1>\n      <NeedHelp></NeedHelp>\n\n      {open && (\n        <Modal {...{ open, toggle }}>\n          <EditProfile />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import { Header } from \"../components/Header\";\nimport { SideBar } from \"../components/SideBar\";\n\nconst HomePage = () => {\n\n  return (\n    <>\n      <Header />\n      <SideBar />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["ThemeSelectTitle","styled","_templateObject","_taggedTemplateLiteral","ThemeSelectWrapper","_templateObject2","ThemeSelects","_templateObject3","props","theme","children","toLowerCase","ThemeSelectIcon","_templateObject4","_useState","useState","_useState2","_slicedToArray","isListOpen","setIsListOpen","_useState3","_useState4","selectedTheme","setSelectedTheme","useEffect","document","body","setAttribute","handleThemeToggle","_jsxs","_Fragment","onClick","_jsx","href","sprite","Header","ThemeSelect","regExpEmail","ERegisterFieldName","ERegisterFieldEmail","ERegisterFieldPassword","getDefaultValuesForm","name","email","password","_ref","_defineProperty","checkedField","EditProfile","toggle","open","HeaderRender","isShowPassword","setIsShowPassword","_useForm","useForm","shouldUnregister","mode","defaultValues","register","handleSubmit","_useForm$formState","formState","errors","isFetching","isDisabledSubmitBtn","dirtyFields","every","el","isAllRequiredFieldsDirty","Object","keys","length","className","_objectSpread","autoComplete","disabled","type","required","maxLength","value","message","pattern","prev","data","console","log","ModalBodyWrapper","manualControlBody","ModalHeader","headerTitle","width","height","spriteIcon","Modal","_ref$manualControlBod","_objectWithoutProperties","_excluded","childrenWithProps","Children","child","React","activeClass","concat","e","stopPropagation","NeedHelp","setIsOpen","src","alt","SideBar"],"sourceRoot":""}