{"version":3,"file":"static/js/661.f7e4b3b1.chunk.js","mappings":"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","sources":["components/DefaultScreen/DefaultScreen.styled.js","components/DefaultScreen/DefaultScreen.jsx","components/ProjectOffice/ProjectOfficeStyle.jsx","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.styled.jsx","utils.js/formatDate.js","components/CardPopUp/CardPopUp.styled.jsx","taskServices/updateTask.js","taskServices/addTask.js","components/CardPopUp/CardPopUp.jsx","utils/dateFormatDedline.js","taskServices/deleteTask.js","components/ProjectOffice/ProjectOfficePopUpCardColumn/ProjectOfficePopUpCardColumn.styled.js","taskServices/changeOwnerTask.js","taskServices/fetchTask.js","components/ProjectOffice/ProjectOfficePopUpCardColumn/ProjectOfficePopUpCardColumn.js","components/ProjectOffice/ProjectOfficeCardItem/ProjectOfficeCardItem.jsx","components/ProjectOffice/ProjectOfficeItem/OfficeItemStyle.styled.jsx","components/ProjectOffice/ProjectCardAddButton/ProjectCardAddButton.jsx","components/Modal/ModalColumn/ModalColumn.styled.jsx","components/Modal/ModalColumn/ModalColumn.jsx","components/ProjectOffice/ProjectOfficeItem/ProjectOfficeItem.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeaderStyle.jsx","components/PopUpFilter/BgChange/BgChange.styled.jsx","components/PopUpFilter/BgChange/BgChange.jsx","components/PopUpFilter/Filter/Filter.styled.jsx","components/PopUpFilter/Filter/Filter.jsx","components/PopUpFilter/PopUpFilter.styled.jsx","components/PopUpFilter/PopUpFilter.jsx","components/ProjectOffice/ProjectOfficeHeader/ProjectOfficeHeader.jsx","components/ProjectOffice/AddColumnsButton/AddColumnsButton.jsx","components/ProjectOffice/ProjectOfficeBgContainer.styled.js","components/ProjectOffice/ProjectOffice.jsx","pages/ScreensPage.jsx","redux/dashboards/selectors.js","utils/bgImgPreview.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DefaultWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 200px;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  @media (min-width: 375px) {\n    min-width: 335px;\n    max-width: 486px;\n  }\n`;\n\nexport const DefaultText = styled.p`\n  font-size: 14px;\n  line-height: 1.3;\n  letter-spacing: -0.02em;\n  text-align: center;\n  color: var(--popupTextColor);\n`;\n\nexport const AccentText = styled.span`\n  color: var(--greenGreenBlueColor);\n`;\n","import { AccentText, DefaultText, DefaultWrapper } from \"./DefaultScreen.styled\"\n\nexport const DefaultScreen = () => {\n\n    return (\n        \n        <DefaultWrapper>\n            <DefaultText>Before starting your project, it is essential <AccentText>to create a board</AccentText> to visualize and track all the necessary tasks and milestones. This board serves as a powerful tool to organize the workflow and ensure effective collaboration among team members.</DefaultText>\n        </DefaultWrapper>\n    )\n}","import { styled } from '@mui/system';\nimport { Button, CardActions } from '@mui/material';\nimport Stack from '@mui/material/Stack';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const Wrapper = styled('div')({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  paddingTop: '5px',\n  marginRight: '10px',\n  gap: '5px',\n});\n\nexport const FilterWrapper = styled('div')({\n  marginRight: '10px',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n});\n\nexport const ActionsIconsButton = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  alignItems: 'center',\n});\n\nexport const CardWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  flexWrap: 'wrap',\n  height: '600px',\n  overflow: 'scroll',\n});\n\nexport const CardFooterStyled = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-start',\n  paddingRight: '20px',\n  paddingLeft: '20px',\n  gap: '15px',\n});\n\nexport const CardIconsWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n  paddingRight: '20px',\n  gap: '8px',\n  marginTop: '2px',\n});\n\nexport const CardActionsStyled = styled(CardActions)({\n  paddingRight: '20px',\n  paddingLeft: '20px',\n});\n\nexport const StackWrapper = styled(Stack)({\n  width: '330px',\n  height: '56px',\n  background: '#F6F6F7',\n  borderRadius: '8px',\n  marginBottom: '5px'\n});\n\nexport const CardButtonStyled = styled(Stack)({\n  width: '330px',\n  height: '56px',\n  background: '#BEDBB0',\n  borderRadius: '8px',\n  marginBottom: '20px',\n});\n\nexport const ButtonStyled = styled(Button)({\n  paddingLeft: '80px',\n  color: '#161616',\n  fontSize: '14px',\n  textTransform: 'none',\n});\n\nexport const AddIconStyled = styled(AddIcon)({\n  width: '28px',\n  height: '28px',\n  borderRadius: '8px',\n});\n","import styled from 'styled-components';\n\nexport const CardStyled = styled.p`\n  background: var(--cardItem);\n  max-width: 334px;\n  min-height: 154px;\n  border-radius: 8px;\n  margin-top: 15px;\n  margin-right: 10px;\n  margin-bottom: -10px;\n  border-left: 4px solid #8fa1d0;\n  border-left: 4px solid\n    ${props => {\n      switch (props.priority) {\n        case 'low':\n          return '#8FA1D0';\n        case 'medium':\n          return '#E09CB5';\n        case 'high':\n          return '#BEDBB0';\n        case 'without':\n          return ' var(--calendarWithoutColor)';\n        default:\n          return '#000000';\n      }\n    }};\n`;\n\nexport const CardTitle = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n  margin-bottom: 7px;\n`;\n\nexport const CardText = styled.p`\n  color: var(--cardItemText);\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 300px;\n`;\n\nexport const CardFooterTitle = styled.p`\n  color: var(--cardItemText);\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 12px;\n  padding-top: 5px;\n`;\n\nexport const DividerStyled = styled.div`\n  background: var(--cardItemText);\n  width: 300px;\n  height: 1px;\n`;\n\nexport const WrapperFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const WrapperText = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 15px;\n  padding-top: 8px;\n`;\n\nexport const StatusWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const StatusStyled = styled.div`\n  width: 12px;\n  height: 12px;\n  background: ${props => {\n    switch (props.priority) {\n      case 'low':\n        return '#8FA1D0';\n      case 'medium':\n        return '#E09CB5';\n      case 'high':\n        return '#BEDBB0';\n      case 'without':\n        return ' var(--calendarWithoutColor)';\n      default:\n        return '#000000';\n    }\n  }};\n  border-radius: 50%;\n`;\n\nexport const SvgIconsStyled = styled.svg`\n  stroke: var(--iconCardColor);\n  &:hover,\n  &:focus {\n    stroke: #bedbb0;\n    box-shadow: 0px 0px 0px 0px #87d3ae;\n  }\n`;\n","function isSameDay(date1, date2) {\n  return (\n    date1.getDate() === date2.getDate() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getFullYear() === date2.getFullYear()\n  );\n}\n\nexport const formatDate = date => {\n  const today = new Date();\n  const tomorrow = new Date(today);\n  const optionsAllDays = date.toLocaleDateString('en-US', {\n    weekday: 'long',\n  });\n  const optionsNearestDays = date.toLocaleDateString('en-US', {\n    month: 'long',\n  });\n\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  if (isSameDay(date, today)) {\n    return `Today, ${optionsNearestDays} ${date.getDate()}`;\n  } else if (isSameDay(date, tomorrow)) {\n    return `Tomorrow, ${optionsNearestDays} ${date.getDate()}`;\n  } else {\n    const formattedDate = `${optionsAllDays} ${date.getDate()}`;\n    return formattedDate;\n  }\n};\n","import styled, { css } from 'styled-components';\nimport { Dialog } from '@mui/material';\n\nexport const CustomDialog = styled(Dialog)({\n  '& .MuiPaper-root': {\n    backgroundColor: 'var(--themeListBgColor)',\n    maxWidth: '350px',\n    padding: '24px',\n    margin: '0px',\n    border: '1px solid var(--modalBorderColor)',\n    borderRadius: '8px',\n    overflow: 'hidden',\n  },\n\n  '& .MuiDialogContent-root': {\n    padding: '0px',\n  },\n});\n\nexport const WrapperPopUp = styled.div`\n  width: 100%;\n  min-height: 355px;\n  padding: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--modalBorderColor);\n  background: var(--themeListBgColor);\n  box-shadow: 0px 4px 16px 0px var(--boxShadowColor);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 340px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 400px;\n  }\n`;\n\nconst hoverFocusStyles = css`\n  border: 1px solid var(--greenGreenBlueColor);\n  opacity: 0.7;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 7px;\n  margin-right: 14px;\n  /* font-size: 10px; */\n  line-height: 0;\n  color: var(--primaryTextColor);\n  /* color: red; */\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  min-width: 302px;\n`;\nexport const FormText = styled.label`\n  color: var(--primaryTextColor);\n  text-align: start;\n  margin-bottom: 24px;\n  font-size: 18px;\n  font-weight: 500;\n`;\nexport const FromInput = styled.input`\n  background-color: var(--themeListBgColor);\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--passiveBorderColor);\n  outline: none;\n  transition: opacity var(--transition_data);\n  color: var(--primaryTextColor);\n  &:hover {\n    ${hoverFocusStyles};\n  }\n  &:focus {\n    ${hoverFocusStyles};\n  }\n  &:placeholder {\n    color: var(--calendarSecondTextColor);\n  }\n`;\n\nexport const FormTextarea = styled.textarea`\n  background-color: var(--themeListBgColor);\n  vertical-align: text-top;\n  resize: none;\n  min-height: 154px;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--passiveBorderColor);\n  outline: none;\n  transition: opacity var(--transition_data);\n  color: var(--primaryTextColor);\n  &::placeholder {\n  }\n  &:hover {\n    ${hoverFocusStyles};\n  }\n  &:focus {\n    ${hoverFocusStyles};\n  }\n  &:placeholder {\n    color: var(--calendarSecondTextColor);\n  }\n`;\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 14px;\n`;\n\nexport const RadioLabel = styled.label`\n  --radio-background-color: ${props => {\n    switch (props.value) {\n      case 'low':\n        return '#8FA1D0';\n      case 'medium':\n        return '#E09CB5';\n      case 'high':\n        return '#BEDBB0';\n      case 'without':\n        return ' var(--calendarWithoutColor)';\n      default:\n        return '#000000';\n    }\n  }};\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  cursor: pointer;\n  background-color: var(--radio-background-color);\n`;\n\nexport const RadioButton = styled.input`\n  display: none;\n  &:checked + ${RadioLabel} {\n    width: 8px;\n    height: 8px;\n    position: relative;\n    &:before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      width: 14px;\n      height: 14px;\n      background-color: transparent;\n      border: 1px solid var(--radio-background-color);\n      border-radius: 50%;\n    }\n  }\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 14px;\n  &:not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const Text = styled.span`\n  color: var(--calendarSecondTextColor);\n  font-size: 12px;\n  margin-bottom: 6px;\n`;\n\nexport const CalendarWrapp = styled.div`\n  display: flex;\n\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  margin-bottom: 40px;\n  transition: opacity var(--transition_data);\n  &:hover {\n    opacity: 0.7;\n  }\n  &:focus {\n    opacity: 0.7;\n  }\n`;\nexport const CalendarText = styled.span`\n  color: var(--greenGreenBlueColor);\n  margin-right: 4px;\n`;\n\nexport const CalendarArrow = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: var(--greenGreenBlueColor);\n`;\n","import axios from 'axios';\n\nexport const updateTask = async (boardId, columnId, taskId, data) => {\n  try {\n    const res = await axios.put(\n      `/boards/${boardId}/columns/${columnId}/tasks/${taskId} `,\n      data\n    );\n    return res;\n  } catch (e) {\n    console.log('e.message', e.message);\n  }\n};\n","import axios from 'axios';\n\nexport const addTask = async (data, boardId, columnId) => {\n  try {\n    const res = await axios.post(\n      `/boards/${boardId}/columns/${columnId}/tasks`,\n      data\n    );\n\n    return res;\n  } catch (e) {\n    console.log('e.message', e.message);\n  }\n};\n","import { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport sprite from '../../images/sprite.svg';\nimport { formatDate } from 'utils.js/formatDate';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './calendar.css';\nimport {\n  Form,\n  FormText,\n  FromInput,\n  FormTextarea,\n  RadioGroup,\n  RadioButton,\n  RadioLabel,\n  Wrap,\n  Text,\n  CalendarWrapp,\n  CalendarText,\n  CalendarArrow,\n  CustomDialog,\n  CloseButton,\n} from './CardPopUp.styled';\n\nimport { CustomButton } from 'components/Button/CustomButton';\nimport { pureFinalPropsSelectorFactory } from 'react-redux/es/connect/selectorFactory';\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { updateTask } from 'taskServices/updateTask';\nimport { addTask } from 'taskServices/addTask';\n\nexport const CardPopUp = ({\n  isOpen,\n  onClose,\n  boardId,\n  columnId,\n  setTasks,\n  task,\n}) => {\n  const {\n    _id: taskId,\n    title,\n    description,\n    priority,\n    deadline,\n  } = task\n    ? { ...task }\n    : {\n        _id: null,\n        title: '',\n        description: '',\n        priority: 'without',\n        deadline: new Date(),\n      };\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    reset,\n    formState: { errors },\n  } = useForm({ defaultValues: { title, description, priority, deadline } });\n\n  const onSubmit = async data => {\n    if (task) {\n      const res = await updateTask(boardId, columnId, taskId, data);\n\n      setTasks(p => {\n        return p.map(task => {\n          if (task._id === res.data.task._id) {\n            return res.data.task;\n          }\n          return task;\n        });\n      });\n    } else {\n      const res = await addTask(data, boardId, columnId);\n\n      setTasks(s => {\n        return [...s, res.data.task];\n      });\n    }\n    reset();\n    onClose();\n  };\n  const [unixFromat, setUnixFormat] = useState(\n    new Date(new Date().toUTCString()).getTime()\n  );\n\n  const [dateBtn, setDateBtn] = useState(new Date(deadline));\n  const [showDatePicker, setShowDatePicker] = useState(false);\n\n  const handleDateInputChange = date => {\n    const UTC = date.toUTCString();\n    const UNIX = new Date(UTC).getTime();\n    setDateBtn(date);\n    setUnixFormat(UNIX);\n    setValue('deadline', UNIX.toString());\n    setShowDatePicker(false);\n  };\n  const toggleDatePicker = () => {\n    setShowDatePicker(prevState => !prevState);\n  };\n  return (\n    <CustomDialog open={isOpen} onClose={onClose}>\n      <CloseButton type=\"button\" onClick={onClose}>\n        <CloseIcon sx={{ fontSize: 'medium' }} style={{ marginTop: '14px' }} />\n      </CloseButton>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <FormText>{'Add card'}</FormText>\n        <FromInput\n          {...register('title', {\n            minLength: 3,\n            required: pureFinalPropsSelectorFactory,\n          })}\n          placeholder=\"Title\"\n        />\n        <FormTextarea\n          placeholder=\"Description\"\n          {...register('description', { minLength: 3, required: false })}\n        ></FormTextarea>\n        <Text>Label color</Text>\n        <RadioGroup>\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"low\"\n              {...register('priority')}\n              value=\"low\"\n            />\n            <RadioLabel\n              htmlFor=\"low\"\n              value=\"low\"\n              checked={register('priority').value === 'low'}\n            />\n          </Wrap>\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"medium\"\n              {...register('priority')}\n              value=\"medium\"\n            />\n            <RadioLabel\n              htmlFor=\"medium\"\n              value=\"medium\"\n              checked={register('priority').value === 'medium'}\n            />\n          </Wrap>\n\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"high\"\n              {...register('priority')}\n              value=\"high\"\n            />\n            <RadioLabel\n              htmlFor=\"high\"\n              value=\"high\"\n              checked={register('priority').value === 'high'}\n            />\n          </Wrap>\n\n          <Wrap>\n            <RadioButton\n              type=\"radio\"\n              id=\"without\"\n              {...register('priority', { required: false })}\n              value=\"without\"\n              checked={true}\n            />\n            <RadioLabel\n              htmlFor=\"without\"\n              value=\"without\"\n              checked={register('priority').value === 'without'}\n            />\n          </Wrap>\n        </RadioGroup>\n        <Text>Deadline</Text>\n        <CalendarWrapp onClick={toggleDatePicker}>\n          <CalendarText>{formatDate(dateBtn)}</CalendarText>\n          <CalendarArrow\n            style={{ width: 18, height: 18 }}\n            aria-label=\"open theme select icon\"\n          >\n            <use href={sprite + '#icon-arrow-down'}></use>\n          </CalendarArrow>\n        </CalendarWrapp>\n        <input\n          {...register('deadline', { value: unixFromat.toString() })}\n          style={{ display: 'none' }}\n        />\n        {showDatePicker && (\n          <DatePicker\n            selected={new Date()}\n            onChange={handleDateInputChange}\n            dateFormat=\"dd/MM/yyyy\"\n            inline\n            minDate={new Date()}\n          />\n        )}\n        {errors.exampleRequired && <span>This field is required</span>}\n        {task && <CustomButton type=\"submit\">{'Edit'}</CustomButton>}\n        {!task && <CustomButton type=\"submit\">{'Add'}</CustomButton>}\n      </Form>\n    </CustomDialog>\n  );\n};\n","export const dateFormatDedline = deadline => {\n  const seconds = new Date(deadline);\n  const day = seconds.getDate();\n  const month = seconds.getMonth() + 1;\n  const monthFormat = month < 10 ? `0${month}` : `${month}`;\n\n  const year = seconds.getFullYear();\n  return `${day}/${monthFormat}/${year}`;\n};\n","import axios from 'axios';\n\nexport const deleteTask = async (boardId, columnId, taskId) => {\n  try {\n    await axios.delete(\n      `/boards/${boardId}/columns/${columnId}/tasks/${taskId}`\n    );\n    return true;\n  } catch (e) {\n    console.log('e.message', e.message);\n  }\n};\n","import styled from 'styled-components';\n\n// import { Dialog } from '@mui/material';\n\n// export const CustomDialog = styled(Dialog)({\n//   '& .MuiPaper-root': {\n//     backgroundColor: 'var(--themeListBgColor)',\n//     maxWidth: '350px',\n//     padding: '24px',\n//     margin: '0px',\n//     border: '1px solid var(--modalBorderColor)',\n//     borderRadius: '8px',\n//     overflow: 'hidden',\n//   },\n\n//   '& .MuiDialogContent-root': {\n//     padding: '0px',\n//   },\n// });\n\n// export const CloseButton = styled.button`\n//   position: absolute;\n//   top: 0;\n//   right: 0;\n//   padding: 7px;\n//   margin-right: 14px;\n//   /* font-size: 10px; */\n//   line-height: 0;\n//   color: var(--primaryTextColor);\n//   /* color: red; */\n//   border: none;\n//   background-color: transparent;\n//   cursor: pointer;\n// `;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding-top: 14px;\n  border-top: 1px solid var(--modalGorizontalBorderColor);\n`;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  /* color: var(--primaryTextColor); */\n  color: red;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  background: inherit;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  text-decoration-line: underline;\n\n  /* color: var(--popupTextColor); */\n  color: red;\n\n  cursor: pointer;\n`;\n","import axios from 'axios';\n\nexport const changeOwnerTask = async (boardId, columnId, taskId, data) => {\n  try {\n    const res = await axios.put(\n      `/boards/${boardId}/columns/${columnId}/tasks/${taskId} `,\n      data\n    );\n    return res;\n  } catch (e) {\n    console.log('e.message', e.message);\n  }\n};\n","import axios from 'axios';\n\nexport const fetchTasks = async (boardId, columnId) => {\n  try {\n    const { data } = await axios.get(\n      `/boards/${boardId}/columns/${columnId}/tasks`\n    );\n    return data;\n  } catch (e) {\n    console.log('e.message', e.message);\n  }\n};\n","import { useDispatch } from 'react-redux';\nimport {\n  Title,\n  Container,\n  Button,\n  //   CustomDialog,\n} from './ProjectOfficePopUpCardColumn.styled';\nimport { changeOwnerTask } from 'taskServices/changeOwnerTask';\nimport { getColumnsForBoard } from 'redux/dashboards/operation';\nimport { fetchTasks } from 'taskServices/fetchTask';\n\nexport const ProjectOfficePopUpCardColumn = ({\n  columns,\n  isOpenPopUp,\n  handleTogglePopUp,\n  task,\n  columnId,\n  boardId,\n  setTasks,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleChangeOnerTask = async newOwner => {\n    const { deadline, description, priority, title } = task;\n    await changeOwnerTask(boardId, columnId, task._id.toString(), {\n      deadline,\n      description,\n      priority,\n      title,\n      owner: newOwner,\n    });\n\n    await dispatch(getColumnsForBoard(boardId));\n    const { tasks } = await fetchTasks(boardId, columnId);\n    setTasks(tasks);\n  };\n\n  return (\n    <>\n      {/* <CustomDialog open={isOpenPopUp} onClose={handleTogglePopUp}> */}\n      <Container>\n        <ul>\n          {columns.map(column => {\n            if (column._id === columnId) {\n              return null;\n            }\n            return (\n              <li key={column._id}>\n                <Container>\n                  <Title>{column.title}</Title>\n                  <Button\n                    type=\"button\"\n                    onClick={() => handleChangeOnerTask(column._id)}\n                  >\n                    Click me\n                  </Button>\n                </Container>\n              </li>\n            );\n          })}\n        </ul>\n      </Container>\n      {/* </CustomDialog> */}\n    </>\n  );\n};\n","import {\n  CardActionsStyled,\n  CardFooterStyled,\n  CardIconsWrapper,\n} from '../ProjectOfficeStyle';\nimport CardContent from '@mui/material/CardContent';\nimport { Button, CardActionArea } from '@mui/material';\nimport {\n  CardStyled,\n  CardTitle,\n  CardText,\n  CardFooterTitle,\n  DividerStyled,\n  WrapperFooter,\n  WrapperText,\n  StatusWrapper,\n  StatusStyled,\n  SvgIconsStyled,\n} from './ProjectOfficeCardItem.styled';\n\nimport { useState } from 'react';\nimport { CardPopUp } from 'components/CardPopUp/CardPopUp';\n\nimport { dateFormatDedline } from 'utils/dateFormatDedline';\nimport { deleteTask } from 'taskServices/deleteTask';\nimport sprite from '../../../images/sprite.svg';\nimport { ProjectOfficePopUpCardColumn } from '../ProjectOfficePopUpCardColumn/ProjectOfficePopUpCardColumn';\nimport { useSelector } from 'react-redux';\nimport { selectColumnsForBoard } from 'redux/dashboards/selectors';\n\nconst ProjectOfficeCardItem = ({ task, boardId, columnId, setTasks }) => {\n  const { _id: taskId, title, description, priority, deadline } = task;\n\n  const columns = useSelector(state => selectColumnsForBoard(state, boardId));\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenPopUp, setIsOpenPopUp] = useState(false);\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  const handleTogglePopUp = () => {\n    setIsOpenPopUp(prevstate => !prevstate);\n  };\n\n  const handleDeleteTask = async () => {\n    await deleteTask(boardId, columnId, taskId.toString());\n    setTasks(p => {\n      return p.filter(task => task._id !== taskId);\n    });\n  };\n\n  return (\n    <>\n      <CardStyled key={taskId} priority={priority}>\n        <CardActionArea>\n          <CardContent>\n            <CardTitle component=\"div\">{title}</CardTitle>\n                <CardText>{description}</CardText>\n          </CardContent>\n        </CardActionArea>\n        <CardActionsStyled>\n          <DividerStyled />\n        </CardActionsStyled>\n        <CardFooterStyled>\n          <CardFooterTitle>Priority</CardFooterTitle>\n          <CardFooterTitle>Deadline</CardFooterTitle>\n        </CardFooterStyled>\n\n        <WrapperFooter>\n          <CardFooterStyled>\n            <WrapperText>\n              <StatusWrapper>\n                <StatusStyled priority={priority} />\n                {priority}\n              </StatusWrapper>\n            </WrapperText>\n\n            <WrapperText>{dateFormatDedline(deadline)}</WrapperText>\n          </CardFooterStyled>\n\n          <CardIconsWrapper>\n            <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-bell`}></use>\n            </SvgIconsStyled>\n\n            <Button\n              sx={{ padding: 0, width: '20px', minWidth: '0' }}\n              onClick={handleTogglePopUp}\n            >\n            <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-arrow-circle-broken-right`}></use>\n            </SvgIconsStyled>\n            </Button>\n            <Button\n            onClick={handleToggleModal}\n              sx={{ padding: 0, width: '20px', minWidth: '0', '&.MuiButtonBase-root.MuiButton-root:hover': { backgroundColor: '#121212'} }}\n            >\n            <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-pencil`}></use>\n            </SvgIconsStyled>\n            </Button>\n            <Button\n              onClick={handleDeleteTask}\n              sx={{ padding: 0, width: '20px', minWidth: '0', '&.MuiButtonBase-root.MuiButton-root:hover': { backgroundColor: '#121212'}  }}\n            >\n            <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-trash`}></use>\n            </SvgIconsStyled>\n            </Button>\n          </CardIconsWrapper>\n        </WrapperFooter>\n      </CardStyled>\n      {isOpen && (\n        <CardPopUp\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          columnId={columnId}\n          boardId={boardId}\n          setTasks={setTasks}\n          task={task}\n        />\n      )}\n      {isOpenPopUp && (\n        <ProjectOfficePopUpCardColumn\n          isOpenPopUp={isOpenPopUp}\n          onClose={handleTogglePopUp}\n          columns={columns}\n          columnId={columnId}\n          boardId={boardId}\n          setTasks={setTasks}\n          task={task}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ProjectOfficeCardItem;\n","import styled from 'styled-components';\n\nexport const ActionsButton = styled.div`\n    background: var(--actionsButton);\n    width: 334px; \n    height: 56px;\n    border-radius: 8px;\n    padding: 20px;\n    display: flex; \n    justify-content: space-between;\n`;\n\nexport const StyledTitle = styled.p`\n    color: var(--primaryTextColor);\n    font-weight: 500; \n    font-size: 14px;\n    line-height: 21px;\n`;\n\nexport const IconButtonWrapper = styled.button`\n    background: inherit;\n    border: none;\n    margin-right: -8px;\n    cursor: pointer;\n`;\n\n","import { useState } from 'react';\nimport {\n  Wrapper,\n  CardButtonStyled,\n} from '../ProjectOfficeStyle';\nimport { CardPopUp } from 'components/CardPopUp/CardPopUp';\nimport { CustomButton } from 'components/Button/CustomButton';\n\nconst ProjectCardAddButton = ({ columnId, boardId, setTasks, task }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        {/* {Array.from(Array(3)).map((_, index) => ( */}\n        {/* <CardButtonStyled direction=\"row\" spacing={2} key={index}> */}\n        <CardButtonStyled direction=\"row\" spacing={2}>\n            <CustomButton isWhiteBackground={false} onClick={handleToggleModal}>\n            Add another card\n            </CustomButton>\n          {/* <ButtonStyled\n            startIcon={<AddIconStyled />}\n            onClick={handleToggleModal}\n          >\n            Add another card\n          </ButtonStyled> */}\n        </CardButtonStyled>\n        {/* ))} */}\n      </Wrapper>\n      {isOpen && (\n        <CardPopUp\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          columnId={columnId}\n          boardId={boardId}\n          setTasks={setTasks}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ProjectCardAddButton;\n","import { TextField, Dialog } from \"@mui/material\";\n// import { styled } from '@mui/system';\nimport styled from 'styled-components';\n\n\nexport const StyleInput = styled(TextField)`\n  /* background-color: var(--currentLinkBgColor); */\n  max-width: 302px;\n  margin-bottom: 24px;\n\n        & label.Mui-focused {\n          color: #fff;\n        };\n\n  & .MuiInputBase-input {\n          padding: 14px 16px;\n          color: var(--primaryTextColor);\n          background-color: var(--currentLinkBgColor);\n\n        };\n\n        & .MuiFormLabel-root {\n          color: #fff;\n        };\n\n  & .MuiInputBase-root {\n          opacity: 0.4;\n    border-radius: 8px;\n              margin-bottom: 24px;\n    & :hover {\n      opacity: 1.0;\n    };\n\n    & :focus {\n      opacity: 1.0;\n    }\n        };\n\n        & .MuiOutlinedInput-root {\n          & fieldset {\n            border-color: #BEDBB0;\n          };\n          & :hover fieldset {\n            border-color: #BEDBB0;\n          };\n          & .Mui-focused fieldset {\n            border-color: #BEDBB0;\n          };\n        };\n`\n\nexport const CustomDialog = styled(Dialog)`\n  \n  & .MuiPaper-root {\n    background-color: var(--themeListBgColor);\n    max-width: 350px;\n    padding: 24px;\n  margin: 0px;\n  };\n\n  & .MuiDialogContent-root {\n    padding: 0px;\n  }\n\n`","import { DialogTitle, Box, DialogContent } from \"@mui/material\";\nimport { CustomButton } from \"../../Button/CustomButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { CustomDialog, StyleInput } from \"./ModalColumn.styled\";\nimport { useState } from \"react\";\n\nexport const ModalColumn = ({ isOpen, onClose, type = \"create\", initialState = '', onRemove, onUpdate }) => {\n  const [title, setTitle] = useState(initialState);\n\n  const reset = () => {\n    setTitle('');\n  }\n\n  const handleClose = () => { \n    reset();\n    onClose();\n  }\n\n  const handleChange = ({ target }) => { \n    setTitle(target.value);\n  }\n\n  const handleButtonClick = (title) => { \n    if (type === \"create\") { \n      onRemove(title);\n      handleClose();\n    }\n    if (type === \"edit\") {\n      console.log(title)\n      onUpdate(title);\n      handleClose();\n    }\n\n    \n  }\n\n\n  return (\n    <CustomDialog\n      open={isOpen}\n      fullWidth={true}\n      onClose={handleClose}\n      position=\"relative\"\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        marginBottom=\"24px\"\n      >\n        <DialogTitle\n          sx={{\n            color: \"var(--primaryTextColor)\",\n            padding: \"0\",\n            fontFamily: \"Poppins, sans-serif\",\n            fontSize: \"18px\",\n            lineHeight: \"1.5\",\n          }}\n        >\n          {type === 'create' ? 'Add Column' : 'Edit Column'}\n        </DialogTitle>\n        <CloseIcon\n          onClick={handleClose}\n          sx={{\n            color: \"var(--primaryTextColor)\",\n            position: \"absolute\",\n            top: \"14px\",\n            right: \"14px\",\n            height: \"18px\",\n            width: \"18px\",\n            cursor: \"pointer\",\n          }}\n        />\n      </Box>\n      <DialogContent>\n        <StyleInput\n          autoFocus\n          id=\"title\"\n          placeholder=\"Title\"\n          name=\"title\"\n          type=\"text\"\n          fullWidth\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: false }}\n          value={title}\n          onChange={handleChange}\n        />\n        <CustomButton onClick={() => handleButtonClick(title)} style={{height: '49px !important'}}>\n          {type === 'create' ? 'Add' : 'Edit'}\n        </CustomButton>\n      </DialogContent>\n    </CustomDialog>\n  );\n};","import { Wrapper, ActionsIconsButton } from '../ProjectOfficeStyle';\nimport ProjectOfficeCardItem from '../ProjectOfficeCardItem/ProjectOfficeCardItem';\nimport { ActionsButton, IconButtonWrapper, StyledTitle } from './OfficeItemStyle.styled';\nimport { useEffect, useState } from 'react';\n\nimport ProjectCardAddButton from '../ProjectCardAddButton/ProjectCardAddButton';\n\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\nimport { fetchTasks } from 'taskServices/fetchTask';\nimport sprite from '../../../images/sprite.svg';\nimport { SvgIconsStyled } from '../ProjectOfficeCardItem/ProjectOfficeCardItem.styled';\n\nconst ProjectOfficeItem = ({\n  column,\n  boardId,\n  onDelete,\n  handleEditColumnName,\n}) => {\n  const { title, _id: columnId } = column;\n\n  const [tasks, setTasks] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleUpdate = newName => {\n    console.log(boardId);\n    console.log(columnId);\n    console.log(newName);\n    handleEditColumnName({ boardId, columnId, title: newName });\n  };\n\n  useEffect(() => {\n    const fetchTasksApi = async (boardId, columnId) => {\n      const data = await fetchTasks(boardId, columnId);\n      setTasks(data.tasks);\n    };\n    fetchTasksApi(boardId, columnId);\n  }, [boardId, columnId, column]);\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', overflow: 'scroll', maxHeight: '600px'}}>\n      <Wrapper>\n        <ActionsButton key={Date.now()}>\n          <StyledTitle>{title}</StyledTitle>\n          <ActionsIconsButton>\n            <IconButtonWrapper type=\"button\" onClick={handleToggle}>\n            <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-pencil`}></use>\n            </SvgIconsStyled>\n            </IconButtonWrapper>\n            <IconButtonWrapper type=\"button\" onClick={() => onDelete(boardId, columnId)}>\n            <SvgIconsStyled aria-label=\"close modal select icon\" width={16} height={16}>\n                <use href={`${sprite}#icon-trash`}></use>\n            </SvgIconsStyled>\n            </IconButtonWrapper>\n          </ActionsIconsButton>\n        </ActionsButton>\n      </Wrapper>\n      {tasks &&\n        tasks.map(task => (\n          <ProjectOfficeCardItem\n            key={task._id}\n            task={task}\n            columnId={columnId}\n            boardId={boardId}\n            setTasks={setTasks}\n          />\n        ))}\n        <div style={{marginTop: '10px'}}>\n        <ProjectCardAddButton\n            columnId={columnId}\n            boardId={boardId}\n            setTasks={setTasks}\n        />\n        </div>\n      <ModalColumn\n        isOpen={isOpen}\n        onClose={handleToggle}\n        type=\"edit\"\n        onUpdate={handleUpdate}\n      />\n    </div>\n  );\n};\n\nexport default ProjectOfficeItem;\n","import styled from 'styled-components';\n\nexport const Title = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 20px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nexport const FilterText = styled.p`\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  cursor: pointer;\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--primaryTextColor);\n`;\n\nexport const BtnFilter = styled.button`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  justify-content: center;\n\n  color: var(--cardHeaderText);\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n\n  width: 64px;\n  height: 20px;\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  border: none;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nexport const PopUpFilterWrapper = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  z-index: 999;\n`;\n\nexport const PopUpFilterContent = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background: #fff;\n  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\n  padding: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const BgContainer = styled.div``;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0;\n`;\n\nexport const ButtonContainer = styled.div`\n  max-width: 252px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n\n  box-sizing: border-box;\n  padding: 14px 0;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-content: center;\n  justify-content: center;\n\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n\n  img {\n    display: block;\n    max-width: 100%;\n    max-height: 100%;\n    border-radius: 6px;\n  }\n\n  &.active {\n    border: 2px solid rgba(190, 219, 176, 1);\n    /* transform: scale(0.95); */\n  }\n`;\n\nexport const ButtonNoneBg = styled.button`\n  width: 28px;\n  height: 28px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  border-radius: 6px;\n  background-color: var(--defaultAvatarBgColor);\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-image: url();\n  background-size: cover;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--defaultImgColor);\n  fill: none;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  getColumnsForBoard,\n  updateUserBoard,\n} from 'redux/dashboards/operation';\n\nimport sprite from '../../../images/sprite.svg';\nimport {\n  Button,\n  ButtonNoneBg,\n  ButtonContainer,\n  Title,\n  SvgIcons,\n  BgContainer,\n} from './BgChange.styled';\nimport { images } from '../../../utils/bgImgPreview';\n\nconst buttonsImg = images;\n\nexport const BgChange = React.memo(() => {\n  const [loadedImages, setLoadedImages] = useState([]);\n\n  const dispatch = useDispatch();\n  const { boardName } = useParams();\n\n  const board = useSelector(state =>\n    state.dashboard.dashboards.find(item => item._id === boardName)\n  );\n\n  const backgroundId = board.background.toString();\n\n  useEffect(() => {\n    const loadImage = async imageUrl => {\n      try {\n        const response = await fetch(imageUrl);\n        if (response.ok) {\n          return await response.blob();\n        }\n        throw new Error('Image loading failed.');\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const loadImages = async () => {\n      const promises = buttonsImg.map(button =>\n        loadImage(button.backgroundImage)\n      );\n\n      try {\n        const results = await Promise.allSettled(promises);\n        const images = results\n          .filter(result => result.status === 'fulfilled')\n          .map(result => result.value);\n        setLoadedImages(images);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    loadImages();\n  }, []);\n\n  const handleButtonClick = async id => {\n    const data = {\n      title: board.title,\n      dashboardIcon: board.dashboardIcon,\n      background: `${id}`,\n    };\n\n    await dispatch(updateUserBoard({ boardId: board._id, board: data }));\n    await dispatch(getColumnsForBoard(boardName));\n  };\n\n  return (\n    <BgContainer>\n      <Title>Background</Title>\n      <ButtonContainer>\n        <ButtonNoneBg type=\"button\" onClick={() => handleButtonClick(0)}>\n          <SvgIcons width={18} height={18}>\n            <use href={sprite + '#icon-bg-default'} />\n          </SvgIcons>\n        </ButtonNoneBg>\n        {buttonsImg.map(button => (\n          <Button\n            key={button.id}\n            type=\"button\"\n            style={{\n              backgroundImage: `url(${button.backgroundImage})`,\n              backgroundSize: 'cover',\n            }}\n            onClick={() => handleButtonClick(button.id)}\n            className={\n              backgroundId.toString() === button.id.toString() ? 'active' : ''\n            }\n          >\n            {loadedImages[button.id] && (\n              <img\n                srcSet={`${button.backgroundImage} 1x, ${button.retinaBackgroundImage} 2x`}\n                alt=\"\"\n              />\n            )}\n          </Button>\n        ))}\n      </ButtonContainer>\n    </BgContainer>\n  );\n});\n","import styled from 'styled-components';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nexport const RadioGr = styled(RadioGroup)`\n  margin: 8px 0 0 32px;\n`;\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding-top: 14px;\n  border-top: 1px solid var(--modalGorizontalBorderColor);\n`;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const BtnShowAll = styled.button`\n  border: none;\n  background: inherit;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  text-decoration-line: underline;\n\n  color: var(--popupTextColor);\n`;\n\nexport const radioButtons = [\n  {\n    value: 'withoutPriority',\n    label: 'Without priority',\n    color: '#5B5B5B',\n    checkedColor: '#5B5B5B',\n    buttonColor: '#5B5B5B',\n  },\n  {\n    value: 'low',\n    label: 'Low',\n    color: '#5B5B5B',\n    checkedColor: '#8FA1D0',\n    buttonColor: '#8FA1D0',\n  },\n  {\n    value: 'medium',\n    label: 'Medium',\n    color: '#5B5B5B',\n    checkedColor: '#E09CB5',\n    buttonColor: '#E09CB5',\n  },\n  {\n    value: 'high',\n    label: 'High',\n    color: '#5B5B5B',\n    checkedColor: '#BEDBB0',\n    buttonColor: '#BEDBB0',\n  },\n];\n","import React, { useState } from 'react';\nimport Radio from '@mui/material/Radio';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport {\n  Title,\n  FilterContainer,\n  BtnShowAll,\n  RadioGr,\n  radioButtons,\n} from './Filter.styled';\n\nexport const Filter = () => {\n  const [selectedValue, setSelectedValue] = useState('');\n\n  const primaryTextColor = `var(--primaryTextColor)`;\n\n  // const handleChange = event => {\n  //   setSelectedValue(event.target.value);\n  // };\n\n  const handleReset = () => {\n    setSelectedValue('');\n  };\n\n  const handleShowAll = () => {\n    console.log('Show all selected');\n    handleReset();\n  };\n\n  const handleRadioButtonChange = event => {\n    console.log(`Selected priority: ${event.target.value}`);\n    setSelectedValue(event.target.value);\n  };\n\n  return (\n    <>\n      <FilterContainer>\n        <Title>Label color</Title>\n        <BtnShowAll type=\"button\" onClick={handleShowAll}>\n          Show all\n        </BtnShowAll>\n      </FilterContainer>\n      <FormControl>\n        <RadioGr\n          aria-labelledby=\"priority\"\n          name=\"radio-buttons-group\"\n          value={selectedValue}\n          onChange={handleRadioButtonChange}\n        >\n          {radioButtons.map(button => (\n            <FormControlLabel\n              key={button.value}\n              sx={{\n                color: button.color,\n                '& .Mui-checked.MuiRadio-root': {\n                  color: button.checkedColor,\n                },\n                '& .MuiSvgIcon-root': {\n                  fontSize: 14,\n                },\n                '& .MuiFormControlLabel-label': {\n                  fontSize: 12,\n                },\n                '& .MuiButtonBase-root.MuiRadio-root': {\n                  color: button.checkedColor,\n                  padding: 0,\n                  backgroundColor:\n                    selectedValue === button.value\n                      ? 'transparent'\n                      : button.buttonColor,\n                },\n                '& .MuiTypography-root': {\n                  marginLeft: 1,\n                  color:\n                    selectedValue === button.value\n                      ? primaryTextColor\n                      : 'inherit',\n                },\n              }}\n              value={button.value}\n              control={<Radio />}\n              label={button.label}\n            />\n          ))}\n        </RadioGr>\n      </FormControl>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  position: relative;\n\n  width: 302px;\n  height: auto;\n\n  box-sizing: border-box;\n\n  border-radius: 8px;\n  border: 1px solid var(--modalBorderColor);\n  background: var(--themeListBgColor);\n  padding: 24px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.05);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  right: 14px;\n  top: 14px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 16px;\n  height: 16px;\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  border: none;\n`;\n\nexport const SvgIcons = styled.svg`\n  stroke: var(--primaryTextColor);\n`;\n\nexport const ModalHeader = styled.h4`\n  color: var(--primaryTextColor);\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  padding-bottom: 14px;\n  border-bottom: 1px solid var(--modalGorizontalBorderColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const Wraper = styled.div`\n  position: absolute;\n  z-index: 999;\n  top: 32px;\n  right: 0;\n`;\n","import React, { useRef } from 'react';\nimport sprite from '../../images/sprite.svg';\nimport { BgChange } from './BgChange/BgChange';\nimport { Filter } from './Filter/Filter';\nimport {\n  ModalContainer,\n  ModalHeader,\n  CloseButton,\n  SvgIcons,\n  Wraper,\n} from './PopUpFilter.styled';\n\nexport const PopUpFilter = ({ onClose }) => {\n  const modalRef = useRef(null);\n\n  const handleClickOutside = event => {\n    if (modalRef.current && !modalRef.current.contains(event.target)) {\n      onClose();\n    }\n  };\n\n  return (\n    <Wraper onClick={handleClickOutside}>\n      <ModalContainer ref={modalRef}>\n        <CloseButton type=\"button\" onClick={onClose}>\n          <SvgIcons aria-label=\"close modal select icon\" width={18} height={18}>\n            <use href={`${sprite}#icon-x-close`}></use>\n          </SvgIcons>\n        </CloseButton>\n        <ModalHeader>Filters</ModalHeader>\n        <BgChange />\n        <Filter />\n      </ModalContainer>\n    </Wraper>\n  );\n};\n","import React, { useState } from 'react';\nimport { Wrapper } from '../ProjectOfficeStyle';\nimport { BtnFilter, Title, SvgIcons, FilterText } from './ProjectOfficeHeaderStyle';\nimport sprite from '../../../images/sprite.svg';\nimport { PopUpFilter } from 'components/PopUpFilter/PopUpFilter';\n\nconst ProjectOfficeHeader = () => {\n  const [isPopUpVisible, setPopUpVisible] = useState(false);\n\n  const togglePopUp = () => {\n    setPopUpVisible(!isPopUpVisible);\n  };\n\n  const handleClosePopUp = () => {\n    setPopUpVisible(false);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Title>Project office</Title>\n\n        <BtnFilter type=\"button\" onClick={togglePopUp}>\n          <SvgIcons aria-label=\"filter icon\" width={18} height={18}>\n            <svg>\n              <use xlinkHref={`${sprite}#icon-filter`} />\n            </svg>\n          </SvgIcons>\n          <FilterText>Filters</FilterText>\n        </BtnFilter>\n        {isPopUpVisible && <PopUpFilter onClose={handleClosePopUp} />}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default ProjectOfficeHeader;\n","import { CustomButton } from 'components/Button/CustomButton';\nimport { useState } from 'react';\n\nimport { StackWrapper } from '../ProjectOfficeStyle';\n\nimport { ModalColumn } from 'components/Modal/ModalColumn/ModalColumn';\n// import { useParams } from 'react-router-dom';\n\nconst AddColumnButton = ({ handleAddColumn }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  // const columns = [\n  //   { columnName: 'one', id: 1 },\n  //   { columnName: 'two', id: 2 },\n  // ];\n\n  const handleToggleModal = () => {\n    setIsOpen(prevstate => !prevstate);\n  };\n\n  // const handleCreateColumn = (columnName) => {\n  //   //   const newArr = [...columns, { id: 4, columnName: columnName }];\n  //     console.log(columns)\n  // }\n\n  return (\n    <>\n      <StackWrapper direction=\"row\" spacing={2}>\n        <CustomButton isWhiteBackground={true} onClick={handleToggleModal}>\n        Add another column\n        </CustomButton>\n        <ModalColumn\n          isOpen={isOpen}\n          onClose={handleToggleModal}\n          onRemove={handleAddColumn}\n        />\n        {/* <ButtonStyled startIcon={<AddIconStyled />}>\n                Add another column\n            </ButtonStyled> */}\n      </StackWrapper>\n    </>\n  );\n};\n\nexport default AddColumnButton;\n","import styled from 'styled-components';\n\nconst baseBgUrl =\n  'https://res.cloudinary.com/dxhypjavs/image/upload/v1687378707/command_project_task_pro_images/';\n\nexport const BackgroundContainer = styled.div`\n  /* background-color: red; */\n\n  height: 100%;\n  background-size: cover;\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-color: ${props => (props.bgnumber ? 'initial' : 'transparent')};\n\n  @media screen and (max-width: 374px) {\n    background-image: ${props =>\n      `url(${baseBgUrl}mobile/bg-image-${props.bgnumber}.jpg)`};\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (max-width: 374px),\n    screen and (min-resolution: 192dpi) and (max-width: 374px),\n    screen and (min-resolution: 2dppx) and (max-width: 374px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}mobile/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n\n  @media screen and (min-width: 375px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}tablet/bg-image-${props.bgnumber}.jpg)`};\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 375px),\n    screen and (min-resolution: 192dpi) and (min-width: 375px),\n    screen and (min-resolution: 2dppx) and (min-width: 375px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}tablet/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n\n  @media screen and (min-width: 768px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}desktop/bg-image-${props.bgnumber}.jpg)`};\n  }\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 768px),\n    screen and (min-resolution: 192dpi) and (min-width: 768px),\n    screen and (min-resolution: 2dppx) and (min-width: 768px) {\n    background-image: ${props =>\n      `url(\n      ${baseBgUrl}desktop/bg-image-${props.bgnumber}_2x.jpg)`};\n  }\n`;\n","// import { useState } from 'react';\n\nimport ProjectOfficeItem from './ProjectOfficeItem/ProjectOfficeItem';\nimport { useEffect } from 'react';\n// import { getColumns } from 'services/fetchColumn';\nimport ProjectOfficeHeader from './ProjectOfficeHeader/ProjectOfficeHeader';\nimport AddColumnButton from './AddColumnsButton/AddColumnsButton';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addColumn, deleteColumn, getColumnsForBoard, updateColumn } from 'redux/dashboards/operation';\nimport {\n  selectColumnsForBoard,\n  selectDashboards,\n} from 'redux/dashboards/selectors';\nimport { Box } from '@mui/material';\nimport { BackgroundContainer } from './ProjectOfficeBgContainer.styled';\n\n\nconst ProjectOffice = () => {\n  const isLoading = useSelector(state => state.dashboard.isLoading);\n  const { boardName } = useParams();\n  const columns = useSelector(state => selectColumnsForBoard(state, boardName));\n  const dashboards = useSelector(selectDashboards);\n  const currentBoard = dashboards.find(board => board._id === boardName);\n  const dispatch = useDispatch();\n  \n  const handleDeletecolumn = async (boardId, columnId) => {\n    await dispatch(deleteColumn({ boardId, columnId }));\n    dispatch(getColumnsForBoard(boardName));\n  };\n\n\n  const handleEditColumnName = async ({ boardId, columnId, title }) => {\n    await dispatch(updateColumn({ boardId, columnId, title }));\n    console.log('UPADATE NAME NEW')\n    dispatch(getColumnsForBoard(boardName));\n    \n  };\n\n\n\n  const handleAddColumn = columnName => {\n    dispatch(addColumn({ title: columnName, boardId: boardName }));\n  };\n\n  useEffect(() => {\n    dispatch(getColumnsForBoard(boardName));\n  }, [dispatch, boardName]);\n\n\n\n\n\n  return (\n    // <Box sx={{ marginLeft: '20%' }}>\n    <BackgroundContainer bgnumber={currentBoard ? currentBoard.background : ''}>\n      <Box sx={{ marginLeft: 3 }}>\n        <ProjectOfficeHeader />\n        {!isLoading && <AddColumnButton handleAddColumn={handleAddColumn} />}\n        {/* <div style={{ display: 'flex', flexDirection: 'row' }}> */}\n        <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', gap: '10px' }}>\n          {columns ? (\n            columns.map(column => (\n              <ProjectOfficeItem\n                column={column}\n                boardId={boardName}\n                key={column._id}\n                onDelete={handleDeletecolumn}\n                handleEditColumnName={handleEditColumnName}\n              />\n            ))\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n        {/* </div> */}\n        {/* <ProjectOfficeItem column={columns} /> */}\n      </Box>\n    </BackgroundContainer>\n  );\n};\n\nexport default ProjectOffice;\n","import { useEffect } from \"react\";\nimport ProjectOffice from \"../components/ProjectOffice/ProjectOffice\";\nimport { useSelector } from \"react-redux\";\nimport { selectDashboards } from \"redux/dashboards/selectors\";\nimport { DefaultScreen } from \"components/DefaultScreen/DefaultScreen\";\n\nconst ScreensPage = () => {\n  const dashboards = useSelector(selectDashboards);\n\n  useEffect(() => {\n  }, [dashboards]);\n\n\n  console.log(dashboards);\n  return (\n    <>\n      {dashboards && dashboards.length > 0 ? <ProjectOffice /> : <DefaultScreen />} \n    </>\n  );\n};\n\nexport default ScreensPage;\n","export const selectDashboards = state => state.dashboard.dashboards;\n\nexport const selectColumnsForBoard = (state, boardId) => {\n  const board = state.dashboard.dashboards.find(board => board._id === boardId);\n  return board ? board.columns : [];\n};\n\nexport const selectCurrentDashboard = state => state.dashboard.currentDashboard;","export const images = [\n  {\n    id: 1,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-1.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-1_2x.jpg',\n  },\n  {\n    id: 2,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-2.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-2_2x.jpg',\n  },\n  {\n    id: 3,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-3.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-3_2x.jpg',\n  },\n  {\n    id: 4,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-4.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-4_2x.jpg',\n  },\n  {\n    id: 5,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-5.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-5_2x.jpg',\n  },\n  {\n    id: 6,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-6.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-6_2x.jpg',\n  },\n  {\n    id: 7,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-7.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-7_2x.jpg',\n  },\n  {\n    id: 8,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-8.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-8_2x.jpg',\n  },\n  {\n    id: 9,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-9.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-9_2x.jpg',\n  },\n  {\n    id: 10,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-10.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-10_2x.jpg',\n  },\n  {\n    id: 11,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-11.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-11_2x.jpg',\n  },\n\n  {\n    id: 12,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-12.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-12_2x.jpg',\n  },\n  {\n    id: 13,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-13.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-13_2x.jpg',\n  },\n  {\n    id: 14,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-14.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-14_2x.jpg',\n  },\n  {\n    id: 15,\n    backgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_28/c_crop,h_28,w_28/v1687378707/command_project_task_pro_images/desktop/bg-image-15.jpg',\n    retinaBackgroundImage:\n      'https://res.cloudinary.com/dxhypjavs/image/upload/c_scale,h_56/c_crop,h_56,w_56/v1687378707/command_project_task_pro_images/desktop/bg-image-15_2x.jpg',\n  },\n];"],"names":["DefaultWrapper","styled","_templateObject","_taggedTemplateLiteral","DefaultText","_templateObject2","AccentText","_templateObject3","DefaultScreen","_jsx","children","_jsxs","Wrapper","position","display","alignItems","justifyContent","paddingTop","marginRight","gap","ActionsIconsButton","flexDirection","CardFooterStyled","flexWrap","height","overflow","paddingRight","paddingLeft","CardIconsWrapper","marginTop","CardActionsStyled","CardActions","StackWrapper","Stack","width","background","borderRadius","marginBottom","CardButtonStyled","Button","color","fontSize","textTransform","AddIcon","CardStyled","props","priority","CardTitle","CardText","CardFooterTitle","_templateObject4","DividerStyled","_templateObject5","WrapperFooter","_templateObject6","WrapperText","_templateObject7","StatusWrapper","_templateObject8","StatusStyled","_templateObject9","SvgIconsStyled","_templateObject10","isSameDay","date1","date2","getDate","getMonth","getFullYear","formatDate","date","today","Date","tomorrow","optionsAllDays","toLocaleDateString","weekday","optionsNearestDays","month","setDate","concat","CustomDialog","Dialog","backgroundColor","maxWidth","padding","margin","border","hoverFocusStyles","css","CloseButton","Form","FormText","FromInput","FormTextarea","RadioGroup","RadioLabel","value","RadioButton","Wrap","_templateObject11","Text","_templateObject12","CalendarWrapp","_templateObject13","CalendarText","_templateObject14","CalendarArrow","_templateObject15","updateTask","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","boardId","columnId","taskId","data","res","wrap","_context","prev","next","axios","sent","abrupt","t0","console","log","message","stop","_x","_x2","_x3","_x4","apply","arguments","addTask","CardPopUp","isOpen","onClose","setTasks","task","_ref2","_objectSpread","_id","title","description","deadline","_useForm","useForm","defaultValues","register","handleSubmit","setValue","reset","errors","formState","onSubmit","_ref3","_res","p","map","s","_toConsumableArray","_useState","useState","toUTCString","getTime","_useState2","_slicedToArray","unixFromat","setUnixFormat","_useState3","_useState4","dateBtn","setDateBtn","_useState5","_useState6","showDatePicker","setShowDatePicker","open","type","onClick","CloseIcon","sx","style","minLength","required","pureFinalPropsSelectorFactory","placeholder","id","htmlFor","checked","prevState","href","sprite","toString","DatePicker","selected","onChange","UTC","UNIX","dateFormat","inline","minDate","exampleRequired","CustomButton","dateFormatDedline","seconds","day","monthFormat","year","deleteTask","Container","Title","changeOwnerTask","fetchTasks","_yield$axios$get","ProjectOfficePopUpCardColumn","columns","isOpenPopUp","handleTogglePopUp","dispatch","useDispatch","handleChangeOnerTask","newOwner","_yield$fetchTasks","tasks","owner","getColumnsForBoard","_Fragment","column","useSelector","state","selectColumnsForBoard","setIsOpen","setIsOpenPopUp","handleToggleModal","prevstate","handleDeleteTask","filter","CardActionArea","CardContent","component","minWidth","ActionsButton","StyledTitle","IconButtonWrapper","direction","spacing","isWhiteBackground","StyleInput","TextField","ModalColumn","_ref$type","_ref$initialState","initialState","onRemove","onUpdate","setTitle","handleClose","fullWidth","Box","DialogTitle","fontFamily","lineHeight","top","right","cursor","DialogContent","autoFocus","name","variant","InputLabelProps","shrink","target","handleButtonClick","onDelete","handleEditColumnName","handleToggle","useEffect","fetchTasksApi","maxHeight","now","ProjectOfficeCardItem","ProjectCardAddButton","newName","FilterText","SvgIcons","BtnFilter","BgContainer","ButtonContainer","ButtonNoneBg","buttonsImg","images","BgChange","React","loadedImages","setLoadedImages","boardName","useParams","board","dashboard","dashboards","find","item","backgroundId","loadImage","imageUrl","response","fetch","ok","blob","Error","error","loadImages","_callee2","promises","results","_images","_context2","button","backgroundImage","Promise","allSettled","result","status","_callee3","_context3","dashboardIcon","updateUserBoard","backgroundSize","className","srcSet","retinaBackgroundImage","alt","RadioGr","FilterContainer","BtnShowAll","radioButtons","label","checkedColor","buttonColor","Filter","selectedValue","setSelectedValue","FormControl","event","FormControlLabel","marginLeft","control","Radio","ModalContainer","ModalHeader","Wraper","PopUpFilter","modalRef","useRef","current","contains","ref","isPopUpVisible","setPopUpVisible","xlinkHref","handleAddColumn","baseBgUrl","BackgroundContainer","bgnumber","isLoading","currentBoard","selectDashboards","handleDeletecolumn","deleteColumn","updateColumn","ProjectOfficeHeader","AddColumnButton","columnName","addColumn","ProjectOfficeItem","length","ProjectOffice"],"sourceRoot":""}